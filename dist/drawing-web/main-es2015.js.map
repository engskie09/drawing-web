{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/as-built-drawing/as-built-drawing.component.ts","./src/app/as-built-drawing/as-built-drawing.component.html","./src/app/as-built-drawing/as-built-drawing.module.ts","./src/app/as-built-drawing/as-built.routes.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/no-auth-guard.service.ts","./src/app/clients/clients-filters/clients-filters.component.ts","./src/app/clients/clients-filters/clients-filters.component.html","./src/app/clients/clients-form/clients-form.component.ts","./src/app/clients/clients-form/clients-form.component.html","./src/app/clients/clients.component.ts","./src/app/clients/clients.component.html","./src/app/clients/clients.module.ts","./src/app/core/adapters/client-adapter.ts","./src/app/core/adapters/drafter-requests-summary-adapter.ts","./src/app/core/adapters/drafter.adapter.ts","./src/app/core/adapters/drawing-category-adapter.ts","./src/app/core/adapters/drawing-request-adapter.ts","./src/app/core/adapters/index.ts","./src/app/core/adapters/project-adapter.ts","./src/app/core/adapters/tender-drawing-adapter.ts","./src/app/core/api.service.ts","./src/app/core/builders/client-builder.ts","./src/app/core/builders/drawing-request-builder.ts","./src/app/core/core.module.ts","./src/app/core/enums/drawing-status.enum.ts","./src/app/core/enums/transmittal-form-purpose.enum.ts","./src/app/core/enums/usertypes.enum.ts","./src/app/core/index.ts","./src/app/core/interceptors/error.interceptor.ts","./src/app/core/interceptors/http.token.interceptors.ts","./src/app/core/interceptors/index.ts","./src/app/core/models/audit-trail.ts","./src/app/core/models/client.ts","./src/app/core/models/drafter.ts","./src/app/core/models/drawing-request.ts","./src/app/core/models/project-configuration.ts","./src/app/core/models/project-drawing-type.ts","./src/app/core/services/auth-guard.service.ts","./src/app/core/services/clients.service.ts","./src/app/core/services/drafter-requests.service.ts","./src/app/core/services/drafter.service.ts","./src/app/core/services/drawing-category.service.ts","./src/app/core/services/drawing-request.service.ts","./src/app/core/services/jwt.service.ts","./src/app/core/services/menu-service.ts","./src/app/core/services/project-category.service.ts","./src/app/core/services/project-configuration.service.ts","./src/app/core/services/projects.service.ts","./src/app/core/services/transmittal-form.service.ts","./src/app/core/services/type-drawing.service.ts","./src/app/core/services/user.service.ts","./src/app/dashboard/admin-guard.service.ts","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/drafter-guard.service.ts","./src/app/drafter/complete-drawing-request/complete-drawing-request.component.ts","./src/app/drafter/complete-drawing-request/complete-drawing-request.component.html","./src/app/drafter/drafter.component.ts","./src/app/drafter/drafter.component.html","./src/app/drafter/drafter.module.ts","./src/app/drafter/request-summary/request-summary.component.ts","./src/app/drafter/request-summary/request-summary.component.html","./src/app/drafter/request-table-filters/request-table-filters.component.ts","./src/app/drafter/request-table-filters/request-table-filters.component.html","./src/app/drafter/requests-table/requests-table.component.ts","./src/app/drafter/requests-table/requests-table.component.html","./src/app/drawing-categories/drawing-categories-table/drawing-categories-table.component.ts","./src/app/drawing-categories/drawing-categories-table/drawing-categories-table.component.html","./src/app/drawing-categories/drawing-categories.module.ts","./src/app/drawing/add-category/add-category.component.ts","./src/app/drawing/add-category/add-category.component.html","./src/app/drawing/add-drawing/add-drawing.component.ts","./src/app/drawing/add-drawing/add-drawing.component.html","./src/app/drawing/audit-trail/audit-trail.component.ts","./src/app/drawing/audit-trail/audit-trail.component.html","./src/app/drawing/category-select/category-select.component.ts","./src/app/drawing/category-select/category-select.component.html","./src/app/drawing/drawing-category-select/drawing-category-select.component.ts","./src/app/drawing/drawing-category-select/drawing-category-select.component.html","./src/app/drawing/drawing-filters/drawing-filters.component.ts","./src/app/drawing/drawing-filters/drawing-filters.component.html","./src/app/drawing/drawing-summary-list/drawing-summary-list.component.ts","./src/app/drawing/drawing-summary-list/drawing-summary-list.component.html","./src/app/drawing/drawing-summary/drawing-summary.component.ts","./src/app/drawing/drawing-summary/drawing-summary.component.html","./src/app/drawing/drawing-table-drawing-target-date/drawing-table-drawing-target-date.component.ts","./src/app/drawing/drawing-table-drawing-target-date/drawing-table-drawing-target-date.component.html","./src/app/drawing/drawing-table-request-drawing/drawing-table-request-drawing.component.ts","./src/app/drawing/drawing-table-request-drawing/drawing-table-request-drawing.component.html","./src/app/drawing/drawing-table/drawing-table.component.ts","./src/app/drawing/drawing-table/drawing-table.component.html","./src/app/drawing/drawing.component.ts","./src/app/drawing/drawing.component.html","./src/app/drawing/drawing.module.ts","./src/app/drawing/edit-drawing/edit-drawing.component.ts","./src/app/drawing/edit-drawing/edit-drawing.component.html","./src/app/drawing/latest-transmittal-form/latest-transmittal-form.component.ts","./src/app/drawing/latest-transmittal-form/latest-transmittal-form.component.html","./src/app/drawing/project-configuration/project-configuration-item/project-configuration-item.component.ts","./src/app/drawing/project-configuration/project-configuration-item/project-configuration-item.component.html","./src/app/drawing/project-configuration/project-configuration.component.ts","./src/app/drawing/project-configuration/project-configuration.component.html","./src/app/drawing/project-configuration/project-drawing-type-item/project-drawing-type-item.component.ts","./src/app/drawing/project-configuration/project-drawing-type-item/project-drawing-type-item.component.html","./src/app/drawing/shared/drawing.service.ts","./src/app/drawing/submit-shop-drawing/submit-shop-drawing.component.ts","./src/app/drawing/submit-shop-drawing/submit-shop-drawing.component.html","./src/app/history/history-filters/history-filters.component.ts","./src/app/history/history-filters/history-filters.component.html","./src/app/history/history.module.ts","./src/app/history/shared/versioned-field/versioned-field.component.ts","./src/app/history/shared/versioned-field/versioned-field.component.html","./src/app/history/tender-drawing/tender-drawing-history/tender-drawing-history.component.ts","./src/app/history/tender-drawing/tender-drawing-history/tender-drawing-history.component.html","./src/app/history/tender-drawing/tender-drawing.component.ts","./src/app/history/tender-drawing/tender-drawing.component.html","./src/app/history/type-drawing/type-drawing-history/type-drawing-history.component.ts","./src/app/history/type-drawing/type-drawing-history/type-drawing-history.component.html","./src/app/history/type-drawing/type-drawing.component.ts","./src/app/history/type-drawing/type-drawing.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/layout/app-header/app-header.component.ts","./src/app/layout/app-header/app-header.component.html","./src/app/layout/breadcrumbs/breadcrumbs.component.ts","./src/app/layout/breadcrumbs/breadcrumbs.component.html","./src/app/layout/layout.module.ts","./src/app/layout/main-layout/main-layout.component.ts","./src/app/layout/main-layout/main-layout.component.html","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html","./src/app/projects/projects.module.ts","./src/app/request-drawings/assign-drawings/assign-drawings.component.ts","./src/app/request-drawings/assign-drawings/assign-drawings.component.html","./src/app/request-drawings/drafter-tasks/drafter-tasks.component.ts","./src/app/request-drawings/drafter-tasks/drafter-tasks.component.html","./src/app/request-drawings/drafters/drafters.component.ts","./src/app/request-drawings/drafters/drafters.component.html","./src/app/request-drawings/drawing-request/drawing-request.component.ts","./src/app/request-drawings/drawing-request/drawing-request.component.html","./src/app/request-drawings/featured-drafters/featured-drafters.component.ts","./src/app/request-drawings/featured-drafters/featured-drafters.component.html","./src/app/request-drawings/featured-requests/featured-requests.component.ts","./src/app/request-drawings/featured-requests/featured-requests.component.html","./src/app/request-drawings/request-drawing-action/request-drawing-action.component.ts","./src/app/request-drawings/request-drawing-action/request-drawing-action.component.html","./src/app/request-drawings/request-drawing/request-drawing.component.ts","./src/app/request-drawings/request-drawing/request-drawing.component.html","./src/app/request-drawings/request-drawings.component.ts","./src/app/request-drawings/request-drawings.component.html","./src/app/request-drawings/request-drawings.module.ts","./src/app/request-drawings/requests/requests.component.ts","./src/app/request-drawings/requests/requests.component.html","./src/app/shared/forms/ajax-autocomplete/ajax-autocomplete.component.ts","./src/app/shared/forms/ajax-autocomplete/ajax-autocomplete.component.html","./src/app/shared/forms/client-select/client-select.component.ts","./src/app/shared/forms/client-select/client-select.component.html","./src/app/shared/forms/drawing-select/drawing-select.component.ts","./src/app/shared/forms/drawing-select/drawing-select.component.html","./src/app/shared/forms/upload-input/upload-input.component.ts","./src/app/shared/forms/upload-input/upload-input.component.html","./src/app/shared/forms/value-not-equal-to.directive.ts","./src/app/shared/shared.module.ts","./src/app/shop-drawing/shop-drawing.component.ts","./src/app/shop-drawing/shop-drawing.component.html","./src/app/shop-drawing/shop-drawing.module.ts","./src/app/shop-drawing/shop-drawing.routes.ts","./src/app/tender-drawing/tender-drawing-routes.ts","./src/app/tender-drawing/tender-drawing.component.ts","./src/app/tender-drawing/tender-drawing.component.html","./src/app/tender-drawing/tender-drawing.module.ts","./src/app/transmittal-forms/add-transmittal-form-item/add-transmittal-form-item.component.ts","./src/app/transmittal-forms/add-transmittal-form-item/add-transmittal-form-item.component.html","./src/app/transmittal-forms/create-transmittal-form/create-transmittal-form.component.ts","./src/app/transmittal-forms/create-transmittal-form/create-transmittal-form.component.html","./src/app/transmittal-forms/transmittal-form-item/transmittal-form-item.component.ts","./src/app/transmittal-forms/transmittal-form-item/transmittal-form-item.component.html","./src/app/transmittal-forms/transmittal-form/transmittal-form.component.ts","./src/app/transmittal-forms/transmittal-form/transmittal-form.component.html","./src/app/transmittal-forms/transmittal-forms.component.ts","./src/app/transmittal-forms/transmittal-forms.component.html","./src/app/transmittal-forms/transmittal-forms.module.ts","./src/app/transmittal-forms/transmittal-forms.routes.ts","./src/app/type-drawing/type-drawing.component.ts","./src/app/type-drawing/type-drawing.component.html","./src/app/type-drawing/type-drawing.module.ts","./src/app/type-drawing/type-drawing.routes.ts","./src/app/unauthorized/unauthorized.component.ts","./src/app/unauthorized/unauthorized.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DrawingComponent } from './drawing/drawing.component';\nimport { DrawingModule } from './drawing/drawing.module';\nimport { HomeComponent } from './home/home.component';\nimport { HomeModule } from './home/home.module';\nimport { AuthGuard } from './core/services/auth-guard.service';\nimport { RequestDrawingsModule } from './request-drawings/request-drawings.module';\nimport { RequestDrawingsComponent } from './request-drawings/request-drawings.component';\nimport { AppComponent } from './app.component';\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'project/:id',\n    component: DrawingComponent,\n    canActivate: [\n      AuthGuard,\n    ]\n  },\n  {\n    path: 'drawing-requests',\n    component: RequestDrawingsComponent,\n    canActivate: [\n      AuthGuard,\n    ]\n  },\n  {\n    path: 'unauthorized',\n    component: UnauthorizedComponent,\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes), \n    DrawingModule, \n    HomeModule,\n    RequestDrawingsModule\n  ],\n  exports: [RouterModule],\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './core/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'drawing-web';\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n  ) {}\n\n  async ngOnInit() {\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    this.userService.checkUser();\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from './layout/layout.module';\n\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './core/core.module';\nimport { MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { AuthModule } from './auth/auth.module';\nimport { AuthGuard } from './core/services/auth-guard.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { DrawingCategoriesModule } from './drawing-categories/drawing-categories.module';\n// import { ColorPickerModule } from \"ngx-color-picker\";\nimport { ColorSketchModule } from 'ngx-color/sketch';\nimport { SwiperModule, SWIPER_CONFIG, SwiperConfigInterface } from 'ngx-swiper-wrapper';\nimport { SignaturePadModule } from \"angular2-signaturepad\";\n\nconst DEFAULT_SWIPER_CONFIG: SwiperConfigInterface = {\n  direction: 'horizontal',\n  slidesPerView: 'auto'\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    UnauthorizedComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    SweetAlert2Module.forRoot(),\n    DashboardModule,\n    HttpClientModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    CoreModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthModule,\n    FlexLayoutModule,\n    ContentLoaderModule,\n    DrawingCategoriesModule,\n    MatAutocompleteModule,\n    ColorSketchModule,\n    SwiperModule,\n    SignaturePadModule,\n  ],\n  providers: [\n    AuthGuard,\n    {provide: MAT_DATE_LOCALE, useValue: 'en-SG'},\n    {\n      provide: SWIPER_CONFIG,\n      useValue: DEFAULT_SWIPER_CONFIG,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DrawingService } from '../drawing/shared/drawing.service';\nimport { TypeDrawingService } from '../core/services/type-drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-as-built-drawing',\n  templateUrl: './as-built-drawing.component.html',\n  styleUrls: ['./as-built-drawing.component.scss']\n})\nexport class AsBuiltDrawingComponent implements OnInit {\n  asBuiltDrawing;\n\n  get drawingTitle(): string {\n    return this.asBuiltDrawing && this.asBuiltDrawing.drawing_no ? this.asBuiltDrawing.drawing_no : this.asBuiltDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private typeDrawingService: TypeDrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.typeDrawingService.getAsBuiltDrawing(id);\n    })).subscribe(res => {\n      this.asBuiltDrawing = res.data;\n    });\n  }\n\n}\n","<h1 *ngIf='asBuiltDrawing'>As Built Drawing - {{ drawingTitle }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AsBuiltDrawingComponent } from './as-built-drawing.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HistoryModule } from '../history/history.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [AsBuiltDrawingComponent],\n  imports: [\n    LayoutModule,\n    CommonModule,\n    HistoryModule,\n    RouterModule,\n  ]\n})\nexport class AsBuiltDrawingModule { }\n","import { TypeDrawingComponent as TypeDrawingHistoryComponent } from '../history/type-drawing/type-drawing.component';\nimport { AsBuiltDrawingComponent } from './as-built-drawing.component';\n\n\nexport const AS_BUILT_DRAWINGS_ROUTES = {\n  path: 'as-built-drawings',\n  data: {\n    type: 'as-built'\n  },\n  children: [\n    {\n      path: ':drawingId',\n      component: AsBuiltDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TypeDrawingHistoryComponent,\n          data: {\n            type: 'as-built'\n          },\n        }\n      ]\n    }\n  ]\n}\n","import { Routes, RouterModule } from \"@angular/router\";\nimport { AuthComponent } from './auth.component';\nimport { NgModule } from '@angular/core';\nimport { NoAuthGuard } from './no-auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: AuthComponent,\n    canActivate: [NoAuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    NoAuthGuard\n  ]\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  loginForm;\n  loading: Boolean = false\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n  ) { \n    this.loginForm = this.formBuilder.group({\n      username: '',\n      password: '',\n    })\n  }\n\n  ngOnInit(): void {\n    // this.userService.isAuthenticated.subscribe(\n    //   (authenticated) => {\n    //     if(authenticated) {\n    //       this.router.navigateByUrl('/')\n    //     }\n    //   }\n    // )\n  }\n\n  onFormSubmit($event, loginDetails): void {\n    $event.preventDefault();\n  \n    this.loading = true\n\n    this.userService.attemptLogin(loginDetails).subscribe(res => {\n      this.loading = false\n      this.router.navigateByUrl('/')\n    }, err => {\n      this.loading = false\n      console.log(err)\n    });\n  }\n\n}\n","<div class=\"login\">\n  <div class=\"login-form\">\n    <div class=\"login-form__logo\">\n      <img src=\"../../assets/logo.png\" alt=\"SBHE\">\n    </div>\n    <div class=\"login-form__form\">\n      <form [formGroup]='loginForm' (ngSubmit)='onFormSubmit($event, loginForm.value)'>\n        <mat-form-field class='login-form__form-control'>\n          <mat-label>Username</mat-label>\n          <mat-icon matPrefix>person</mat-icon>\n          <input matInput type=\"text\" formControlName='username'>\n        </mat-form-field>\n        <mat-form-field class='login-form__form-control'>\n          <mat-label>Password</mat-label>\n          <mat-icon matPrefix>lock</mat-icon>\n          <input matInput type=\"password\" formControlName='password'>\n        </mat-form-field>\n        <button mat-raised-button color='primary' [disabled]='loading'>\n          Login\n        </button>\n      </form>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './auth.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { UserService } from '../core/services/user.service';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { NoAuthGuard } from './no-auth-guard.service';\n\n\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    UserService,\n    NoAuthGuard,\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from \"@angular/core\";\nimport { \n  CanActivate, \n  ActivatedRouteSnapshot, \n  RouterStateSnapshot, \n  Router \n} from '@angular/router';\nimport { UserService } from '../core/services/user.service';\nimport { take, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class NoAuthGuard implements CanActivate{\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.isAuthenticated.pipe(map(authenticated => {\n      if(!authenticated) return true;\n\n      this.router.navigateByUrl('/');\n      return false;\n     }));\n  }\n}","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-clients-filters',\n  templateUrl: './clients-filters.component.html',\n  styleUrls: ['./clients-filters.component.scss']\n})\nexport class ClientsFiltersComponent implements OnInit {\n  searchTerm: FormControl = new FormControl();\n\n  @Output() onSearchTermChange: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this.searchTerm.valueChanges.pipe(debounceTime(700)).subscribe(value => {\n      this.onSearchTermChange.emit(value);\n    });\n  }\n\n  ngOnInit(): void {}\n\n}\n","<div class=\"requests-table-filters\">\n  <div\n    fxLayout='row'\n    fxLayoutAlign='space-between end'\n  >\n    <div\n      fxFlex='0 0 25%'\n    >\n      <mat-form-field class='request-table-filters__search-term form-control' appearance='outline'>\n        <mat-label>Search</mat-label>\n        <input matInput [formControl]='searchTerm' type='text' name='search_term'/>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { Client } from 'src/app/core/models/client';\n\n@Component({\n  selector: 'app-clients-form',\n  templateUrl: './clients-form.component.html',\n  styleUrls: ['./clients-form.component.scss'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ClientsFormComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ClientsFormComponent),\n      multi: true\n    }\n  ],\n})\nexport class ClientsFormComponent implements OnInit, ControlValueAccessor {\n  clientForm: FormGroup;\n  _client: Client = {} as Client;\n\n  @Input() set client(client: Client) {\n    this._client = client;\n    if (client) {\n      const value = {\n        refFormat: client.refFormat ? client.refFormat : '',\n        country: client.country ? client.country : '',\n        city: client.city ? client.city : '',\n        zipCode: client.zipCode ? client.zipCode : '',\n        address: client.address ? client.address : ''      \n      }\n\n      this.clientForm.setValue(value)\n    }\n  }\n\n  get client(): Client {\n    return this._client;\n  }\n\n  @Input() loading: boolean;\n\n  get value(): ClientFormValues {\n    return this.clientForm.value;\n  }\n\n  get refFormat(): string {\n    return this.clientForm.get('refFormat').value ? this.clientForm.get('refFormat').value  : '';\n  }\n\n  set value(value: ClientFormValues) {\n    this.clientForm.setValue(value);\n    this.onChange(value);\n    this.onTouched();\n  }\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { \n    this.clientForm = this.formBuilder.group({\n      refFormat: new FormControl(this.extractClientValue(\"refFormat\"), [Validators.required]),\n      city: new FormControl(this.extractClientValue(\"city\"), [Validators.required]),\n      country: new FormControl(this.extractClientValue(\"country\"), [Validators.required]),\n      zipCode: new FormControl(this.extractClientValue(\"zipCode\"), [Validators.required]),\n      address: new FormControl(this.extractClientValue(\"address\"), [Validators.required]),\n    });\n\n    this.clientForm.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n\n    if (value === null) {\n      this.clientForm.reset();\n    }\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if(isDisabled) {\n      this.clientForm.disable();\n    } else {\n      this.clientForm.enable();\n    }\n  }\n\n  validate(_: FormControl) {\n    return this.clientForm.valid ? null : { client: { valid: false, } }\n  }\n\n  extractClientValue(key) {\n    return this.client && this.client[key] ? this.client[key] : '';\n  }\n}\n\nexport interface ClientFormValues {\n  name?: string;\n  address: string;\n  country: string;\n  city: string;\n  zipCode: string;\n  refFormat: string;\n}","<div class='client-form' [formGroup]='clientForm'>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between flex-start'\n  >\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Street Address: </mat-label>\n        <input matInput formControlName='address'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>City: </mat-label>\n        <input matInput formControlName='city'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n  </div>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between flex-start'\n  >\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Country: </mat-label>\n        <input matInput formControlName='country'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Zip Code: </mat-label>\n        <input matInput formControlName='zipCode'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n  </div>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between flex-start'\n  >\n  </div>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n  >\n    <div\n      fxFlex='0 0 calc(50%)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Reference No. Format: </mat-label>\n        <input matInput formControlName='refFormat'>\n        <mat-hint>Sample Reference No: {{ refFormat ? refFormat + '01' : '-' }}</mat-hint>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormControl } from '@angular/forms';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { map, switchMap, concatMap } from 'rxjs/operators';\nimport { Project } from '../core/models/project';\nimport { Client } from '../core/models/client';\nimport { ClientsService } from '../core/services/clients.service';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n  project: Project;\n  successMessage: string = '';\n  client: Client;\n  clientForm: FormControl;\n  loading: boolean = false;\n  isSubmitting: boolean = false;\n\n  @ViewChild('successConfirmation') successConfirmation: SwalComponent;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private projectService: ProjectsService,\n    private clientService: ClientsService,\n  ) { \n    this.clientForm = new FormControl();\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.route.paramMap.pipe(\n      concatMap((res: ParamMap) => {\n        const projectId = res.get('id');\n        return this.projectService.getProject(projectId);\n      }),\n      concatMap((project) => {\n        this.project = project;\n        return this.projectService.getClient(project.id);\n      })\n    ).subscribe(client => {\n      this.client = client;\n      this.loading = false;\n    });\n  }\n\n  handleFormSubmit() {\n    const formValue = this.clientForm.value;\n\n    const body = {\n      project_id: this.project.id,\n      ref_format: formValue.refFormat,\n      address: formValue.address,\n      city: formValue.city,\n      country: formValue.country,\n      zip_code: formValue.zipCode,\n    }\n\n    this.isSubmitting = true;\n\n    this.clientService.addClient(body).subscribe(res => {\n      this.isSubmitting = false;\n      this.successConfirmation.fire();\n    });\n  }\n}\n","<div class=\"clients\">\n  <h1 *ngIf='client'>{{ client.name }}</h1>\n  <div class=\"header-loader\" *ngIf='!client'>\n    <content-loader [style]='{width: \"300px\"}' height=\"100\">\n      <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"40px\" />\n    </content-loader>\n  </div>\n  <mat-card>\n    <mat-card-content>\n      <form (submit)='handleFormSubmit()'>\n        <div class=\"clients__form\">\n          <app-clients-form \n            [formControl]='clientForm'\n            [client]='client'\n            [loading]='loading'\n          >\n          </app-clients-form>\n        </div>\n        <button mat-raised-button color='primary' [disabled]='clientForm.invalid || isSubmitting'>Submit</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n>\n</swal>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientsComponent } from './clients.component';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { ClientsService } from '../core/services/clients.service';\nimport { ClientsFiltersComponent } from './clients-filters/clients-filters.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ClientsFormComponent } from './clients-form/clients-form.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { MatMenuModule } from '@angular/material/menu';\n\n\n\n@NgModule({\n  declarations: [ClientsComponent, ClientsFiltersComponent, ClientsFormComponent],\n  imports: [\n    CommonModule,\n    AppLayoutModule,\n    ContentLoaderModule,\n    MatCardModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    SweetAlert2Module,\n    ContentLoaderModule,\n  ],\n  providers: [\n    ClientsService,\n  ],\n})\nexport class ClientsModule { }\n","import { Injectable } from '@angular/core';\nimport { ClientBuilder } from '../builders/client-builder';\nimport { Client } from '../models/client';\n\n// TODO: Add Project Relationship.\n@Injectable()\nexport class ClientAdapter {\n  adapt(request): Client  {\n    const {\n      id,\n      client_name: name,\n      city,\n      address,\n      country,\n      zip_code,\n      ref_format,\n    } = request;\n    \n    const client = new ClientBuilder(id, name)\n      .setAddress(address)\n      .setRefFormat(ref_format)\n      .setCity(city)\n      .setCountry(country)\n      .setZipCode(zip_code)\n      .build();\n\n    return client;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { DrafterRequestsSummary } from '../models/drafter-requests-summary';\n\n@Injectable()\nexport class DrafterRequestsSummaryAdapter {\n  adapt(res): DrafterRequestsSummary {\n    return {\n      assigned: res.assigned,\n      completed: res.completed,\n      rejected: res.rejected,\n      approved: res.approved,\n      total: res.total,\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { Drafter } from '../models/drafter';\n\n@Injectable()\nexport class DrafterAdapter {\n  adapt(request): Drafter {\n    const {\n      first_name,\n      last_name,\n      avatar,\n      id,\n      drawing_requests,\n      status,\n    } = request;\n\n    const drafter = new Drafter({\n      id,\n      avatar,\n      drawingRequests: drawing_requests,\n      firstName: first_name,\n      lastName: last_name,\n      status,\n    });\n\n    return drafter;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { DrawingCategory } from '../models/drawing-category';\n\n@Injectable()\nexport class DrawingCategoryAdapter {\n  adapt(request): DrawingCategory {\n    const {\n      category_name\n    } = request;\n\n    return {\n      id: request.id,\n      name: category_name,\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { Drafter } from '../models/drafter';\nimport { User } from '../services/user.service';\nimport { DrawingRequestBuilder } from '../builders/drawing-request-builder';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { TenderDrawing } from '../models/tender-drawing';\nimport { ProjectDrawingType } from '../models/project-drawing-type';\n\n@Injectable()\nexport class DrawingRequestAdapter {\n  adapt(request) {\n    const {\n      assigned_to: assignedToUser,\n      requested_by: requestedByUser,\n      subject,\n      request_date,\n      target_date,\n      status,\n      drawing_file,\n      completed_drawing_file,\n      drawing,\n      id,\n      comments,\n      drawing_type,\n    } = request;\n\n    const assignedTo = new Drafter({\n      id: assignedToUser.id,\n      firstName: assignedToUser.first_name,\n      lastName: assignedToUser.last_name,\n      status: 'IN',\n      drawingRequests: [],\n      avatar: ''\n    });\n\n    const tenderDrawing: TenderDrawing = {\n      no: drawing ? drawing.drawing_no : '',\n      title: drawing ? drawing.drawing_title : '',\n      targetDate: drawing ? drawing.drawing_target_date : '',\n      titleDate: drawing ? drawing.drawing_title_date : '',\n      drawingFile: drawing ? drawing.drawing_file_upload : '',\n      category: drawing && drawing.category ? drawing.category.category_name : '',\n      projectId: drawing ?  drawing.project_id : '',\n      employeeId: drawing ? drawing.employee_id : '',\n      id: drawing ? drawing.id : '',\n      currentDrawingNo: drawing ? drawing.current_drawing_no : '',\n      projectName: drawing && drawing.project ? drawing.project.title : '',\n    }\n\n    const requestedBy = new User({\n      id: requestedByUser.id,\n      employeeId: requestedByUser.id,\n      avatar: requestedByUser.avatar,\n      roleId: requestedByUser.role_id,\n      companyId: requestedByUser.companyId,\n      firstName: requestedByUser.first_name,\n      lastName: requestedByUser.last_name\n    });\n\n    const drawingType = new ProjectDrawingType(\n      drawing_type ? drawing_type.id : '',\n      drawing_type ? drawing_type.project_id : '',\n      drawing_type ? drawing_type.type : '',\n    ).setColor(drawing_type ? drawing_type.color : '' )\n    .setOrder(drawing_type ? drawing_type.order : '' );\n\n    const drawingRequest = new DrawingRequestBuilder(\n      id,\n      subject,\n      request_date,\n      target_date,\n    )\n    .setAssignedTo(assignedTo)\n    .setStatus(status)\n    .setRequestedBy(requestedBy)\n    .setDrawing(tenderDrawing)\n    .setDrawingFile(drawing_file)\n    .setCompletedDrawingFile(completed_drawing_file)\n    .setComments(comments)\n    .setDrawingType(drawingType)\n    .build();\n\n    return drawingRequest;\n  }\n}\n","export * from './client-adapter'\nexport * from './project-adapter'","import { Injectable } from \"@angular/core\";\nimport { Project } from '../models/project';\n\n@Injectable()\nexport class ProjectAdapter {\n  adapt(request): Project {\n    const {\n      id,\n      title,\n      client_name,\n      client_address,\n      location,\n      status,\n      percentage,\n      manpower,\n      start_date,\n      end_date,\n    } = request;\n\n    const project: Project =  {\n      id,\n      title,\n      location,\n      status,\n      percentage,\n      manpower,\n      startDate: start_date,\n      endDate: end_date,\n      clientName: client_name,\n      clientAddress: client_address,\n    }\n\n    return project;\n  }\n}","import { Injectable } from '@angular/core';\nimport { TenderDrawing } from '../models/tender-drawing';\n\n@Injectable()\nexport class TenderDrawingAdapter {\n  adapt(request) {\n    const {\n      id,\n      drawing_no,\n      drawing_title,\n      current_drawing_no,\n      drawing_target_date,\n      drawing_title_date,\n      drawing_file_upload,\n      employee_id,\n      project_id,\n      category: { category_name },\n      employee,\n      project,\n    } = request;\n\n    const tenderDrawing: TenderDrawing =  {\n      no: drawing_no,\n      title: drawing_title,\n      currentDrawingNo: current_drawing_no,\n      id: id,\n      targetDate: drawing_target_date,\n      titleDate: drawing_title_date,\n      drawingFile: drawing_file_upload,\n      category: category_name,\n      employeeId: employee_id,\n      projectId: project_id,\n      employeeName: employee ? `${employee.first_name} ${employee.last_name}` : '',\n      projectName: project ? project.title : '',\n    }\n\n    return tenderDrawing;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ApiService {\n  constructor(\n    private http: HttpClient\n  ){}\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${environment.api_url}${path}`, { params })\n  }\n\n  post(path: string, body: Object = {}): Observable<any> {\n    const formData = this.createFormData(body);\n\n    return this.http.post(\n      `${environment.api_url}${path}`,\n      formData,\n    )\n  }\n\n  put(path: string, body: Object = {}): Observable<any> {\n    const formData = new FormData()\n\n    Object.keys(body).forEach((value, key) => {\n      formData.append(value, body[value])\n    })\n    \n    return this.http.put(\n      `${environment.api_url}${path}`,\n      formData,\n    )\n  }\n\n  delete(path: string): Observable<any> {\n    return this.http.delete(`${environment.api_url}${path}`)\n  }\n\n  createFormData(object: Object, form?: FormData, namespace?: string): FormData {\n    const formData = form || new FormData();\n\n    for (let property in object) {\n      if (!object.hasOwnProperty(property) && object[property] == null && object[property] === undefined) {\n        continue;\n      }\n      const formKey = namespace ? `${namespace}[${property}]` : property;\n      if (object[property] instanceof Date) {\n        formData.append(formKey, object[property].toISOString());\n      } else if (typeof object[property] === 'object' && !(object[property] instanceof File) && !(object[property] instanceof Blob)) {\n        this.createFormData(object[property], formData, formKey);\n      } else {\n        formData.append(formKey, object[property]);\n      }\n    }\n    return formData;\n  }\n}","import { Client } from '../models/client';\n\nexport class ClientBuilder {\n  private _id: string;\n  private _name: string;\n  private _address: string;\n  private _city: string;\n  private _country: string;\n  private _zipCode: string;\n  private _refFormat: string;\n\n  constructor(\n    id: string,\n    name: string,\n  ) {\n    this._id = id;\n    this._name = name;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  setId(id: string): ClientBuilder {\n    this._id = id;\n\n    return this;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  setName(name: string): ClientBuilder {\n    this._name = name;\n\n    return this;\n  }\n\n  get address(): string {\n    return this._address;\n  }\n\n  setAddress(address: string): ClientBuilder {\n    this._address = address;\n\n    return this;\n  }\n\n  get refFormat(): string {\n    return this._refFormat;\n  }\n\n  setRefFormat(format: string): ClientBuilder {\n    this._refFormat = format;\n\n    return this;\n  }\n\n  get city(): string {\n    return this._city;\n  }\n\n  setCity(city: string): ClientBuilder {\n    this._city = city;\n\n    return this;\n  }\n\n  get country(): string {\n    return this._country;\n  }\n\n  setCountry(country: string): ClientBuilder {\n    this._country = country;\n\n    return this;\n  }\n\n  get zipCode(): string {\n    return this._zipCode;\n  }\n\n  setZipCode(zipCode: string): ClientBuilder {\n    this._zipCode = zipCode;\n\n    return this;\n  }\n\n  build(): Client {\n    return new Client(this);\n  }\n}","import { User } from '../services/user.service';\nimport { DrawingRequest } from '../models/drawing-request';\nimport { Drafter } from '../models/drafter';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { TenderDrawing } from '../models/tender-drawing';\nimport { ProjectDrawingType } from '../models/project-drawing-type';\n\n\nexport class DrawingRequestBuilder {\n  private _id: string;\n  private _subject: string;\n  private _requestDate: string;\n  private _targetDate: string;\n  private _assignedTo: Drafter;\n  private _status: DrawingRequestStatus;\n  private _requestedBy: User;\n  private _drawing: TenderDrawing;\n  private _drawingFile: string;\n  private _completedDrawingFile: string;\n  private _comments: string;\n  private _drawingType: ProjectDrawingType;\n\n  constructor(\n    id: string,\n    subject: string,\n    requestDate: string,\n    targetDate: string,\n  ) {\n    this._id = id;\n    this._subject = subject;\n    this._requestDate = requestDate;\n    this._targetDate = targetDate; \n    this._status = 'Assigned';\n  }\n\n  build() {\n    return new DrawingRequest(this);\n  }\n  \n  get id(): string {\n    return this._id;\n  }\n\n  get subject(): string {\n    return this._subject;\n  }\n\n  get requestDate(): string {\n    return this._requestDate;\n  }\n\n  get targetDate(): string {\n    return this._targetDate;\n  }\n  \n  get assignedTo(): Drafter {\n    return this._assignedTo;\n  }\n\n  get status(): DrawingRequestStatus {\n    return this._status;\n  }\n\n  get requestedBy(): User {\n    return this._requestedBy;\n  }\n\n  get drawingFile(): string {\n    return this._drawingFile;\n  }\n\n  get drawing(): TenderDrawing {\n    return this._drawing;\n  }\n\n  get completedDrawingFile(): string {\n    return this._completedDrawingFile;\n  }\n\n  get comments(): string {\n    return this._comments;\n  }\n\n  get drawingType(): ProjectDrawingType {\n    return this._drawingType;\n  }\n\n  setAssignedTo(drafter: Drafter) {\n    this._assignedTo = drafter;\n    return this;\n  }\n\n  setStatus(status: DrawingRequestStatus) {\n    this._status = status;\n\n    return this;\n  }\n\n  setRequestedBy(user: User) {\n    this._requestedBy = user;\n\n    return this;\n  }\n\n  setDrawingFile(drawingFile: string) {\n    this._drawingFile = drawingFile;\n    return this;\n  }\n\n  setDrawing(drawing: TenderDrawing) {\n    this._drawing = drawing;\n\n    return this;\n  }\n\n  setCompletedDrawingFile(drawingFile: string) {\n    this._completedDrawingFile = drawingFile;\n\n    return this;\n  }\n\n  setComments(comments: string) {\n    this._comments = comments;\n\n    return this;\n  }\n\n  setDrawingType(drawingType: ProjectDrawingType) {\n    this._drawingType = drawingType;\n\n    return this;\n  }\n}\n\nexport type DrawingRequestStatus = \"Completed\" | \"Assigned\";\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpTokenInterceptor, ErrorInterceptor } from './interceptors';\nimport { ApiService } from './api.service';\nimport { ProjectsService } from './services/projects.service';\nimport { JwtService } from './services/jwt.service';\nimport { DrawingRequestAdapter } from './adapters/drawing-request-adapter';\nimport { ClientAdapter } from './adapters/client-adapter';\nimport { TransmittalFormService } from './services/transmittal-form.service';\nimport { TenderDrawingAdapter } from './adapters/tender-drawing-adapter';\nimport { TypeDrawingService } from './services/type-drawing.service';\nimport { ProjectAdapter } from './adapters';\nimport { DrawingCategoryAdapter } from './adapters/drawing-category-adapter';\nimport { DrafterRequestsSummaryAdapter } from './adapters/drafter-requests-summary-adapter';\nimport { DrafterRequestsService } from './services/drafter-requests.service';\nimport { ProjectConfigurationService } from './services/project-configuration.service';\nimport { MenuService } from './services/menu-service';\nimport { DrafterAdapter } from './adapters/drafter.adapter';\nimport { ProjectCategoryService } from './services/project-category.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpTokenInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    ApiService,\n    ProjectsService,\n    TypeDrawingService,\n    TransmittalFormService,\n    DrafterRequestsService,\n    JwtService,\n    MenuService,\n    ProjectConfigurationService,\n    DrawingRequestAdapter,\n    TenderDrawingAdapter,\n    ClientAdapter,\n    ProjectAdapter,\n    DrawingCategoryAdapter,\n    DrafterRequestsSummaryAdapter,\n    DrafterAdapter,\n    ProjectCategoryService,\n  ],\n  declarations: []\n})\nexport class CoreModule {}","export enum DrawingStatus {\n  toSubmit  = 'To Submit',\n  submitted = 'Submitted',\n  resubmit  = 'ReSubmitted',\n  approved  = 'Approved',\n  rejected  = 'Rejected',\n}","export enum TransmittalFormPurposes {\n  'for information' = 0,\n  'for endorsement' = 1,\n  'for action' = 2,\n  'for review' = 3,\n  'for record' = 4,\n  'for approval' = 5,\n  'for distribution' = 6,\n  'other' = 7,\n}","export enum UserTypes {\n  Superadmin = 1,\n  Director = 2,\n  ProjectManager = 3,\n  AssistantProjectManager = 4,\n  Engineer = 5,\n  Supervisor = 6,\n  Worker = 7,\n  Safety = 8,\n  QuantitySurveyor =  9,\n  Coordinator = 10,\n  Logistic = 11,\n  Driver = 12,\n  Procurement = 13,\n  Drafter = 14,\n}\n","export * from './api.service'\nexport * from './core.module'","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { UserService } from '../services/user.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private userService: UserService, private router: Router) {}\n  \n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        this.userService.logout();\n        this.router.navigateByUrl('/login', { queryParams: { session_expired: 1 }});\n      }\n\n      return throwError(err);\n    }));\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JwtService } from '../services/jwt.service';\n\n@Injectable()\nexport class HttpTokenInterceptor implements HttpInterceptor {\n  constructor(private jwtService: JwtService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const headersConfig = {\n      // 'Content-Type': 'application/json',\n      'Accept' : 'application/json'\n    }\n\n    const token = this.jwtService.getToken();\n\n    if (token) {\n      headersConfig['Authorization'] = `Bearer ${token}`\n    }\n\n    const request = req.clone({ setHeaders: headersConfig });\n\n    return next.handle(request)\n  }\n}","export * from './http.token.interceptors'\nexport * from './error.interceptor'","import { User } from '../services/user.service';\nimport { formatDate, DatePipe } from '@angular/common';\nimport _ from 'lodash'\n\nexport class AuditTrail {\n  public drawingTitle: string;\n  public drawingNo: string;\n  public date: string;\n  public doneBy: User;\n  public oldValues: any;\n  public newValues: any;\n  public event: AuditEvents;\n\n  constructor(\n    drawingTitle: string,\n    drawingNo: string,\n    date: string,\n    doneBy: User,\n    event: AuditEvents,\n    oldValues: Object | Array<any>,\n    newValues: Object | Array<any>,\n  ) {\n    this.drawingTitle = drawingTitle;\n    this.drawingNo = drawingNo;\n    this.date = date;\n    this.doneBy = doneBy;\n    this.event = event;\n    this.oldValues = oldValues;\n    this.newValues = newValues;\n  }\n\n  public getChangedKeys(): Array<string> {\n    let changedKeys = [];\n\n    if(this.event === AuditEvents.CREATED) {\n      changedKeys = [];\n    } else {\n      changedKeys = Object.keys(this.oldValues)\n    }\n\n    return changedKeys\n  }\n\n  public displayChangedKeys(): string {\n    const changedKeys = this.getChangedKeys().map(key => {\n      return _.startCase(key);\n    });\n\n    return changedKeys.join(', ');\n  }\n}\n\nexport enum AuditEvents {\n  UPDATED = 'updated',\n  CREATED = 'created',\n}","import { ClientBuilder } from '../builders/client-builder';\n\nexport class Client {\n  id: string;\n  name: string;\n  address: string;\n  refFormat: string;\n  city: string;\n  country: string;\n  zipCode: string;\n\n  constructor(\n    private clientBuilder: ClientBuilder\n  ) {\n    this.id = clientBuilder.id;\n    this.name = clientBuilder.name;\n    this.address = clientBuilder.address;\n    this.refFormat = clientBuilder.refFormat;\n    this.zipCode = clientBuilder.zipCode;\n    this.country = clientBuilder.country;\n    this.city = clientBuilder.city;\n  }\n}","import { environment } from 'src/environments/environment';\n\nexport class Drafter {\n  public firstName: string;\n  public lastName: string;\n  public drawingRequests: Array<any>;\n  public status: string;\n  public id: string;\n  public avatar;\n\n  get completedTasks(): Array<any> {\n    return this.drawingRequests.filter(request => {\n      return request.status === 'Completed' || request.status === 'Approved'\n    })\n  }\n\n  get fullname(): string {\n    return `${this.firstName} ${this.lastName}`\n  }\n\n\n  get avatarLink(): string {\n    if(this.avatar) {\n      return `${environment.s3_url}${this.avatar.image}`;\n    }\n\n    return `${environment.s3_url}Employee/Avatar/_1551750608118_1184684_log_in_sign_up_upload_clipart_man_avatar.png`\n  }\n\n\n  constructor(\n    public drafterDetails: DrafterDetails,\n  ) {\n    const {\n      id,\n      firstName,\n      lastName,\n      status,\n      drawingRequests = [],\n      avatar = '',\n    } = drafterDetails;\n\n    this.id = id;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.drawingRequests = drawingRequests;\n    this.status = status;\n    this.avatar = avatar;\n  }\n}\n\ninterface TaskOverview {\n  assigned: number;\n  completed: number;\n}\n\ninterface DrafterDetails {\n  id: string;\n  firstName: string;\n  lastName: string;\n  status: string;\n  drawingRequests: Array<any>;\n  avatar: String;\n}\n","import { User } from '../services/user.service';\nimport { Drafter } from './drafter';\nimport { DrawingRequestBuilder } from '../builders/drawing-request-builder';\nimport { TenderDrawing } from './tender-drawing';\nimport { environment } from 'src/environments/environment';\nimport { ProjectDrawingType } from './project-drawing-type';\n\nexport class DrawingRequest {\n  public id: string;\n  public requestedBy: User;\n  public assignedTo: Drafter;\n  public requestDate: string;\n  public targetDate: string;\n  public subject: string;\n  public status: string;\n  public drawing: TenderDrawing;\n  public drawingFile: string;\n  public completedDrawingFile: string;\n  public comments: string;\n  public drawingType: ProjectDrawingType;\n\n  constructor(\n    drawingRequestBuilder: DrawingRequestBuilder,\n  ) {\n    this.id = drawingRequestBuilder.id;\n    this.subject = drawingRequestBuilder.subject;\n    this.requestDate = drawingRequestBuilder.requestDate;\n    this.targetDate = drawingRequestBuilder.targetDate;\n    this.assignedTo = drawingRequestBuilder.assignedTo;\n    this.status = drawingRequestBuilder.status;\n    this.requestedBy = drawingRequestBuilder.requestedBy;\n    this.drawing = drawingRequestBuilder.drawing;\n    this.drawingFile = drawingRequestBuilder.drawingFile;\n    this.completedDrawingFile = drawingRequestBuilder.completedDrawingFile;\n    this.comments = drawingRequestBuilder.comments;\n    this.drawingType = drawingRequestBuilder.drawingType;\n  }\n\n  get isAssigned() {\n    return this.status === \"Assigned\" || this.status === \"Rejected\";\n  }\n\n  openDrawing() {\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${this.drawingFile}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n\n  openCompletedDrawingFile() {\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${this.completedDrawingFile}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n}\n\nexport type DrawingRequestStatus = \"Completed\" | \"Assigned\" | \"Rejected\";","import { ProjectDrawingType } from './project-drawing-type';\n\nexport class ProjectConfiguration {\n  drawingTypes: Array<ProjectDrawingType> = [];\n\n  constructor(\n    drawingTypes: Array<ProjectDrawingType>,\n  ) {\n    this.drawingTypes = drawingTypes;\n  }\n}","export class ProjectDrawingType {\n  id: String | Number;\n  projectId: String | Number;\n  type: String;\n  color: String = '#ff7c00';\n  order: String | Number = 0;\n\n  constructor(\n    id: String | Number,\n    projectId: String | Number,\n    type: String,\n  ) {\n    this.id = id,\n    this.projectId = projectId;\n    this.type = type;\n  }\n\n  setColor(color: String) {\n    this.color = color;\n\n    return this;\n  }\n  \n  setOrder(order: String | Number) {\n    this.order = order;\n\n    return this;\n  }\n\n  toJson() {\n    return {\n      id: this.id,\n      project_id: this.projectId,\n      color: this.color,\n      type: this.type,\n      order: this.order,\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { \n  CanActivate, \n  ActivatedRouteSnapshot, \n  RouterStateSnapshot, \n  Router \n} from '@angular/router';\nimport { take, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ) {}\n\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.isAuthenticated.pipe(map(authenticated => {\n      if(authenticated) {\n        return true;\n      }\n\n      this.router.navigateByUrl('/login');\n      return false;\n    }));\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ClientAdapter } from '../adapters/client-adapter';\nimport { Client } from '../models/client';\n\n@Injectable()\nexport class ClientsService {\n  constructor(\n    private api: ApiService,\n    private clientAdapter: ClientAdapter,\n  ) {}\n\n  getClients(params: ClientServiceParams = {}):Observable<Client[]> {\n    const url = `/clients?search_term=${params.name ? params.name : ''}`\n\n    return this.api.get(url)\n      .pipe(map(res => {\n        return res.data.map(client => this.clientAdapter.adapt(client))\n      }));\n  }\n\n  addClient(body): Observable<any> {\n    return this.api.post('/clients', body);\n  }\n\n  editClient(id, body): Observable<any> {\n    return this.api.post(`/clients/${id}/update`, body);\n  }\n\n  deleteClient(id): Observable<any> {\n    return this.api.delete(`/clients/${id}/delete`);\n  }\n}\n\nexport interface ClientServiceParams {\n  name?: string;\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { map } from 'rxjs/operators';\nimport { DrafterRequestsSummaryAdapter } from '../adapters/drafter-requests-summary-adapter';\n\n@Injectable()\nexport class DrafterRequestsService {\n  constructor(\n    private api: ApiService,\n    private drafterRequestSummaryAdapter: DrafterRequestsSummaryAdapter,\n  ) {}\n\n  getSummary(drafterId: number | string, projectId: Number | String) {\n    const url = `/drafter/${drafterId}/tasks/summary?project_id=${projectId}`;\n\n    return this.api.get(url).pipe(\n      map(res => this.drafterRequestSummaryAdapter.adapt(res.data))\n    );\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { UserService } from './user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DrawingRequestAdapter } from '../adapters/drawing-request-adapter';\nimport { DrawingRequest } from '../models/drawing-request';\nimport { RequestTableFilters } from 'src/app/drafter/request-table-filters/request-table-filters.component';\n\n@Injectable()\nexport class DrafterService {\n  constructor(\n    private api: ApiService,\n    private user: UserService,\n    private drawingRequestAdapter: DrawingRequestAdapter,\n  ) {}\n\n  getDrafters(withCompletedTasks: Boolean = true, project_id: string | Number = ''): Observable<any> {\n    return this.api.get(`/drafters?completed_tasks=${withCompletedTasks}&project_id=${project_id}`);\n  }\n\n  getDrafter(id): Observable<any> {\n    return this.api.get(`/drafter/${id}`);\n  }\n\n  getDrafterTasks(id, params: DrafterTasksParams = {}): Observable<any> {\n    const projectId = params.projectId ? params.projectId : '';\n    const page = params.page ? params.page : 1;\n    const items = params.items ? params.items : 50;\n    const filters = params.filters;\n\n    const fromDate = filters && filters.fromDate ? filters.fromDate : '';\n    const endDate = filters && filters.endDate ?  filters.endDate : '';\n    const employeeId = filters && filters.employeeId ?  filters.employeeId : '';\n    const searchTerm = filters && filters.searchTerm ? filters.searchTerm : '';\n    const status = filters && filters.status ? filters.status : '';\n\n    const url = `/drafter/${id}/tasks?term=${searchTerm }&project_id=${projectId}&status=${status}&date_from=${fromDate}&date_to=${endDate}&requested_by=${employeeId}&items=${items}&page=${page}`;\n\n    return this.api.get(url)\n      .pipe(map(res => {\n          const drawingRequests = res.data.data.map(request => {\n            return this.drawingRequestAdapter.adapt(request)\n          });\n\n          const data: DrafterTasksData = {\n            data: drawingRequests,\n            total: res.data.total,\n            currentPage: res.data.current_page,\n          }\n\n          return data;\n      }));\n  }\n\n  getDrafterAssignedTasks(id, project_id = '', params: DrafterRequestFilters = {}, pageParams: DrafterTasksParams = {}): Observable<any> {\n    const page = pageParams.page ? pageParams.page : 1;\n    const items = pageParams.items ? pageParams.items : 50;\n    const fromDate = params.fromDate ? params.fromDate : '';\n    const endDate = params.endDate ? params.endDate : '';\n    const employeeId = params.employeeId ? params.employeeId : '';\n\n    const url = `/drafter/${id}/tasks?term=${params.searchTerm ? params.searchTerm  : ''}&project_id=${project_id}&status=${params.status}&date_from=${fromDate}&date_to=${endDate}&requested_by=${employeeId}&items=${items}&page=${page}`;\n\n    return this.api.get(url)\n      .pipe(map(res => {\n        const drawingRequests = res.data.data.map(request => {\n          return this.drawingRequestAdapter.adapt(request)\n        });\n\n        const data: DrafterTasksData = {\n          data: drawingRequests,\n          total: res.data.total,\n          currentPage: res.data.current_page,\n        }\n\n        return data;\n      }));\n  }\n\n  private adaptDrawingRequest(res): void {\n    return res.data.data.map(item => {\n      return this.drawingRequestAdapter.adapt(item);\n    });\n  }\n}\n\ninterface DrafterRequestFilters {\n  searchTerm?: string;\n  status?: string;\n  fromDate?: string;\n  endDate?: string;\n  employeeId?: string | number;\n}\n\nexport interface DrafterTasksParams {\n  projectId?: Number | String;\n  page?: Number;\n  items?: Number;\n  filters?: RequestTableFilters;\n}\n\nexport interface DrafterTasksData {\n  data: Array<DrawingRequest>,\n  total: number,\n  currentPage: number,\n}\n","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { DrawingCategoryAdapter } from '../adapters/drawing-category-adapter';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\nexport class DrawingCategoryService {\n  constructor(\n    private api: ApiService,\n    private drawingCategoryAdapter: DrawingCategoryAdapter,\n  ) {}\n\n  getCategories(): Observable<any> {\n    return this.api.get('/drawing-categories')\n            .pipe(map(res => res.data.map(category => this.drawingCategoryAdapter.adapt(category))));\n  }\n\n  addCategory(body = {}): Observable<any> {\n    return this.api.post('/drawing-category', body);\n  }\n\n  editCategory(id, body): Observable<any> {\n    return this.api.post(`/drawing-category/${id}/update`, body);\n  }\n\n  deleteCategory(id): Observable<any> {\n    return this.api.delete(`/drawing-category/${id}/delete`);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { UserService, User } from './user.service';\nimport { Observable } from 'rxjs';\nimport { DrawingRequest } from '../models/drawing-request';\nimport { map } from 'rxjs/operators';\nimport { Drafter } from '../models/drafter';\nimport { DrawingRequestAdapter } from '../adapters/drawing-request-adapter';\n\n@Injectable()\nexport class DrawingRequestService {\n  private userId;\n\n  constructor(\n    private api: ApiService,\n    private userService: UserService,\n    private drawingRequestAdapter: DrawingRequestAdapter,\n  ) {\n    this.userService.currentUser.subscribe(user => {\n      this.userId = user.employeeId;\n    })\n  }\n\n  createRequest(body): Observable<any> {\n    const postData = {\n      employee_id: this.userId,\n      ...body,\n    }\n    return this.api.post('/drawing-requests', postData);\n  }\n\n  getRequests(project_id: string | Number = '', params: DrawingRequestParams = {}): Observable<any> {\n    return this.api.get(`/drawing-requests?project_id=${project_id}&assigned_by=${params.assignedBy ? params.assignedBy : ''}&status=${params.status ? params.status : ''}`)\n      .pipe(map(res => {\n        return res.data.map(res => {\n          return this.drawingRequestAdapter.adapt(res);\n        });\n      }));\n  }\n\n  assignRequests(body): Observable<any> {\n    const drafter_requests = JSON.stringify(body);\n\n    return this.api.post('/drawing-requests/assign', {\n      drafter_requests: drafter_requests,\n    });\n  }\n\n  editRequest(body, id): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/update`, body);\n  }\n\n  completeRequest(id, body): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/complete`, body);\n  }\n\n  approveDrawing(id, comments): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/approve`, {\n      comments,\n    })\n  }\n\n  rejectDrawing(id, comments): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/reject`, {\n      comments,\n    });\n  }\n}\n\nexport interface DrawingRequestParams {\n  assignedBy?: string | Number;\n  status?: string;\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class JwtService {\n  TOKEN_KEY = 'jwtToken'\n\n\n  getToken(): string {\n    return window.localStorage[this.TOKEN_KEY];\n  }  \n  \n  saveToken(token: string) {\n    window.localStorage.setItem(this.TOKEN_KEY, token)\n  }\n\n  removeToken() {\n    window.localStorage.removeItem(this.TOKEN_KEY)\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable()\nexport class MenuService {\n  MENU_KEY = 'sbheDrawingMenu';\n\n  private menuStatusSubject = new BehaviorSubject<boolean>(false);\n  public menuStatus = this.menuStatusSubject.asObservable().pipe(distinctUntilChanged());\n\n  setMenuStatus(\n    status: boolean\n  ) {\n    this.menuStatusSubject.next(status);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { ProjectCategory } from '../models/project-category';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class ProjectCategoryService {\n  constructor(\n    private api: ApiService\n  ) {}\n\n  addCategory(id, body): Observable<any> {\n    const url = `/projects/${id}/categories`;\n\n    return this.api.post(url, body);\n  }\n\n  getCategories(id) {\n    const url = `/projects/${id}/categories`;\n\n    return this.api.get(url).pipe(\n      map(res => {\n        return res.data.map(category => {\n          const projectCategory: ProjectCategory = {\n            id: category.id,\n            projectId: category.project_id,\n            categoryName: category.category_name,\n          }\n\n          return projectCategory;\n        });\n      })\n    );\n  }\n\n  editCategory(id, categoryId, body): Observable<any> {\n    const url = `/projects/${id}/categories/${categoryId}`;\n\n    return this.api.post(url, body);\n  }\n\n  deleteCategory(id, categoryId): Observable<any> {\n    const url = `/projects/${id}/categories/${categoryId}`;\n\n    return this.api.delete(url);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { map } from 'rxjs/operators';\nimport { ProjectConfiguration } from '../models/project-configuration';\nimport { Observable } from 'rxjs';\nimport { ProjectDrawingType } from '../models/project-drawing-type';\n\n@Injectable()\nexport class ProjectConfigurationService {\n  constructor(\n    private api: ApiService\n  ) {}\n\n  getProjectDrawingTypes(projectId: String | Number): Observable<ProjectConfiguration> {\n    return this.api.get(`/projects/${projectId}/drawing-types`).pipe(map(res => {\n      const types: Array<ProjectDrawingType> = res.data.map(type => {\n        const projectDrawingType = new ProjectDrawingType(type.id, projectId, type.type);\n\n        projectDrawingType.setColor(type.color);\n        projectDrawingType.setOrder(type.order);\n\n        return projectDrawingType;\n      });\n\n      return new ProjectConfiguration(types);\n    }));\n  }\n\n  updateProjectDrawingTypes(projectId: String | Number, drawingTypes: Array<ProjectDrawingType> = []): Observable<ProjectConfiguration> {\n    const types = drawingTypes.map(type => {\n      return type.toJson();\n    });\n\n    return this.api.post(`/projects/${projectId}/drawing-types/update`, {\n      types,\n    }).pipe(map(res => {\n      return new ProjectConfiguration(res.types);\n    }));\n  }\n\n  deleteProjectDrawingType(projectId: String | Number, typeId: String | Number) {\n    return this.api.delete(`/projects/${projectId}/drawing-types/${typeId}`);\n  }\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProjectAdapter, ClientAdapter } from '../adapters';\nimport { TransmittalForm } from '../models/transmittal-form';\n\n@Injectable()\nexport class ProjectsService {\n  constructor(\n    private api: ApiService,\n    private projectAdapter: ProjectAdapter,\n    private clientAdapter: ClientAdapter,\n  ) {}\n\n  // TODO: Add projects model\n  getProjects(): Observable<any> {\n    return this.api.get('/projects').pipe(map(res => {\n      return res.data.map(project => {\n        return this.projectAdapter.adapt(project)\n      })\n    }));\n  }\n\n  getProject(id): Observable<any> {\n    return this.api.get(`/projects/${id}`).pipe(map(res => {\n      return this.projectAdapter.adapt(res.data);\n    }));\n  }\n\n  getClient(id): Observable<any> {\n    return this.api.get(`/projects/${id}/client`).pipe(map(res => {\n      if(res.data) {\n        const {\n          client_name,\n          client_address,\n          client = {},\n        } = res.data;\n\n        return this.clientAdapter.adapt({\n          client_name,\n          client_address,\n          ...client,\n        });\n      }\n\n      return;\n    }));\n  }\n\n  getProjectDrawingTypeSummary(id): Observable<any> {\n    return this.api.get(`/type-drawings/summary/${id}`).pipe(map(res => {\n      const keys = Object.keys(res.data);\n      return keys.map((key) => {\n        return {\n          ...res.data[key],\n          type: key\n        }\n      })\n    }));\n  }\n\n  getLatestTransmittalFile(id): Observable<any> {\n    return this.api.get(`/projects/${id}/transmittal-forms/latest`)\n      .pipe()\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TransmittalFormService {\n  constructor(\n    private api: ApiService,\n  ) {}\n\n  createTransmittalForm(body): Observable<any> {\n    return this.api.post('/transmittal-forms', body);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { DatePipe } from '@angular/common';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TypeDrawingService {\n  constructor(\n    public api: ApiService,\n    private datePipe: DatePipe,\n  ) {}\n\n  getTypeDrawing(id) {\n    return this.api.get(`/type-drawing/${id}`);\n  }\n\n  getShopDrawing(id) {\n    return this.api.get(`/type-drawing/${id}?type=shop`);\n  }\n\n  getAsBuiltDrawing(id) {\n    return this.api.get(`/type-drawing/${id}?type=as-built`);\n  }\n\n  getHistory(id, type, date = '') {\n    return this.api.get(`/type-drawing/history/${id}`);\n  }\n\n  getHistoryDates(id, type) {\n    return this.api.get(`/type-drawing/history/${id}/dates?type=${type}`).pipe(map(res => {\n      return res.data.map(date => {\n        return this.datePipe.transform(date, 'dd-MM-yyy')\n      });\n    }));;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, ReplaySubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, filter } from 'rxjs/operators';\nimport { ApiService } from '../api.service';\nimport { JwtService } from './jwt.service';\nimport { environment } from 'src/environments/environment';\nimport { UserTypes } from '../enums/usertypes.enum';\n\nexport class User {\n  id: string \n  employeeId: string\n  avatar: string | null\n  roleId: number\n  companyId: string\n  firstName: string\n  lastName: string\n  tokenExpiration: number\n  signature: string;\n\n  get isAdmin(): Boolean {\n    const adminUserTypes: Array<number> = [\n      UserTypes.Superadmin,\n      UserTypes.Director,\n      UserTypes.Engineer,\n      UserTypes.Supervisor,\n      UserTypes.ProjectManager,\n      UserTypes.AssistantProjectManager,\n      UserTypes.Coordinator,\n    ];\n\n    return adminUserTypes.indexOf(this.roleId) !== -1;\n  }\n\n  get isSuperadmin(): Boolean {\n    return this.roleId === UserTypes.Superadmin;\n  }\n\n  get isDrafter(): Boolean {\n    return this.roleId === UserTypes.Drafter;\n  }\n\n  get signatureLink(): string | null {\n    if(this.signature) {\n      return `${environment.s3_url}${this.signature}`;\n    }\n\n    return null;\n  }\n\n  constructor(userDetails) {\n    this.id = userDetails.id\n    this.employeeId = userDetails.employeeId\n    this.avatar = userDetails.avatar ? this.generateAvatarLink(userDetails.avatar) : this.generateDefaultAvatarLink();\n    this.roleId = userDetails.roleId\n    this.companyId = userDetails.companyId\n    this.firstName = userDetails.firstName\n    this.lastName = userDetails.lastName\n    this.tokenExpiration = userDetails.tokenExpiration ? userDetails.tokenExpiration * 1000 : null;\n    this.signature = userDetails.signaturePath;\n  }\n\n  private generateAvatarLink(avatarLink): string {\n    return `${environment.s3_url}${avatarLink}`\n  }\n\n  private generateDefaultAvatarLink(): string {\n    const defaultAvatarPath = 'Employee/Avatar/_1551750608118_1184684_log_in_sign_up_upload_clipart_man_avatar.png'\n\n    return this.generateAvatarLink(defaultAvatarPath)\n  }\n\n  public getUserFullName() {\n    return `${this.firstName} ${this.lastName}`\n  }\n}\n\n@Injectable()\nexport class UserService {\n  private currentUserSubject = new BehaviorSubject<User>(null);\n  public currentUser = this.currentUserSubject.asObservable().pipe(distinctUntilChanged(), filter(user => user !== null));\n\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\n\n  constructor(\n    private api: ApiService,\n    private tokenService: JwtService,\n  ) {}\n\n  async checkUser(){\n    const token = this.tokenService.getToken()\n\n    if(token) {\n      this.api.get('/check-token').subscribe(\n        res => {\n          const user = this.generateUserDetails({\n            ...res.data.user,\n            token_expiration: res.data.token_expiration,\n          });\n\n          this.setAuth(user, token);\n        },\n        err => {this.purgeAuth()}\n      );\n    } else {\n      this.purgeAuth();\n    }\n  }\n\n  generateUserDetails(userData): User {\n    const userDetails = {\n      id: userData.id,\n      employeeId: userData.employee_id,\n      avatar: userData.employee.avatar ? userData.employee.avatar.image : '',\n      roleId: userData.employee.role.id,\n      companyId: userData.employee.company.id,\n      firstName: userData.employee.first_name,\n      lastName: userData.employee.last_name,\n      tokenExpiration: userData.token_expiration,\n      signaturePath: userData.employee.signature_path,\n    }\n\n    const user = new User(userDetails);\n\n    return user\n  }\n\n  attemptLogin(credentials): Observable<User> {\n    return this.api.post('/login', {...credentials})\n      .pipe(\n        map(\n          data => {\n            // This is too long\n            const userData = data.data.user\n            const token = data.data.token\n            const tokenExpiration = data.data.token_expiration\n\n            const userDetails = {\n              id: userData.id,\n              employeeId: userData.employee_id,\n              avatar: userData.employee.avatar ? userData.employee.avatar.image : null,\n              roleId: userData.employee.role.id,\n              companyId: userData.employee.company.id,\n              firstName: userData.employee.first_name,\n              lastName: userData.employee.last_name,\n              signaturePath: userData.employee.signature_path,\n              tokenExpiration,\n            }\n            const user = new User(userDetails)\n\n            this.setAuth(user, token)\n            return data\n          }\n        )\n      )\n  }\n\n  setAuth(user: User, token: string, tokenExpiration = null) {\n    this.currentUserSubject.next(user)\n    this.tokenService.saveToken(token)\n    this.isAuthenticatedSubject.next(true)\n  }\n\n  logout() {\n    this.purgeAuth();\n  }\n\n  purgeAuth() {\n    this.tokenService.removeToken();\n    this.currentUserSubject.next(null as User);\n    this.isAuthenticatedSubject.next(false);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.currentUser.pipe(map(user => {\n      return !!user.isAdmin\n    }))\n  }\n}","import { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from './dashboard.component';\nimport { NgModule } from '@angular/core';\nimport { HomeModule } from '../home/home.module';\nimport { HomeComponent } from '../home/home.component';\nimport { DrafterModule } from '../drafter/drafter.module';\nimport { DrafterComponent } from '../drafter/drafter.component';\nimport { AdminGuard } from './admin-guard.service';\nimport { DrafterGuard } from './drafter-guard.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { DrawingComponent } from '../drawing/drawing.component';\nimport { RequestDrawingsModule } from '../request-drawings/request-drawings.module';\nimport { RequestDrawingsComponent } from '../request-drawings/request-drawings.component';\nimport { ClientsComponent } from '../clients/clients.component';\nimport { ClientsModule } from '../clients/clients.module';\nimport { TRANSMITTAL_FORMS_ROUTES } from '../transmittal-forms/transmittal-forms.routes';\nimport { TENDER_DRAWING_ROUTES } from '../tender-drawing/tender-drawing-routes';\nimport { TenderDrawingModule } from '../tender-drawing/tender-drawing.module';\nimport { SHOP_DRAWING_ROUTES } from '../shop-drawing/shop-drawing.routes';\nimport { AS_BUILT_DRAWINGS_ROUTES } from '../as-built-drawing/as-built.routes';\nimport { TYPE_DRAWING_ROUTES } from '../type-drawing/type-drawing.routes';\nimport { LayoutModule } from '../layout/layout.module';\nimport { ProjectsModule } from '../projects/projects.module';\nimport { ProjectsComponent } from '../projects/projects.component';\n\n//  TODO: Optimize routes.\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    canActivate: [AuthGuard],\n    component: DashboardComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n      },\n      {\n        path: 'requests',\n        canActivate: [DrafterGuard],\n        component: DrafterComponent\n      },\n      {\n        path: 'projects',\n        children: [\n          {\n            path: '',\n            component: ProjectsComponent,\n          },\n          {\n            path: ':id',\n            children: [\n              {\n                path: '',\n                component: DrawingComponent,\n              },\n              {\n                path: 'requests',\n                component: DrafterComponent,\n                canActivate: [DrafterGuard],\n              },\n              {\n                path: 'clients',\n                children: [\n                  {\n                    path: '',\n                    component: ClientsComponent,\n                  },\n                ]\n              },\n              TRANSMITTAL_FORMS_ROUTES,\n            ]\n          },\n        ]\n      },\n      TENDER_DRAWING_ROUTES,\n      SHOP_DRAWING_ROUTES,\n      AS_BUILT_DRAWINGS_ROUTES, \n      TYPE_DRAWING_ROUTES,\n    ]\n  },\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    ProjectsModule,\n    HomeModule,\n    DrafterModule,\n    ClientsModule,\n    RequestDrawingsModule,\n  ],\n  exports: [RouterModule],\n})\n\nexport class DashboardRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { UserService, User } from '../core/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.currentUser.subscribe(user => {\n      this.user = user;\n    });\n  }\n}\n","<app-main-layout>\n  <div class=\"main-actions\">\n    <!-- <a [routerLink]='\"/dashboard/requests\"' mat-stroked-button color='primary' *ngIf='user && user.isDrafter'>My Drawing Requests</a> -->\n  </div>\n  <router-outlet></router-outlet>\n</app-main-layout>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DrafterGuard } from './drafter-guard.service';\nimport { AdminGuard } from './admin-guard.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { TenderDrawingModule } from '../tender-drawing/tender-drawing.module';\nimport { HistoryModule } from '../history/history.module';\nimport { ShopDrawingModule } from '../shop-drawing/shop-drawing.module';\nimport { AsBuiltDrawingModule } from '../as-built-drawing/as-built-drawing.module';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DashboardComponent } from './dashboard.component';\nimport { DrawingCategoriesModule } from '../drawing-categories/drawing-categories.module';\nimport { TypeDrawingModule } from '../type-drawing/type-drawing.module';\n\n\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    RouterModule,\n    TenderDrawingModule,\n    HistoryModule,\n    TypeDrawingModule,\n    ShopDrawingModule,\n    AsBuiltDrawingModule,\n    DrawingCategoriesModule,\n    AppLayoutModule,\n    MatButtonModule,\n  ],\n  providers: [\n    DrafterGuard,\n    AdminGuard,\n    AuthGuard,\n  ],\n})\nexport class DashboardModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class DrafterGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.currentUser.pipe(map(user => {\n      if(user.isDrafter) {\n        return true;\n      }\n\n      this.router.navigateByUrl('/unauthorized');\n      return false;\n    }));\n  }\n}","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\n\n@Component({\n  selector: 'app-complete-drawing-request',\n  templateUrl: './complete-drawing-request.component.html',\n  styleUrls: ['./complete-drawing-request.component.scss']\n})\nexport class CompleteDrawingRequestComponent implements OnInit {\n  public completeDrawingForm: FormGroup;\n  loading: Boolean = false;\n\n  \n  @Output() onCompleteSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data:CompleteDrawingDialogData,\n    private dialogRef: MatDialogRef<CompleteDrawingRequestComponent>,\n    private formBuilder: FormBuilder,\n    private drawingRequestService: DrawingRequestService,\n  ) { \n    this.completeDrawingForm = this.formBuilder.group({\n      completed_drawing_file: new FormControl(null, [Validators.required]),\n      comments: new FormControl(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onFormSubmit() {\n    const body = this.completeDrawingForm.value;\n\n    this.loading = true;\n\n    this.drawingRequestService.completeRequest(this.data.drawingRequestId, body).subscribe(res => {\n      this.closeDialog();\n      this.onCompleteSuccess.emit();\n\n      this.loading = false;\n    });\n  }\n\n}\n\nexport interface CompleteDrawingDialogData {\n  drawingRequestId: number | string;\n}\n","<div class=\"complete-drawing-request\">\n  <form [formGroup]=\"completeDrawingForm\" (submit)='onFormSubmit(); $event.preventDefault()'>\n    <h1 mat-dialog-title>Complete Drawing Request</h1>\n    <div mat-dialog-content>\n      <p>Add a comment and upload a drawing file to complete the drawing file.</p>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n        <textarea matInput cols=\"30\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Upload Drawing File:</mat-label>\n        <upload-input formControlName='completed_drawing_file'></upload-input>\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-raised-button (click)='closeDialog()' type='button' color='warn'>Cancel</button>\n      <button mat-raised-button type='submit' color='primary' [disabled]='completeDrawingForm.invalid || loading'>Submit</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { UserService } from '../core/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RequestDrawingComponent } from '../request-drawings/request-drawing/request-drawing.component';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { RequestsTableComponent } from './requests-table/requests-table.component';\nimport { RequestSummaryComponent } from './request-summary/request-summary.component';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-drafter',\n  templateUrl: './drafter.component.html',\n  styleUrls: ['./drafter.component.scss']\n})\nexport class DrafterComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent;\n  @ViewChild('requestsTable') private requestsTable: RequestsTableComponent;\n  @ViewChild('summary') private summary: RequestSummaryComponent;\n\n  employeeId;\n  projectId;\n\n  constructor(\n    private userService: UserService,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      switchMap(params => {\n        this.projectId = params.get('id');\n\n        return this.userService.currentUser;\n      })\n    ).subscribe(user => {\n      this.employeeId = user.employeeId;\n    })\n  }\n  \n  handleOnCompleteSuccess() {\n    this.successConfirmation.swalOptions = {\n      text: 'Drawing marked completed.'\n    }\n\n    this.summary.getData();\n\n    this.successConfirmation.fire();\n  }\n\n  showNewRequestDrawing() {\n    const newRequestDrawingDialog = this.dialog.open(RequestDrawingComponent, {\n      width: '720px',\n      data: {\n        drafterId: this.employeeId,\n        isDrafter: true,\n        projectId: this.projectId,\n      }\n    });\n\n    newRequestDrawingDialog.componentInstance.onRequestSaved.subscribe(() => {\n      this.requestsTable.getData();\n      this.successConfirmation.swalOptions = {\n        text: 'Drawing request created.'\n      }\n      this.summary.getData();\n\n      this.successConfirmation.fire();\n    });\n  }\n}\n","<div class=\"header\">\n  <div \n    fxLayout='row'\n    fxLayoutAlign='space-between space-between'\n  >\n    <div class=\"title\">\n      <h1>Your Drawing Requests</h1>\n    </div>\n    <div class=\"actions\">\n      <a [routerLink]=\"['/dashboard/projects']\" mat-raised-button color='primary'>View All Projects</a>\n    </div>\n  </div>\n  <div \n    fxLayout='row'\n    fxLayoutAlign='space-between flex-start'\n  >\n    <div class=\"header__left\">\n      <button mat-stroked-button color='primary' [disabled]='!employeeId' (click)='showNewRequestDrawing()'>\n        <mat-icon>add</mat-icon>\n        New Task\n      </button>\n    </div>\n    <div \n      class=\"header__right\"\n      fxFlex='0 0 20%'\n    >\n      <h4 class='summary-title'><mat-icon>list_alt</mat-icon>Summary</h4>\n      <mat-card>\n        <app-request-summary \n          #summary \n          *ngIf='employeeId && projectId'\n          [projectId]='projectId'\n          [drafterId]='employeeId'>\n        </app-request-summary>\n      </mat-card>\n    </div>\n  </div>\n</div>\n<mat-card class='drafter'>\n  <div mat-card-content>\n    <app-requests-table \n      #requestsTable\n      (onCompleteSuccess)='handleOnCompleteSuccess()' \n      [employeeId]='employeeId' \n      [projectId]='projectId'\n      *ngIf='employeeId && projectId'>\n    </app-requests-table>\n  </div>\n</mat-card>\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n>\n</swal>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrafterComponent } from './drafter.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatTableModule } from '@angular/material/table';\nimport { RequestsTableComponent } from './requests-table/requests-table.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CompleteDrawingRequestComponent } from './complete-drawing-request/complete-drawing-request.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { RequestTableFiltersComponent } from './request-table-filters/request-table-filters.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { RequestSummaryComponent } from './request-summary/request-summary.component';\nimport { RouterModule } from '@angular/router';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\n\n\n@NgModule({\n  declarations: [DrafterComponent, RequestsTableComponent, CompleteDrawingRequestComponent, RequestTableFiltersComponent, RequestSummaryComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    MatCardModule,\n    MatTableModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ContentLoaderModule,\n    SharedModule,\n    FlexLayoutModule,\n    SweetAlert2Module,\n    MatPaginatorModule,\n    RouterModule,\n  ],\n})\nexport class DrafterModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DrafterRequestsService } from 'src/app/core/services/drafter-requests.service';\nimport { DrafterRequestsSummary } from 'src/app/core/models/drafter-requests-summary';\n\n@Component({\n  selector: 'app-request-summary',\n  templateUrl: './request-summary.component.html',\n  styleUrls: ['./request-summary.component.scss']\n})\nexport class RequestSummaryComponent implements OnInit {\n  loading: boolean = false;\n  summary: DrafterRequestsSummary;\n\n  @Input()\n  set drafterId(id: number) {\n    this._drafterId = id;\n\n    this.getData();\n  }\n\n  get drafterId(): number {\n    return this._drafterId;\n  }\n\n  private _drafterId: number;\n\n  @Input()\n  set projectId(id: Number) {\n    this._projectId = id; \n\n    this.getData();\n  }\n\n  get projectId(): Number {\n    return this._projectId;\n  }\n\n  private _projectId: Number;\n\n\n  constructor(\n    private drafterRequest: DrafterRequestsService,\n  ) {}\n\n  ngOnInit(): void {}\n\n  getData() {\n    this.loading = true;\n\n    if(this.projectId && this.drafterId) {\n      this.drafterRequest.getSummary(this.drafterId, this.projectId).subscribe(res => {\n        this.summary = res;\n  \n        this.loading = false;\n      });\n    }\n  }\n}\n","<div class=\"request-summary\">\n  <p>\n    <span class='label'>Assigned:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.assigned : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>Completed:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.completed : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>Approved:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.approved : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>Rejected:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.rejected : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>TOTAL:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.total : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n</div>","import { Component, OnInit, Output, EventEmitter, Input, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DatePipe } from '@angular/common';\nimport { DrawingService } from 'src/app/drawing/shared/drawing.service';\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-request-table-filters',\n  templateUrl: './request-table-filters.component.html',\n  styleUrls: ['./request-table-filters.component.scss']\n})\nexport class RequestTableFiltersComponent implements OnInit {\n  @Output() onFilterChange: EventEmitter<any> = new EventEmitter();\n  @Input() defaultStatus: string = '';\n  @Input() defaultTerm: string = '';\n\n  searchTerm: FormControl;\n  status: FormControl;\n  _filters: RequestTableFilters;\n  filterForm: FormGroup;\n  approvers;\n  minDate: Date;\n\n  set filters(value: RequestTableFilters) {\n    this._filters = value;\n\n    this.onFilterChange.emit(this.filters);\n  }\n\n  get filters(): RequestTableFilters {\n    return this._filters;\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<RequestTableFiltersComponent>,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private drawingService: DrawingService,\n    @Inject(MAT_DIALOG_DATA) public data: RequestTableFiltersDialogData, \n  ) { \n    const searchTerm = this.data.filters.searchTerm ? this.data.filters.searchTerm : '';\n    const status = this.data.filters.status ? this.data.filters.status : '';\n    const employeeId = this.data.filters.employeeId ? this.data.filters.employeeId : '';\n    const fromDate = this.data.filters.fromDate ? this.datePipe.transform(this.data.filters.fromDate, 'dd-MM-yyyy') : '';\n    const endDate = this.data.filters.endDate ? this.datePipe.transform(this.data.filters.endDate, 'dd-MM-yyyy') : '';\n\n    const fromDateFormatted = fromDate ? moment(fromDate, 'DD-MM-YYYY').toDate() : '';\n    const endDateFormatted = endDate ? moment(endDate, 'DD-MM-YYYY').toDate() : '';\n\n    this.filterForm = this.formBuilder.group({\n      searchTerm: new FormControl(searchTerm),\n      status: new FormControl(status), \n      fromDate: new FormControl(fromDateFormatted),\n      endDate: new FormControl(endDateFormatted),\n      employeeId: new FormControl(employeeId),\n    });\n\n    if(!fromDate) {\n      this.filterForm.controls['endDate'].disable();\n    }\n\n    this.filterForm.controls['fromDate'].valueChanges.subscribe(res => {\n      if(res) {\n        this.minDate = res;\n        this.filterForm.controls['endDate'].enable();\n      } else {\n        this.filterForm.controls['endDate'].disable();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.approvers = this.drawingService.getApprovers('shop', this.data.projectId).pipe(\n      map(res => res.data)\n    );\n  }\n\n  private setFilters(key, value): void {\n    this.filters = {\n      ...this.filters,\n      [key]: value ? value : '',\n    }\n  }\n\n  onSubmit() {\n    const {\n      searchTerm,\n      status,\n      fromDate,\n      endDate,\n      employeeId,\n    } = this.filterForm.value;\n\n    const filters: RequestTableFilters = {\n      searchTerm,\n      status,\n      endDate: endDate ? this.datePipe.transform(endDate, 'yyyy-MM-dd') : '',\n      fromDate: fromDate ? this.datePipe.transform(fromDate, 'yyyy-MM-dd') : '',\n      employeeId,\n    }\n\n    this.onFilterChange.emit(filters);\n    this.dialogRef.close();\n  }\n\n  resetForm() {\n    const defaultStatus = this.data.defaultStatus === 'All' ? '' : 'Assigned';\n\n    const initialValues = {\n      searchTerm: '',\n      status: defaultStatus,\n      fromDate: '',\n      endDate: '',\n      employeeId: '',\n    }\n\n    this.filterForm.reset(initialValues);\n  }\n}\n\nexport interface RequestTableFiltersDialogData {\n  filters: RequestTableFilters;\n  projectId?: number | string;\n  defaultStatus?: number | string;\n}\nexport interface RequestTableFilters {\n  searchTerm?: string;\n  status?: string;\n  fromDate?: string;\n  endDate?: string;\n  employeeId?: string | number;\n}\n","<h1 mat-dialog-title>Filter Requests</h1>\n<form [formGroup]='filterForm' (ngSubmit)='onSubmit()'>\n  <div mat-dialog-content>\n    <div class=\"requests-table-filters\">\n      <div class=\"requests-table-filters__section\">\n        <mat-form-field class='request-table-filters__search-term form-control'>\n          <mat-label>Search Term</mat-label>\n          <input matInput formControlName='searchTerm' type='text' name='search_term'/>\n        </mat-form-field>\n      </div>\n      <div class=\"requests-table-filters__section\">\n        <mat-form-field class='form-control' >\n          <mat-label>Status:</mat-label>\n          <mat-select formControlName='status'>\n            <mat-option value=''>All Status</mat-option>\n            <mat-option value='Assigned'>Assigned</mat-option>\n            <mat-option value='Completed'>Completed</mat-option>\n            <mat-option value='Approved'>Approved</mat-option>\n            <mat-option value='Rejected'>Rejected</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div \n        class=\"requests-table-filters__section\"\n        fxLayout='row'\n        fxLayoutAlign='space-between end'\n        fxLayoutGap='16px'\n      >\n        <div\n          fxFlex='0 0 calc(50% - 8px)'\n        >  \n          <mat-form-field class='form-control' >\n            <mat-label>Request Date From:</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName='fromDate'>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div\n          fxFlex='0 0 calc(50% - 8px)'\n        >  \n          <mat-form-field class='form-control'>\n            <mat-label>Request Date To:</mat-label>\n            <input matInput [matDatepicker]=\"endDatePicker\" formControlName='endDate' [min]='minDate'>\n            <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n            <mat-datepicker #endDatePicker></mat-datepicker>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"requests-table-filters__section\">\n        <mat-form-field class='form-control'>\n          <mat-label>Assigned By:</mat-label>\n          <mat-select formControlName='employeeId'>\n            <mat-option *ngFor='let approver of approvers | async' [value]='approver.id'>{{ approver.first_name }} {{ approver.last_name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <div \n      class=\"request-table-filters__actions\"\n    >\n      <button mat-raised-button mat-dialog-close cdkFocusInitial type='button'>Close</button>\n      <button mat-raised-button color='warn' (click)='resetForm()' cdkFocusInitial type='button'>Reset</button>\n      <button mat-raised-button color='primary' type='submit'>Search</button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { DrafterService, DrafterTasksData } from 'src/app/core/services/drafter.service';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CompleteDrawingRequestComponent } from '../complete-drawing-request/complete-drawing-request.component';\nimport { RequestTableFilters, RequestTableFiltersComponent, RequestTableFiltersDialogData } from '../request-table-filters/request-table-filters.component';\nimport { DrawingRequestComponent, DrawingRequestDialogData } from 'src/app/request-drawings/drawing-request/drawing-request.component';\nimport _ from 'lodash';\n\n@Component({\n  selector: 'app-requests-table',\n  templateUrl: './requests-table.component.html',\n  styleUrls: ['./requests-table.component.scss']\n})\nexport class RequestsTableComponent implements OnInit {\n  @Input() employeeId;\n  @Output() onCompleteSuccess: EventEmitter<any> = new EventEmitter();\n\n  public drawingRequests: DrawingRequest[] = [];\n  public isLoading: Boolean = false;\n  public columnsToDisplay: Array<string> = [\n    'no', 'subject', 'drawing_no', 'drawingType', 'category', 'requestedBy', 'requestDate', \n    'targetDate', 'status', 'actions'\n  ];\n\n  get pageSizes(): Array<number> {\n    let defaultPageSizes = [\n      50,\n      100,\n      150\n    ];\n\n    if(this.tableData.total < 50) {\n      defaultPageSizes.unshift(this.tableData.total);\n    }\n\n    if(this.tableData.total > 150) {\n      defaultPageSizes.push(this.tableData.total);\n    }\n\n    return defaultPageSizes;\n  }\n\n  public tableData: DrafterTasksData = {\n    data: [],\n    total: 0,\n    currentPage: 1,\n  }\n\n  set pageNumber(pageNumber: number) {\n    this._pageNumber = pageNumber;\n\n    this.getData();\n  }\n\n  get pageNumber(): number {\n    return this._pageNumber;\n  }\n\n  private _pageNumber: number = 1;\n\n  _filters: RequestTableFilters = {\n    searchTerm: '',\n    status: 'Assigned',\n    fromDate: '',\n    endDate: '',\n    employeeId: '',\n  }\n\n  set filters(filters: RequestTableFilters) {\n    this._filters = filters;\n\n    this.getData();\n  }\n\n  get filters(): RequestTableFilters {\n    return this._filters;\n  }\n\n  @Input() set projectId(id) {\n    this._projectId = id;\n\n    this.getData();\n  } \n\n  get projectId() {\n    return this._projectId;\n  }\n\n  _projectId;\n\n  constructor(\n    private drafterService: DrafterService,\n    private userService: UserService,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {}\n\n  getData() {\n    this.isLoading = true;\n    this.tableData.data = [];\n\n    this.drafterService.getDrafterAssignedTasks(this.employeeId, this.projectId, {\n      searchTerm: this.filters.searchTerm,\n      status: this.filters.status,\n      endDate: this.filters.endDate,\n      fromDate: this.filters.fromDate,\n      employeeId: this.filters.employeeId,\n    }, {\n      page: this.pageNumber,\n    }).subscribe(res => {\n      this.tableData = res;\n\n      this.isLoading = false;\n    });\n  }\n\n  completeDrawingRequest(drawingRequest: DrawingRequest) {\n    const completeDrawingRequest = this.dialog.open(CompleteDrawingRequestComponent, {\n      width: '700px',\n      data: {\n        drawingRequestId: drawingRequest.id,\n      }\n    });\n\n    completeDrawingRequest.componentInstance.onCompleteSuccess.subscribe(() => {\n      this.getData();\n      this.onCompleteSuccess.emit();\n    });\n  }\n\n  viewDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      projectId: drawingRequest.drawing.projectId,\n      type: 'view',\n      isDrafter: true,\n      drawingRequest\n    }\n\n    const drawingRequestDialog = this.dialog.open(DrawingRequestComponent, {\n      width: '700px',\n      data: dialogData,\n    });\n  }\n\n  editDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      type: 'edit',\n      isDrafter: true,\n      drawingRequest\n      // projectId: this.projectId,\n    }\n\n    const drawingRequestDialog = this.dialog.open(DrawingRequestComponent, {\n      width: '700px',\n      data: dialogData,\n    });\n  }\n\n  filter(filters: RequestTableFilters) {\n    this.filters = filters;\n  }\n\n  generateStatusClass(status: String) {\n    const statusTransformed = _.kebabCase(status);\n\n    return `requests-table__status--${statusTransformed}`;\n  }\n\n  handlePaginatorChange($event) {\n    this.pageNumber = $event.pageIndex + 1;\n  }\n\n  openFilters() {\n    const filters = this.filters;\n\n    const data: RequestTableFiltersDialogData = {\n      filters,\n      projectId: this.projectId,\n    }\n\n    const dialog = this.dialog.open(RequestTableFiltersComponent, {\n      width: '700px',\n      data,\n    });\n\n    dialog.componentInstance.onFilterChange.subscribe(res => {\n      this.filter(res);\n    });\n  }\n}\n","<div class=\"request-table\">\n  <!-- <app-request-table-filters (onFilterChange)='filter($event)' defaultStatus='Assigned'></app-request-table-filters> -->\n  <div class=\"requests-table__actions\">\n    <button mat-stroked-button (click)='openFilters()'>\n      <mat-icon>filter_list</mat-icon>\n      Filter Requests\n    </button>\n  </div>\n  <table mat-table [dataSource]='tableData.data' class='requests-table full-width'>\n    <ng-container matColumnDef='no'>\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ i + 1 }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='requestedBy'>\n      <th mat-header-cell *matHeaderCellDef>Requester</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestedBy.getUserFullName() }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='subject'>\n      <th mat-header-cell *matHeaderCellDef>Subject</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.subject }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='drawing_no'>\n      <th mat-header-cell *matHeaderCellDef>For Drawing No.</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ task.drawing.currentDrawingNo }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='drawingType'>\n      <th mat-header-cell *matHeaderCellDef>Type</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ task.drawingType.type }} Drawing</td>\n    </ng-container>\n\n    <ng-container matColumnDef='category'>\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ task.drawing.category }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='requestDate'>\n      <th mat-header-cell *matHeaderCellDef>Request Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='targetDate'>\n      <th mat-header-cell *matHeaderCellDef>Target Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.targetDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef='let task;'><span [class]='generateStatusClass(task.status)'>{{ task.status }}</span></td>\n    </ng-container>\n    \n    <ng-container matColumnDef='actions'>\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef='let drawingRequest;'>\n        <button mat-button [matMenuTriggerFor]='buildDrawingMenu'>\n          <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n        </button>\n        <mat-menu #buildDrawingMenu xPosition='before'>\n          <button mat-menu-item (click)='viewDrawingRequest(drawingRequest)'>View</button>\n          <button mat-menu-item (click)='editDrawingRequest(drawingRequest)'>Edit</button>\n          <button mat-menu-item (click)='completeDrawingRequest(drawingRequest)' *ngIf='drawingRequest.isAssigned'>Complete</button>\n        </mat-menu>\n      </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n  </table>\n  \n  <div \n    fxLayout='row'\n    fxLayoutAlign='center'\n    class=\"drafter__tasks-no-data\"\n    *ngIf='!isLoading && tableData.data.length === 0'\n  >\n    <p>No tasks found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"75\" *ngIf='isLoading'>\n    <svg:rect x=\"0\" y=\"5\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"20\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"35\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"50\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"65\" width=\"100%\" height=\"5\" />\n  </content-loader>\n\n  \n  <mat-paginator \n    [length]='tableData.total'\n    [pageSize]='tableData.data.length'\n    [pageSizeOptions]=\"pageSizes\"\n    (page)='handlePaginatorChange($event)'\n  ></mat-paginator>\n</div>\n\n","import { Component, OnInit, OnDestroy, ViewChild, Output, EventEmitter, ElementRef, Input } from '@angular/core';\nimport { DrawingCategoryService } from 'src/app/core/services/drawing-category.service';\nimport { DrawingCategory } from 'src/app/core/models/drawing-category';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { MatTable } from '@angular/material/table';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\nimport { ProjectCategory } from 'src/app/core/models/project-category';\n\n@Component({\n  selector: 'app-drawing-categories-table',\n  templateUrl: './drawing-categories-table.component.html',\n  styleUrls: ['./drawing-categories-table.component.scss']\n})\nexport class DrawingCategoriesTableComponent implements OnInit, OnDestroy {\n  @ViewChild('deleteConfirmation') deleteConfirmation: SwalComponent;\n  @ViewChild('table') table: MatTable<any>;\n\n  _projectId;\n  @Input() set projectId(id) {\n    this._projectId = id;\n\n    this.getProjectCategories();\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  loading: boolean = false;\n  isDataSubmitting: boolean = false;\n  categories: DrawingCategory[] = [];\n  columnsToDisplay: string[] = ['name', 'actions'];\n  selectedDeleteCategory: ProjectCategory;\n  selectedEditCategory: ProjectCategory;\n  editCategoryName: String;\n  \n  projectCategories: ProjectCategory[] = [];\n\n  @Output() onDeleteSuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onEditSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private drawingCategoryService: DrawingCategoryService,\n    private projectCategoryService: ProjectCategoryService,\n    private elementRef: ElementRef<HTMLElement>,\n  ) { }\n\n  ngOnInit(): void {\n    this.getProjectCategories();\n  }\n\n  ngOnDestroy() {}\n\n  getProjectCategories() {\n    this.loading = true;\n\n    this.projectCategoryService.getCategories(this.projectId).subscribe(res => {\n      this.projectCategories = res;  \n\n      this.loading = false;\n    });\n  }\n\n  getCategories() {\n    this.loading = true;\n\n    this.drawingCategoryService.getCategories().subscribe(res => {\n      this.categories = res;\n      this.loading = false;\n    });\n  }\n\n  confirmDelete(category: ProjectCategory) {\n    this.deleteConfirmation.fire();\n\n    this.selectedDeleteCategory = category;\n  }\n\n  deleteCategory() {\n    this.projectCategoryService.deleteCategory(this.projectId, this.selectedDeleteCategory.id).subscribe(res => {\n      this.selectedDeleteCategory = null;\n\n      this.onDeleteSuccess.emit();\n    });\n  }\n\n  editCategory(category: ProjectCategory) {\n    this.editCategoryName = category.categoryName;\n    this.selectedEditCategory = category;\n\n    setTimeout(() => {\n      this.elementRef.nativeElement.querySelector(`#table-row-${category.id}`).querySelector('input').focus();\n    }, 100)\n  }\n\n  isBeingEdited(category): boolean {\n    return this.selectedEditCategory && this.selectedEditCategory.id === category.id;\n  }\n\n  saveCategory() {\n    this.isDataSubmitting = true;\n\n    const body = {\n      category_name: this.editCategoryName\n    };\n\n    this.projectCategoryService.editCategory(this.projectId, this.selectedEditCategory.id, body).subscribe(res => {\n      this.isDataSubmitting = false;\n\n      this.onEditSuccess.emit();\n    });\n  }\n\n  resetEdit() {\n    this.selectedEditCategory = null;\n  }\n}\n","<table mat-table [dataSource]=\"projectCategories\" class='drawing-categories-table full-width' #table>\n  <ng-container matColumnDef='name'>\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let category; let i = index;\" >\n      <span *ngIf='!isBeingEdited(category)'>{{ category.categoryName }}</span>\n      <mat-form-field *ngIf='isBeingEdited(category)'>\n        <input matInput type=\"text\" [(ngModel)]='editCategoryName'>\n      </mat-form-field>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef='actions'>\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let category; let i = index;\" class='drawing-categories-table__actions'>\n      <div class=\"drawing-categories-table__actions--default\" *ngIf='!selectedEditCategory || !isBeingEdited(category)'>\n        <button mat-icon-button color='accent' (click)='editCategory(category)'>\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-icon-button color='warn' (click)='confirmDelete(category)'>\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n      <div class=\"drawing-categories-table__actions--actions\" *ngIf='isBeingEdited(category)'>\n        <div class=\"drawing-categories-table__progress-container\" *ngIf='isDataSubmitting'>\n          <mat-spinner diameter='20' class='drawing-categories-table__progress'></mat-spinner>\n        </div>\n        <button mat-icon-button color='accent' (click)='saveCategory()' [disabled]='isDataSubmitting' *ngIf='!isDataSubmitting'>\n          <mat-icon>check</mat-icon>\n        </button>\n        <button mat-icon-button color='warn' (click)='resetEdit()' [disabled]='isDataSubmitting' *ngIf='!isDataSubmitting'>\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n    </td>\n  </ng-container>\n  \n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let category; columns: columnsToDisplay;\" [id]='\"table-row-\" + category.id'></tr>\n</table> \n\n<div *ngIf='!projectCategories.length && !loading'>\n  <p class='text-center'>\n    <strong>No categories for this project.</strong>\n  </p>\n</div>\n\n<swal\n  #deleteConfirmation\n  icon='warning'\n  text=\"Are you sure you want to delete this category?\"\n  showCancelButton='true'\n  (confirm)='deleteCategory()'\n></swal>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrawingCategoriesTableComponent } from './drawing-categories-table/drawing-categories-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n\n@NgModule({\n  declarations: [DrawingCategoriesTableComponent],\n  imports: [\n    CommonModule,\n    ContentLoaderModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    SweetAlert2Module,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n  ],\n  exports: [\n    DrawingCategoriesTableComponent,\n  ]\n})\nexport class DrawingCategoriesModule { }\n","import { Component, OnInit, Output, EventEmitter, ViewChild, Input, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DrawingCategoryService } from 'src/app/core/services/drawing-category.service';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.scss']\n})\nexport class AddCategoryComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent;\n  isDataSubmitting: Boolean;\n  categoryForm: FormGroup;\n  errors = {\n    category_name: '',\n  };\n\n  @Output() formSubmitted: EventEmitter<any> = new EventEmitter();\n  @Output() onDeleteSuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onEditSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<AddCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AddCategoryData,\n    private formBuilder: FormBuilder,\n    private categoryService: DrawingCategoryService,\n    private projectCategoryService: ProjectCategoryService,\n  ) { \n    this.categoryForm = this.formBuilder.group({\n      category_name: '',\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  closeDialog($event = null): void {\n    if ($event) $event.preventDefault()\n\n    this.dialogRef.close()\n  }\n\n  onFormSubmit($event) {\n    $event.preventDefault()\n\n    this.isDataSubmitting = true\n\n    this.projectCategoryService.addCategory(this.data.projectId, this.categoryForm.value)\n      .pipe(\n        catchError((err: HttpErrorResponse) => {\n          const keys = Object.keys(err.error.data);\n\n          keys.forEach(key => {\n            switch(key) {\n              case 'category_name':\n                this.categoryForm.controls['category_name'].setErrors({\n                  invalid: true,\n                });\n\n                this.errors['category_name'] = err.error.data[key][0];\n\n                break;\n            }\n          });\n\n          this.isDataSubmitting = false;\n          \n          return throwError(err)\n        })\n      )\n      .subscribe(res => {\n        console.log(res)\n        this.isDataSubmitting = false\n        this.successConfirmation.fire()\n      }, (err) => {\n        console.log(err.data)\n      })\n  }\n\n  handleFormSubmit() {\n    this.closeDialog()\n    this.formSubmitted.emit() \n  }\n\n  handleOnDeleteSuccess() {\n    this.closeDialog();\n    this.onDeleteSuccess.emit();\n  }\n\n  handleOnEditSuccess() {\n    this.closeDialog();\n    this.onEditSuccess.emit();\n  }\n}\n\ninterface AddCategoryData {\n  projectId: String | Number;\n}\n","<h2 mat-dialog-title>Categories</h2>\n<div mat-dialog-content class='add-category-form'>\n  <p><strong>Add New Category</strong></p>\n  <form [formGroup]=\"categoryForm\" (submit)=\"onFormSubmit($event)\">\n    <mat-grid-list rowHeight='80px' cols='2' gutterSize='16px'>\n      <mat-grid-tile class='add-category-form__col'>\n        <p>\n          <mat-form-field class='add-category-form__form-group'>\n            <mat-label>Category Name: </mat-label>\n            <input type=\"text\" matInput formControlName=\"category_name\">\n            <mat-error *ngIf='errors.category_name'>\n              {{errors.category_name}}\n            </mat-error>\n          </mat-form-field>\n          <small></small>\n        </p>\n      </mat-grid-tile>\n      <mat-grid-tile class='add-category-form__col'>\n        <p>\n          <button mat-raised-button color='primary' type='submit' [disabled]=\"isDataSubmitting\">\n            Save\n          </button>\n        </p>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </form>\n  <p class='mb-0'><strong>Categories:</strong></p>\n  <app-drawing-categories-table \n    (onDeleteSuccess)='handleOnDeleteSuccess()'\n    [projectId]='data.projectId'\n    (onEditSuccess)='handleOnEditSuccess()'>\n  </app-drawing-categories-table>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color='warn' (click)='closeDialog($event)'>\n    Close\n  </button>\n  &nbsp; &nbsp;\n</div>\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n  text=\"Category successfully added!\"\n  (close)='handleFormSubmit()'\n>\n</swal>","import { Component, OnInit, ViewChild, Inject, Input, EventEmitter, Output } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { DrawingService } from '../shared/drawing.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport moment from 'moment'\nimport { DatePipe } from '@angular/common';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\n\ninterface DialogData {\n  projectId: number | string,\n  type?: ProjectDrawingType,\n}\n@Component({\n  selector: 'app-add-drawing',\n  templateUrl: './add-drawing.component.html',\n  styleUrls: ['./add-drawing.component.scss']\n})\nexport class AddDrawingComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent\n  @ViewChild('drawingFile') private uploadFile\n\n  drawingForm;\n  projectId;\n  categories$: Observable<any>;\n  addedDrawing;\n  file;\n  isDataSubmitting: Boolean;\n  test;\n  useCurrentDrawingNo: false;\n  subscription: any;\n\n  @Output() formSubmitted: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    public dialogRef: MatDialogRef<AddDrawingComponent>,\n    private formBuilder: FormBuilder, \n    private drawingService: DrawingService,\n    private projectCategoryService: ProjectCategoryService,\n    private date: DatePipe,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) { \n    this.drawingForm = this.formBuilder.group({\n      drawing_title: new FormControl('', [Validators.required]),\n      drawing_title_date: new FormControl(new Date(), [Validators.required]),\n      drawing_no: new FormControl('', [Validators.required]),\n      drawing_category_id: new FormControl(null, [Validators.required]),\n      drawing_file: new FormControl(null, [Validators.required]),\n      drawing_target_date: new FormControl(new Date(), [Validators.required]),\n      current_drawing_no: new FormControl('', [Validators.required]),\n    })\n\n    this.test = new FormControl(null);\n    this.projectId = this.data.projectId;\n  }\n\n  ngOnInit() {\n    this.categories$ = this.projectCategoryService.getCategories(this.projectId)\n  }\n\n  closeDrawing($event = null) {\n    if($event) $event.preventDefault()\n\n    this.dialogRef.close()\n  }\n\n  addDrawing() {\n    this.isDataSubmitting = true\n    let data = this.drawingForm.getRawValue()\n\n    const drawing_title_date = this.date.transform(data.drawing_title_date, \"yyyy-MM-dd\")\n    const drawing_target_date = this.date.transform(data.drawing_target_date, \"yyyy-MM-dd\")\n\n    data = {\n      ...data,\n      drawing_title_date,\n      drawing_target_date,\n      project_id: this.projectId,\n    }\n    debugger\n    this.drawingService.addDrawing(data)\n      .subscribe(res => {\n        this.addedDrawing = res.data;\n        this.isDataSubmitting = false\n        this.successConfirmation.fire()\n      })\n  }\n\n  triggerUploadFile() {\n    this.uploadFile.open()\n  }\n\n  handleFormSubmit() {\n    this.closeDrawing()\n    this.formSubmitted.emit(this.addedDrawing)\n  }\n\n  // TODO: Do this better\n  onUseCurrentDrawingNoToggle(value) {\n    if (value) {\n      this.drawingForm.get('current_drawing_no').disable();\n      this.drawingForm.get('current_drawing_no').setValue(this.drawingForm.get('drawing_no').value);\n      this.subscription = this.drawingForm.get('drawing_no').valueChanges.subscribe(res => {\n        this.drawingForm.get('current_drawing_no').setValue(res);\n      });\n    } else {\n      this.drawingForm.get('current_drawing_no').enable();\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<h2 mat-dialog-title>Add Tender Drawing</h2>\n<mat-dialog-content>\n  <div class=\"add-drawing-form\">\n    <form [formGroup]='drawingForm' enctype=\"multipart/form-data\">\n            <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px'>\n                <mat-grid-tile class=\"add-drawing-form__col\">\n                    <p>\n                        <mat-form-field class='add-drawing-form__form-group'>\n                            <mat-label>Date:</mat-label>\n                            <input matInput [matDatepicker]=\"drawingDate\" formControlName='drawing_title_date'>\n                            <mat-datepicker-toggle matSuffix [for]=\"drawingDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #drawingDate></mat-datepicker>\n                        </mat-form-field>\n                    </p>\n                </mat-grid-tile>\n                <mat-grid-tile class=\"add-drawing-form__col add-drawing-form__col--category\">\n                  <p>\n                      <mat-form-field class='add-drawing-form__form-group'>\n                          <mat-label>Category:</mat-label>\n                          <mat-select formControlName='drawing_category_id'>\n                              <mat-option *ngFor='let category of categories$ | async' [value]='category.id'>{{ category.categoryName }}</mat-option>\n                          </mat-select>\n                      </mat-form-field>\n                  </p>\n              </mat-grid-tile>\n            </mat-grid-list>\n            <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px'>\n                <mat-grid-tile class=\"add-drawing-form__col\">\n                    <p>\n                        <mat-form-field class='add-drawing-form__form-group'>\n                            <mat-label>Drawing Title:</mat-label>\n                            <input matInput formControlName='drawing_title'>\n                        </mat-form-field>\n                    </p>   \n                </mat-grid-tile>\n                <mat-grid-tile class=\"add-drawing-form__col\">\n                    <p>\n                        <mat-form-field class='add-drawing-form__form-group'>\n                            <mat-label>Tender Drawing No:</mat-label>\n                            <input matInput formControlName='drawing_no'>\n                        </mat-form-field>\n                    </p>   \n                </mat-grid-tile>\n            </mat-grid-list>\n            <div\n              fxLayout='row'\n              fxLayoutGap='16px'\n              fxLayoutAlign='space-between center'>\n              <div fxFlex='0 0 calc(50% - 8px)'>\n                <mat-form-field class='add-drawing-form__form-group'>\n                  <mat-label>Current Drawing No:</mat-label>\n                  <input matInput formControlName='current_drawing_no'>\n                </mat-form-field>\n                <mat-checkbox [(ngModel)]='useCurrentDrawingNo' [ngModelOptions]=\"{standalone: true}\" (ngModelChange)='onUseCurrentDrawingNoToggle($event)'>Use Tender Drawing No.</mat-checkbox>\n              </div>\n            </div>\n\n            <div\n              fxLayout='row'\n              fxLayoutGap='16px'\n              fxLayoutAlign='space-between center'\n            >\n              <div fxFlex='0 0 calc(50% - 8px)'>\n                <mat-form-field class='add-drawing-form__form-group file-input-field'>\n                  <mat-label>Drawing File:</mat-label>\n                  <upload-input formControlName='drawing_file'></upload-input>\n                </mat-form-field>\n              </div>\n            </div>\n           \n            <!-- <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px'>\n              <mat-grid-tile>\n              </mat-grid-tile>\n              <mat-grid-tile>\n                <mat-form-field class='add-drawing-form__form-group file-input-field'>\n                  <mat-label>Drawing File:</mat-label>\n                  <upload-input formControlName='drawing_file'></upload-input>\n                </mat-form-field>\n              </mat-grid-tile>\n            </mat-grid-list> -->\n            <div class=\"add-drawing-form__shop-drawing-container\" *ngIf='data.type'>\n                <mat-grid-list cols='2' rowHeight='150px'>\n                    <mat-grid-tile>\n                        <div class=\"shop-drawing\">\n                            <p class=\"shop-drawing__title\">{{ data.type.type }} Drawing</p>\n                            <p>\n                                <mat-form-field class='add-drawing-form__form-group'>\n                                    <mat-label>{{ data.type.type }} Drawing Target Date:</mat-label>\n                                    <input matInput [matDatepicker]=\"drawingTargetDate\" formControlName='drawing_target_date'>\n                                    <mat-datepicker-toggle matSuffix [for]=\"drawingTargetDate\"></mat-datepicker-toggle>\n                                    <mat-datepicker #drawingTargetDate></mat-datepicker>\n                                </mat-form-field>\n                            </p>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n            </div>\n        </form>\n      </div>\n    </mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-raised-button color='warn' (click)='closeDrawing($event)'>Cancel</button>&nbsp;\n    <button mat-raised-button color='primary' type='submit' (click)='addDrawing()' [disabled]='!drawingForm.valid || isDataSubmitting'>Add</button>\n</mat-dialog-actions>\n\n<swal \n    #successConfirmation\n    title=\"Success\"\n    icon='success'\n    text=\"Drawing successfully added!\"\n    (close)='handleFormSubmit()'\n>\n</swal>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DrawingService } from '../shared/drawing.service';\nimport { map } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\nimport { AuditTrail, AuditEvents } from 'src/app/core/models/audit-trail';\nimport { User } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-audit-trail',\n  templateUrl: './audit-trail.component.html',\n  styleUrls: ['./audit-trail.component.scss']\n})\nexport class AuditTrailComponent implements OnInit {\n  isDataLoading: Boolean = false\n  history: Array<any> = [];\n  displayedColumns = ['id', 'event', 'keysUpdated', 'date', 'time', 'user']\n  drawing;\n\n  constructor(\n    public dialogRef: MatDialogRef<AuditTrailComponent>,\n    private datePipe: DatePipe,\n    private drawingService: DrawingService,\n    @Inject(MAT_DIALOG_DATA) public data: AuditTrailDialogData,\n  ) { \n    this.drawing = data.drawing\n  }\n\n  ngOnInit(): void {\n    this.getData()\n  }\n\n  getData(): void {\n    this.isDataLoading = true\n\n    this.drawingService.getHistory(this.data.drawing.id, this.data.type)\n      .subscribe(\n        res => {\n          this.history = res.data.map(audit => {\n            const { \n              user ,\n              drawing_no,\n              drawing_title,\n              created_at,\n              old_values,\n              new_values\n            } = audit\n\n            const changedBy = new User({\n              id: user.id,\n              employeeId: user.employee.id,\n              avatar: user.employee.avatar ? user.employee.avatar : '',\n              roleId: user.employee.role_id,\n              companyId: user.employee.company_id,\n              firstName: user.employee.first_name,\n              lastName: user.employee.last_name\n            });\n            const event = AuditEvents[audit.event.toUpperCase()];\n\n            return new AuditTrail(\n              drawing_no,\n              drawing_title,\n              created_at,\n              changedBy,\n              event,\n              old_values,\n              new_values,\n            );\n          });\n\n          this.isDataLoading = false\n        },\n        err => {\n          console.log(err)\n          this.isDataLoading = false\n        }\n      )\n  }\n\n  closeDialog() {\n    this.dialogRef.close()\n  }\n}\n\ninterface AuditTrailDialogData {\n  drawing: {\n    id: string;\n    drawing_title: string;\n    drawing_no: string,\n  },\n  type: string | null,\n}\n","<h2 mat-dialog-title>History</h2>\n<div class='audit-trail' mat-dialog-content>\n  <div class=\"audit-trail__loader\" *ngIf='isDataLoading'>\n    <mat-progress-spinner\n      mode='indeterminate'\n      diameter='40'\n    ></mat-progress-spinner>\n  </div>\n  <div class=\"audit-trail__content\" *ngIf='!isDataLoading'>\n    <div class=\"audit-trail__header\">\n      <mat-grid-list cols='4' rowHeight='70px' gutterSize='16px'>\n        <mat-grid-tile class='audit-trail__col'>\n          <p>\n            <mat-form-field>\n              <mat-label>Drawing Title: </mat-label>\n              <input type=\"text\" disabled matInput readonly [value]='drawing.drawing_title'>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class='audit-trail__col'>\n          <p>\n            <mat-form-field>\n              <mat-label>Drawing No: </mat-label>\n              <input type=\"text\" disabled matInput readonly [value]='drawing.drawing_no'>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n    <table mat-table [dataSource]=\"history\" class='audit-trail__table'>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>No.</th>\n        <td mat-cell *matCellDef=\"let data; let i = index\">{{i + 1}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"event\">\n        <th mat-header-cell *matHeaderCellDef>Action </th>\n        <td mat-cell *matCellDef=\"let data\">{{data.event | titlecase}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"keysUpdated\">\n        <th mat-header-cell *matHeaderCellDef>Updated Values </th>\n        <td mat-cell *matCellDef=\"let data\">{{ data.displayChangedKeys().length ? data.displayChangedKeys() : '-' }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef>Date</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.date | date:'dd-MM-yyyy'}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"time\">\n        <th mat-header-cell *matHeaderCellDef>Time</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.date | date:'shortTime'}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"user\">\n        <th mat-header-cell *matHeaderCellDef>Done By</th>\n        <td mat-cell *matCellDef=\"let data\">{{ data.doneBy.getUserFullName() }}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns; let i = index;\"></tr>\n    </table>\n    <button mat-raised-button color='warn' (click)='closeDialog()'>Close</button>\n  </div>\n</div>","import { Component, OnInit, Input, OnDestroy, HostBinding, Self, Optional, ElementRef } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { DrawingService } from '../shared/drawing.service';\nimport { map } from 'rxjs/operators';\nimport { FormControl, NgControl, ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\n\n@Component({\n  selector: 'app-category-select',\n  templateUrl: './category-select.component.html',\n  styleUrls: ['./category-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: CategorySelectComponent}]\n})\nexport class CategorySelectComponent implements MatFormFieldControl<string>, OnInit, OnDestroy {\n  static nextId = 0;\n\n  @HostBinding() id = `category-select-${CategorySelectComponent.nextId++}`;\n  categories$: Observable<any>;\n  form;\n  category = new FormControl(null);\n  stateChanges = new Subject<void>();\n  focused = false\n  errorState = false\n  controlType = 'category-select'\n  touched = false;\n  _projectId;\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() set projectId(id) {\n    this._projectId = id;\n\n    this.getProjectCategories();\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  @Input() shouldShowAllOption: boolean = false\n\n  @Input()\n  get value(): string | null {\n    return this.category.value\n  }\n\n  set value(categoryId: string) {\n    this.category.setValue(categoryId)\n    this.stateChanges.next()\n  }\n\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this.category.disable() : this.category.enable();\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  get empty() {\n    return !this.category.value\n  }\n\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  constructor(\n    private drawingService: DrawingService,\n    private projectDrawingService: ProjectCategoryService,\n    @Optional() @Self() public ngControl: NgControl,\n    private fm: FocusMonitor,\n    private elRef: ElementRef<HTMLElement>\n  ) { \n    this.category = new FormControl(null);\n\n    // Replace the provider from above with this.\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      console.log(origin)\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit(): void {\n    this.categories$ = this.projectDrawingService.getCategories(this.projectId)\n  }\n\n  ngOnDestroy(): void {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n  }\n\n  onContainerClick(event: MouseEvent) {\n    this.focused = true\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this.elRef.nativeElement.querySelector('div').focus();\n    }\n  }\n\n  onChange = (delta: any) => {};\n  \n  onTouched = () => {\n    console.log('touched')\n    this.touched = true;\n  };\n\n  getProjectCategories() {\n    this.categories$ = this.projectDrawingService.getCategories(this.projectId)\n  }\n\n  writeValue(delta: any): void {\n    this.category.setValue(delta);\n    this.stateChanges.next()\n  }\n\n  registerOnChange(fn: (v: any) => void): void {\n    this.category.valueChanges.pipe().subscribe(fn)\n  }\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n","<div class='category-select'>\n  <mat-select [formControl]='category'>\n    <!-- Handle \"All\" option better -->\n    <mat-option *ngIf='shouldShowAllOption'>All</mat-option>\n    <mat-option *ngFor='let category of categories$ | async' [value]='category.id'>{{ category.categoryName }}</mat-option>\n  </mat-select>\n</div>","import { Component, OnDestroy, OnInit, Input, Optional, Self, ElementRef, forwardRef } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators'\nimport { DrawingService } from '../shared/drawing.service';\nimport { FormBuilder, FormControl, NgControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n\nclass DrawingCategory {\n  constructor(public categoryId: number, categoryName: string) { }\n}\n\n@Component({\n  selector: 'app-drawing-category-select',\n  templateUrl: './drawing-category-select.component.html',\n  styleUrls: ['./drawing-category-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: DrawingCategorySelectInput, \n  }],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class DrawingCategorySelectInput implements MatFormFieldControl<number>, OnInit, ControlValueAccessor{\n  static nextId = 0;\n\n  stateChanges = new Subject<void>()\n  categories$: Array<any> = []\n  focused = false\n  id = `drawing-category-select-${DrawingCategorySelectInput.nextId++}`;\n  selectedId\n  errorState = false\n  describedBy = ''\n  isLoading = false\n  myControl = new FormControl()\n  filteredOptions: Observable<Object[]>\n  onChange: (_: any) => void = (_: any) => {};\n  onTouched: () => void = () => {};\n\n\n  get empty() {\n    return !this.selectedId\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  public _placeholder: string;\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  @Input()\n  get value(): number | null {\n    if (this.selectedId) {\n      return this.selectedId\n    }\n\n    return null\n  }\n\n  set value(category: number | null) {\n    // const { categoryId } = category || new DrawingCategory(0)\n    this.selectedId = category\n  }\n\n  constructor(\n    private drawingService: DrawingService,\n    @Optional() @Self() public ngControl: NgControl,\n    private _elementRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor\n  ) {\n    this.selectedId = new FormControl(0)\n    fm.monitor(_elementRef, true).subscribe(origin => {\n      this.focused = !!origin\n      console.log(this.shouldLabelFloat)\n      this.stateChanges.next()\n    })\n\n    // Replace the provider from above with this.\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.isLoading = true\n    this.drawingService.getCategories().subscribe(res => {\n      this.categories$ = res.data\n      this.filteredOptions = this.myControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => this._filter(value))\n        );\n      this.isLoading = false\n    })\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  _filter(value: String): Object[] {\n    const filterValue  = value.toLowerCase()\n\n    const categories = this.categories$.filter(category => category.category_name.toLowerCase().includes(filterValue))\n\n    return categories\n  }\n  \n\n  writeValue(value: number) {\n    this.selectedId = value\n    this.stateChanges.next()\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","<div class=\"drawing-category-select\">\n    <input type=\"text\" [formControl]='myControl' matInput [matAutocomplete]=\"category\" placeholder='Start typing to search for a category...'>\n    <mat-autocomplete #category=\"matAutocomplete\">\n      <mat-option *ngFor='let category of filteredOptions | async' [value]='category.category_name'>{{ category.category_name }}</mat-option>\n    </mat-autocomplete>\n</div>","import { Component, OnInit, Output, EventEmitter, Inject, Input } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { DrawingFilters } from 'src/app/core/models/drawing-filters';\nimport _ from 'lodash';\nimport { ProjectCategory } from 'src/app/core/models/project-category';\n\n@Component({\n  selector: 'app-drawing-filters',\n  templateUrl: './drawing-filters.component.html',\n  styleUrls: ['./drawing-filters.component.scss']\n})\nexport class DrawingFiltersComponent implements OnInit {\n  filters: FormGroup;\n  @Output() onFormSubmit: EventEmitter<DrawingFilters> = new EventEmitter;\n\n  constructor(\n    private dialogRef: MatDialogRef<DrawingFiltersComponent>,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: DrawingFiltersDialogData,\n  ) {\n    this.filters = this.formBuilder.group({\n      searchQuery: new FormControl(this._extractFilterValues('searchQuery')),\n      category: new FormControl(this._extractFilterValues('category')),\n      uploadedBy: new FormControl(this._extractFilterValues('uploadedBy')),\n    });\n\n    this.data.filters.typeDrawingStatus.forEach((filter) => {\n      const formControlName = this.generateFormControlName(filter.type);\n      this.filters.addControl(formControlName, new FormControl(filter.value));\n    });\n  }\n\n  ngOnInit(): void {}\n\n  resetFilters() {\n    this.filters.reset();\n  }\n\n  handleFormSubmit() {\n    const filterFormValue = this.filters.value;\n\n    const {\n      category,\n      uploadedBy,\n      searchQuery,\n    } = filterFormValue;\n\n    const typeDrawingStatus = this.data.filters.typeDrawingStatus.map((value, key) => {\n      const formKey = this.generateFormControlName(value.type);\n\n      return {\n        type: value.type,\n        label: value.label,\n        value: filterFormValue[formKey]\n      }\n    });\n\n    this.onFormSubmit.emit({\n      category,\n      uploadedBy,\n      searchQuery,\n      typeDrawingStatus,\n    });\n\n    this.dialogRef.close();\n  }\n\n  // Make this a filter\n  toCamelCase(string) {\n    return _.camelCase(string);\n  }\n\n  capitalize(string) {\n    return _.startCase(string)\n  }\n\n  private _extractFilterValues(key) {\n    return this.data && this.data.filters ? this.data.filters[key] : '';\n  }\n\n  generateFormControlName(typeId) {\n    return `status_${typeId}`;\n  }\n}\n\nexport interface DrawingFiltersDialogData {\n  filters: DrawingFilters;\n  categories: ProjectCategory[];\n}\n","<div class=\"drawing-filters\">\n  <form [formGroup]='filters' (submit)='handleFormSubmit()'>\n    <div mat-dialog-header>\n      <h1 mat-dialog-title>Filter Drawings</h1>\n    </div>\n    <div mat-dialog-content>\n      <div\n        fxLayout='row'\n        fxLayoutGap='16px'\n        fxLayoutAlign='space-between flex-start'\n      >\n        <mat-form-field class='form-control'>\n          <mat-label>Search Term</mat-label>\n          <input matInput formControlName='searchQuery' placeholder='Search for a drawing number or title'/>\n        </mat-form-field>\n      </div>\n      <div\n        fxLayout='row'\n        fxLayoutGap='16px'\n        fxLayoutAlign='space-between flex-start'\n      >\n        <div fxFlex='0 0 calc(50% - 16px)'>\n          <mat-form-field class='form-control'>\n            <mat-label>Category</mat-label>\n            <mat-select  formControlName='category'>\n              <mat-option value=''>\n                All\n              </mat-option>\n              <mat-option *ngFor='let category of data.categories' [value]='category.id'>\n                {{ category.categoryName }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div fxFlex='0 0 calc(50% - 16px)'>\n          <mat-form-field class='form-control'>\n            <mat-label>Uploaded By</mat-label>\n            <input matInput formControlName='uploadedBy'/>\n          </mat-form-field>\n        </div>\n      </div>\n      <div\n        fxLayout='row wrap'\n        fxLayoutGap='16px'\n        fxLayoutAlign='space-between flex-start'\n      >\n        <div \n          *ngFor='let filter of data.filters.typeDrawingStatus'\n          class='drawing-filters__type-drawing-filter'\n          fxFlex='0 0 calc(50% - 16px)'\n        >\n          <mat-form-field class='form-control'>\n            <mat-label>{{ capitalize(filter.label) }} Drawing Status</mat-label>\n            <mat-select [formControlName]='generateFormControlName(filter.type)'>\n              <mat-option value=''>All</mat-option>\n              <mat-option value='Submitted'>Submitted</mat-option>\n              <mat-option value='ReSubmitted'>ReSubmit</mat-option>\n              <mat-option value='Approved'>Approved</mat-option>\n              <mat-option value='Rejected'>Rejected</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <!-- <div fxFlex='0 0 calc(50% - 16px)'>\n          <mat-form-field class='form-control'>\n            <mat-label>As Built Drawing Status</mat-label>\n            <mat-select formControlName='asBuiltDrawingStatus'>\n              <mat-option value=''>All</mat-option>\n              <mat-option value='Submitted'>Submitted</mat-option>\n              <mat-option value='ReSubmitted'>ReSubmit</mat-option>\n              <mat-option value='Approved'>Approved</mat-option>\n              <mat-option value='Rejected'>Rejected</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div> -->\n      </div>\n    </div>\n    <div mat-dialog-actions class='drawing-filters__actions'>\n      <button mat-raised-button color='primary' type='submit'>Apply Filters</button>\n      <button mat-raised-button color='warn' type='button' (click)='resetFilters()'>Reset Filters</button>\n      <button mat-raised-button mat-dialog-close type='button'>Cancel</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ProjectConfiguration } from 'src/app/core/models/project-configuration';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\n\n@Component({\n  selector: 'app-drawing-summary-list',\n  templateUrl: './drawing-summary-list.component.html',\n  styleUrls: ['./drawing-summary-list.component.scss']\n})\nexport class DrawingSummaryListComponent implements OnInit {\n  @Input() projectId: String | Number;\n\n  public loading: boolean = false;\n  public drawingTypeSummaries: Array<any> = [];\n  public swiperConfig: SwiperConfigInterface = {\n    slidesPerView: 3,\n    slidesOffsetAfter: 30,\n    slidesOffsetBefore: 30,\n    navigation: true,\n    loop: true,\n  } \n\n  constructor(\n    private projectService: ProjectsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n\n    this.projectService.getProjectDrawingTypeSummary(this.projectId).subscribe(res => {\n      this.drawingTypeSummaries = res;\n      this.loading = false;\n    });\n  }\n}\n","<swiper \n  [config]=\"swiperConfig\"\n  class=\"drawing-summary-list\"\n>\n  <div \n    class=\"drawing-summary-list__col\"\n    *ngFor='let summary of drawingTypeSummaries'\n  >\n    <app-drawing-summary\n      [summary]='summary'\n      [title]='summary.type'\n      class='drawing-summary-list__summary'\n    ></app-drawing-summary>\n  </div>\n</swiper>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-drawing-summary',\n  templateUrl: './drawing-summary.component.html',\n  styleUrls: ['./drawing-summary.component.scss']\n})\nexport class DrawingSummaryComponent {\n  private _title: string;\n\n  @Input() summary: SummaryInterface;\n  @Input()\n  get title() {\n    return this._title;\n  }\n\n  set title(value: string) {\n    this._title = value.replace(/-/g, \" \");\n  }\n\n  constructor() { }\n}\n\ninterface SummaryInterface {\n  approved: string | number;\n  for_approval: string | number;\n  re_submit: string | number;\n  rejected: string | number;\n  submitted: string | number;\n  total_drawings: string | number;\n  total_submitted: string | number;\n  type?: string;\n}","<h4 class='summary-title'><mat-icon>list_alt</mat-icon>{{ title | titlecase }} Summary</h4>\n<mat-card class='summary-card'>\n  <mat-card-content>\n    <div class=\"summary\">\n      <p><span>For approval:</span> {{ summary ? summary.for_approval : '-' }} </p>\n      <p><span>Total Drawings:</span> {{ summary ? summary.total_drawings : '-' }} </p>\n      <p><span>Submitted:</span> {{ summary ? summary.submitted : '-' }}</p>\n      <p><span>Resubmit:</span> {{ summary ? summary.re_submit : '-' }}</p>\n      <p><span>Approved:</span> {{ summary ? summary.approved : '-' }}</p>\n      <p><span>Rejected:</span> {{ summary ? summary.rejected : '-' }}</p>\n      <p><span>Total Submitted:</span> {{ summary ? summary.total_submitted : '-' }}</p>\n    </div>\n  </mat-card-content>\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { DrawingService } from '../shared/drawing.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\n\n@Component({\n  selector: 'app-drawing-table-drawing-target-date',\n  templateUrl: './drawing-table-drawing-target-date.component.html',\n  styleUrls: ['./drawing-table-drawing-target-date.component.scss']\n})\nexport class DrawingTableDrawingTargetDateComponent implements OnInit {\n  targetDate: String | Number;\n  loading: Boolean = true;\n\n  @Input() drawing;\n  @Input() type: ProjectDrawingType;\n\n  constructor(\n    private drawingService: DrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getTypeDrawingTargetDate();\n  }\n\n  getTypeDrawingTargetDate() {\n    this.loading = true;\n    this.drawingService.getTypeDrawingTargetDate(this.drawing.id, this.type.id).subscribe(res => {\n      this.targetDate = res ? res.target_date : '';\n      this.loading = false;\n    });\n  }\n\n}\n","<div class=\"target-date\">\n  <div class=\"target-date__content\" *ngIf='!loading'>\n    <ng-container>\n      <p *ngIf='targetDate'>{{ targetDate | date:'dd-MM-yyyy' }}</p>\n      <p *ngIf='!targetDate && drawing.drawing_target_date'>{{ drawing.drawing_target_date | date:'dd-MM-yyyy' }}</p>\n      <p *ngIf='!targetDate && !drawing.drawing_target_date'>-</p>\n    </ng-container>\n  </div>\n  <div class=\"target-date__loader\" *ngIf='loading'>\n    <content-loader [style]='{width: \"100%\"}' height=\"50\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n    </content-loader>\n  </div>\n</div>\n","import { Component, OnInit, Inject, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\nimport { DrafterAdapter } from 'src/app/core/adapters/drafter.adapter';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DatePipe } from '@angular/common';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-drawing-table-request-drawing',\n  templateUrl: './drawing-table-request-drawing.component.html',\n  styleUrls: ['./drawing-table-request-drawing.component.scss']\n})\nexport class DrawingTableRequestDrawingComponent implements OnInit {\n  loading: Boolean = false;\n  isSubmitting: Boolean = false;\n  drafters: Array<Drafter> = [];\n  requestDrawingForm: FormGroup;\n  onRequestSaved: EventEmitter<any> = new EventEmitter();\n  \n\n  constructor(\n    public dialogRef: MatDialogRef<DrawingTableRequestDrawingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DrawingTableRequestDrawingData,\n    private formBuilder: FormBuilder,\n    private drafterService: DrafterService,\n    private drafterAdapter: DrafterAdapter,\n    private drawingRequestService: DrawingRequestService,\n    private userService: UserService,\n    private datePipe: DatePipe,\n  ) { \n    this.requestDrawingForm = this.formBuilder.group({\n      subject: new FormControl('', [Validators.required]),\n      targetDate: new FormControl(new Date(), [Validators.required]),\n      drawingFile: new FormControl('', [Validators.required]),\n      comments: new FormControl(''),\n      drafter: new FormControl(null, [Validators.required])\n    });\n  }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n\n    this.drafterService.getDrafters().subscribe(res => {\n      this.drafters = res.data.map(drafter => {\n        return this.drafterAdapter.adapt(drafter);\n      });\n\n      this.loading = false;\n    });\n  }\n\n  processForm() {\n    this.isSubmitting = true;\n\n    this.userService.currentUser\n      .pipe(\n        switchMap(res => {\n          const {\n            subject,\n            targetDate,\n            drawingFile,\n            comments,\n            drafter\n          } = this.requestDrawingForm.value;\n      \n          const body = {\n            subject,\n            target_date: this.datePipe.transform(targetDate, \"yyyy-MM-dd\"),\n            request_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\n            drafter_id: drafter,\n            project_id: this.data.projectId,\n            drawing_id: this.data.drawingId,\n            drawing_file: drawingFile,\n            type_id: this.data.typeId,\n            employee_id: res.employeeId,\n            comments\n          }\n\n          return this.submitData(body);\n      }))\n      .subscribe(res => {\n        this.isSubmitting = false;\n        this.dialogRef.close();\n        this.onRequestSaved.emit();\n      });\n  }\n\n  submitData(body) {\n    return this.drawingRequestService.createRequest(body);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n\nexport interface DrawingTableRequestDrawingData {\n  drawingId: string | Number;\n  typeId: String | Number;\n  projectId: string | Number;\n}\n","<h1 mat-dialog-title>Request Drawing</h1> \n<form [formGroup]=\"requestDrawingForm\">\n  <mat-dialog-content>\n    <div class=\"new-drawing-request\">\n      <mat-form-field class='form-control'>\n        <mat-label>Subject: </mat-label>\n        <input matInput type=\"text\" formControlName='subject'>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Target Date:</mat-label>\n        <input matInput [matDatepicker]=\"targetDate\" formControlName='targetDate'>\n        <mat-datepicker-toggle matSuffix [for]=\"targetDate\"></mat-datepicker-toggle>\n        <mat-datepicker #targetDate></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Drafter: </mat-label>\n        <mat-select formControlName='drafter'>\n          <mat-option\n            *ngFor='let drafter of drafters'\n            [value]='drafter.id'\n          >\n            {{ drafter.fullname }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Original Drawing File:</mat-label>\n        <upload-input formControlName='drawingFile'></upload-input>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n      <textarea matInput id=\"\" cols=\"20\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-raised-button color='warn' type='button' (click)='closeDialog()'>Close</button>\n    <button mat-raised-button color='primary' type='button' [disabled]='!requestDrawingForm.valid || isSubmitting' (click)='processForm(); $event.preventDefault()'>Save</button>\n  </mat-dialog-actions>\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AddDrawingComponent } from 'src/app/drawing/add-drawing/add-drawing.component';\nimport { EditDrawingComponent } from 'src/app/drawing/edit-drawing/edit-drawing.component';\nimport { SubmitShopDrawingComponent } from 'src/app/drawing/submit-shop-drawing/submit-shop-drawing.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuditTrailComponent } from '../audit-trail/audit-trail.component';\nimport { DrawingService } from '../shared/drawing.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport _ from 'lodash';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { DrawingTableRequestDrawingComponent, DrawingTableRequestDrawingData } from '../drawing-table-request-drawing/drawing-table-request-drawing.component';\n\nexport interface Drawing {\n  id: string | Number,\n  title: string,\n  tenderDrawingNo: string,\n  targetDate: string,\n  drawingNumber: string,\n  revision: string,\n  actualSubmissionDate: string,\n  returnedDate: string,\n  approvedBy: string,\n  comments: string,\n  drawingFile: string,\n  transmittalFile: string,\n  current: Object,\n}\n\n@Component({\n  selector: 'app-drawing-drawing-table',\n  templateUrl: './drawing-table.component.html',\n  styleUrls: ['./drawing-table.component.scss']\n})\nexport class DrawingTableComponent implements OnInit {\n  @Input() loading: boolean = false;\n  @Input() drawings: Array<any> = []\n  @Input() projectId: string | number;\n  @Input() drawingTypes: Array<ProjectDrawingType> = [];\n\n  public isGettingConfig: boolean = false;\n\n  @Output() onFormsSubmit: EventEmitter<any> = new EventEmitter();\n\n  get loadingColSpan() {\n    return 2 + this.drawingTypes.length;\n  }\n\n  constructor(\n    public dialog: MatDialog,\n    private drawingService: DrawingService,\n    private projectConfigService: ProjectConfigurationService,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {}\n\n  showAddDrawing(): void {\n    const dialogRef = this.dialog.open(AddDrawingComponent, {\n      width: '700px',\n    })\n  }\n\n  showEditDrawing(drawing, view = false): void {\n    const type = this.drawingTypes[0];\n\n    const editDrawingRef = this.dialog.open(EditDrawingComponent, {\n      width: '700px',\n      data: {\n        drawing,\n        view,\n        type,\n      }\n    })\n    \n    editDrawingRef.componentInstance.formSubmitted.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'edit',\n      })\n    })\n  }\n\n  viewTenderDrawing(drawing) {\n    const type = this.drawingTypes[0];\n\n    const editDrawingRef = this.dialog.open(EditDrawingComponent, {\n      width: '700px',\n      data: {\n        drawing,\n        view: true,\n        type,\n      }\n    })\n  }\n\n  viewDrawing(drawing): void {\n    this.drawingService.openDrawing(drawing.drawing_file_upload)\n  }\n\n  showSubmitDrawing(drawing: any, type): void {\n    const nextDrawingType = this.getNextTypeDrawing(type);\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id: type.id,\n        drawing_type: type,\n        action: 'submit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    submitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'submit',\n      })\n    })\n  }\n\n  getNextTypeDrawing(type) {\n    let nextDrawingType = null;\n\n    const index = this.drawingTypes.indexOf(type);\n\n    if(index !== -1) {\n      nextDrawingType = this.drawingTypes[index + 1];\n    }\n\n    return nextDrawingType;\n  }\n\n  showReSubmitDrawing(drawing, type_id): void {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const resubmitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'resubmit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    resubmitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'resubmit',\n      })\n    })\n  }\n\n  showApprovedDrawing(drawing, type_id): void {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const dialog = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'approve',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    dialog.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'approved',\n      })\n    })\n  }\n  \n  showRejectedDrawing(drawing, type_id): void {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const dialog = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'reject',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    dialog.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'reject',\n      })\n    })\n  }\n\n  showSubmitTypeDrawing(drawing, type):void {\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type: type,\n        action: 'submit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    submitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'submit',\n      })\n    })\n  }\n\n  showDrawing(drawing, type_id) {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'view',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n  }\n\n  showEditTypeDrawing(drawing, type_id) {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'edit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    submitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type_id,\n        action: 'edit',\n      })\n    })\n  }\n\n  showTypeDrawing(drawing, type) {\n    this.showDrawing(drawing, type)\n  }\n\n  showHistory(drawing, type=null) {\n    this.dialog.open(AuditTrailComponent, {\n      width: '1000px',\n      data: {\n        drawing: drawing,\n        type,\n      }\n    })\n  }\n\n  getReturnedDate(drawing): string | null {\n    const type = drawing.status;\n\n    if(type === 'Submitted' || !drawing) return;\n    \n    switch(type) {\n      case 'Approved':\n        return drawing.drawing_approved_date;\n      case 'Rejected':\n        return drawing.drawing_rejected_date;\n      default:\n        return drawing.drawing_resubmission_date;\n    }\n  }\n\n  drawingHasMissingFields(drawing) {\n    return !drawing.drawing_no && !drawing.drawing_as_built_target_date && !drawing.drawing_revision_no;\n  }\n\n  goToHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/type-drawing/${drawing.id}/history`)\n  }\n\n  goToTenderDrawingHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/tender-drawing/${drawing.id}/history`)\n  }\n\n  goToShopDrawingHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/shop-drawing/${drawing.id}/history`)\n  }\n\n  goToAsBuiltDrawingHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/as-built-drawings/${drawing.id}/history`)\n  }\n\n  extractTypeDrawing(drawing, type) {\n    const typeDrawing =  drawing.type_drawings.find(typeDrawing => {\n      return typeDrawing.type_id === type;\n    });\n    return typeDrawing;\n  }\n\n  extractTypeDrawingTargetDate(drawing, type) {\n    const typeDrawingTargetDate = drawing.type_drawing_target_dates.find(targetDate => targetDate.project_drawing_type_id === type);\n\n    if(!typeDrawingTargetDate) {\n\n    }\n\n    return typeDrawingTargetDate ? \n            typeDrawingTargetDate.target_date: \n            (drawing.drawing_target_date ? drawing.drawing_target_date : '-');\n  }\n\n  generateDrawingTableHeaderClass(type) {\n    return `tender-drawing__heading tender-drawing__heading--${type}`;\n  }\n\n  generateDrawingTitle(type) {\n    return type.replace(/-/g, \" \");\n  }\n\n  generateStatusClass(status) {\n    const statusClass = _.kebabCase(status);\n    return `drawing-table__status drawing-table__status--${statusClass}`;\n  }\n\n  \n  showRequestDrawing(\n    drawing, \n    drawingType: ProjectDrawingType\n  ) {\n    console.log(drawing)\n    const dialogData: DrawingTableRequestDrawingData = {\n      drawingId: drawing.id,\n      typeId: drawingType.id,\n      projectId: this.projectId,\n    }\n\n    const dialog = this.dialog.open(DrawingTableRequestDrawingComponent, {\n      width: '720px', \n      data: dialogData,\n    });\n\n    dialog.componentInstance.onRequestSaved.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'request-drawing',\n        action: 'create',\n      })\n    });\n  }\n\n  extractTypeStatus(drawing, type) {\n    const condition =  drawing.drawing_requests.find(request => {\n      return request.type_id === type && request.status === 'Assigned';\n    });\n    \n    return condition ? 'Requested' : '';\n  }\n}\n","<div class=\"drawing-table-container\">\n  <table class='drawing-table' *ngIf='drawingTypes'>\n    <thead class='headings'>\n      <tr>\n        <th class='tender-drawing__heading tender-drawing__heading--tender' style='min-width: 450px;'>Tender Drawing</th>\n        <th class='tender-drawing__heading tender-drawing__heading--current' style='min-width: 170px'>Current</th>\n        <ng-container *ngFor='let drawingType of drawingTypes'>\n          <th style='min-width: 680px' [style.backgroundColor]='drawingType.color'>{{ generateDrawingTitle(drawingType.type) | titlecase }} Drawing</th>\n        </ng-container>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style='min-width: 550px;'>\n          <table class='tender-drawing-table'>\n            <thead>\n              <tr>\n                <th style='width: 10%'>No</th>\n                <th style='width: 30%'>Drawing Title</th>\n                <th style='width: 30%'>Drawing No</th>\n                <th style='width: 20%'>Tender <br/> Drawing Date</th>\n                <th style='width: 10%'></th>\n              </tr>\n            </thead>\n          </table>\n        </td>\n        <td style='min-width: 180px'>\n          <table class='tender-drawing-table'>\n            <thead>\n              <tr>\n                <th>Drawing No.</th>\n              </tr>\n            </thead>\n          </table>\n        </td>\n        <td *ngFor='let drawingType of drawingTypes'>\n          <table class='tender-drawing-table'>\n            <thead>\n              <tr>\n                <th style='width: 15%'>Target <br />Sub. Date</th>\n                <th style='width: 15%'>SBHE <br />Transmittal No.</th>\n                <th style='width: 15%'>Actual <br />Sub. Date</th>\n                <th style='width: 15%'>Returned <br />Date</th>\n                <th style='width: 15%'>Client <br /> Transmittal No.</th>\n                <th style='width: 15%'>Status</th>\n                <th></th>\n              </tr>\n            </thead>\n          </table>\n        </td>\n      </tr>\n      <tr *ngIf='loading'>\n        <td [colSpan]='loadingColSpan'>\n          <mat-progress-spinner\n            class='drawing-table__loader'\n            mode='indeterminate'\n            diameter='40'\n          ></mat-progress-spinner>\n        </td>\n      </tr>\n      <tr *ngFor=\"let drawing of drawings; index as i;\">\n        <td *ngIf='!loading' style='min-width: 450px;'>\n          <table class='tender-drawing-table'>\n            <tbody>\n              <tr>\n                <td class='cell-centered' style='width: 10%'>{{ i + 1 }}</td>\n                <td class='cell-centered' style='width: 30%'>{{ drawing.drawing_title }}</td>\n                <td class='cell-centered' style='width: 30%'>{{ drawing.drawing_no }}</td>\n                <td class='cell-centered' style='width: 20%'>{{ drawing.drawing_title_date | date:'dd-MM-yyyy' }}</td>\n                <td class='cell-centered see-more-cell' style='width: 10%'>\n                  <button mat-button [matMenuTriggerFor]='tenderDrawingMenu'>\n                    <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                  </button>\n                  <mat-menu #tenderDrawingMenu xPosition='before'>\n                    <button mat-menu-item (click)='viewTenderDrawing(drawing)'>View</button>\n                    <button mat-menu-item (click)='showEditDrawing(drawing)'>Edit</button>\n                    <button mat-menu-item (click)='goToTenderDrawingHistory(drawing)'>History</button>\n                  </mat-menu>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </td>\n        <td *ngIf='!loading'>\n          <table class='current-drawing-table tender-drawing-table'>\n              <tbody>\n                <tr>\n                  <td>{{ drawing.current_drawing_no }}</td>\n                </tr>\n              </tbody>\n          </table>\n        </td>\n        <ng-container *ngIf='!loading'>\n          <ng-container *ngFor='let drawingType of drawingTypes; let i = index;'>\n            <td>\n              <table class='shop-drawing-table tender-drawing-table' *ngIf='drawing.type_drawings && extractTypeDrawing(drawing, drawingType.id)'>\n                <tbody>\n                  <tr *ngIf='extractTypeDrawing(drawing, drawingType.id)'>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      {{ extractTypeDrawingTargetDate(drawing, drawingType.id) | date:'dd-MM-yyyy'}}\n                    </td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id) && extractTypeDrawing(drawing, drawingType.id).transmittal_form ? extractTypeDrawing(drawing, drawingType.id).transmittal_form.ref_no : '' }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id).drawing_submission_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id).drawing_returned_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id).drawing_client_transmittal_no }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      <span [class]='generateStatusClass(extractTypeDrawing(drawing, drawingType.id).status)'>{{ extractTypeDrawing(drawing, drawingType.id).status }}</span> \n                    </td>\n                    <ng-container *ngIf='extractTypeDrawing(drawing, drawingType.id).status !== \"To Submit\"'>\n                      <td class='cell-centered see-more-cell'>\n                        <div class=\"tender-drawing-table__actions\">\n                          <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                            <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                          </button>\n                          <div \n                            class=\"tender-drawing-table__info-container\"\n                            *ngIf='drawingHasMissingFields(extractTypeDrawing(drawing, drawingType.id))'\n                          >\n                            <mat-icon matTooltip=\"Drawing not yet completely filled.\" [matTooltipPosition]=\"'below'\" class='tender-drawing-table__info'>info</mat-icon>\n                            \n                          </div>\n                        </div>\n                        <mat-menu #shopDrawingMenu xPosition='before'>\n                          <button mat-menu-item (click)='showReSubmitDrawing(drawing, drawingType.id)'>Re Submit</button>\n                          <button mat-menu-item (click)='showApprovedDrawing(drawing, drawingType.id)'>Approved</button>\n                          <button mat-menu-item (click)='showRejectedDrawing(drawing, drawingType.id)'>Rejected</button>\n                          <button mat-menu-item (click)='showTypeDrawing(drawing, drawingType.id)'>View</button>\n                          <button mat-menu-item (click)='showEditTypeDrawing(drawing, drawingType.id)'>Edit</button>\n                          <button mat-menu-item (click)='showRequestDrawing(drawing, drawingType)'>Request Drawing</button>\n                          <button mat-menu-item (click)='goToHistory(extractTypeDrawing(drawing, drawingType.id))'>History</button>\n                        </mat-menu>\n                      </td>\n                    </ng-container>\n                    <ng-container *ngIf='extractTypeDrawing(drawing, drawingType.id).status === \"To Submit\"'>\n                      <td class='cell-centered see-more-cell'>\n                        <div class=\"tender-drawing-table__actions\">\n                          <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                            <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                          </button>\n                          <div \n                            class=\"tender-drawing-table__info-container\"\n                            *ngIf='drawingHasMissingFields(extractTypeDrawing(drawing, drawingType.id))'\n                          >\n                            <mat-icon matTooltip=\"Drawing not yet completely filled.\" [matTooltipPosition]=\"'below'\" class='tender-drawing-table__info'>info</mat-icon>\n                            \n                          </div>\n                        </div>\n                        <mat-menu #shopDrawingMenu xPosition='before'>\n                          <button mat-menu-item (click)='showSubmitDrawing(drawing, drawingType)'>Submit</button>\n                          <button mat-menu-item (click)='showRequestDrawing(drawing, drawingType)'>Request Drawing</button>\n                          <button mat-menu-item (click)='showTypeDrawing(drawing, drawingType.id)'>View</button>\n                        </mat-menu>\n                      </td>\n                    </ng-container>\n                  </tr>\n                </tbody>\n              </table>\n              <table class='shop-drawing-table tender-drawing-table' *ngIf='drawing.type_drawings && !extractTypeDrawing(drawing, drawingType.id)'>\n                <tbody>\n                  <tr>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      {{ extractTypeDrawingTargetDate(drawing, drawingType.id) | date:'dd-MM-yyyy' }}\n                    </td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      <span [class]='generateStatusClass(extractTypeStatus(drawing, drawingType.id))'>\n                        {{ extractTypeStatus(drawing, drawingType.id) }}\n                      </span>\n                    </td>\n                    <td class='cell-centered see-more-cell'>\n                      <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                      </button>\n                      <mat-menu #shopDrawingMenu xPosition='before'>\n                        <button mat-menu-item (click)='showRequestDrawing(drawing, drawingType)'>Request Drawing</button>\n                        <button mat-menu-item (click)='showSubmitDrawing(drawing, drawingType)'>Submit</button>\n                      </mat-menu>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </td>\n            <!-- <td *ngIf='drawingType !== \"shop\"'>\n              <table class='shop-drawing-table tender-drawing-table'>\n                <tbody>\n                  <tr *ngIf='extractTypeDrawing(drawing, drawingType)'>\n                    <td class='cell-centered' style=\"width: 22%\">{{ drawing.drawing_target_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\">{{ extractTypeDrawing(drawing, drawingType).drawing_submission_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\">{{ getReturnedDate(extractTypeDrawing(drawing, drawingType)) | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\">{{ extractTypeDrawing(drawing, drawingType).status }}</td>\n                    <td class='cell-centered see-more-cell'>\n                      <button mat-button [matMenuTriggerFor]='buildDrawingMenu'>\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                      </button>\n                      <mat-menu #buildDrawingMenu xPosition='before'>\n                        <button mat-menu-item (click)='showReSubmitDrawing(drawing, drawingType)'>Re Submit</button>\n                        <button mat-menu-item (click)='showApprovedDrawing(drawing, drawingType)'>Approved</button>\n                        <button mat-menu-item (click)='showRejectedDrawing(drawing, drawingType)'>Rejected</button>\n                        <button mat-menu-item (click)='showTypeDrawing(drawing, drawingType)'>View</button>\n                        <button mat-menu-item (click)='showEditTypeDrawing(drawing, drawingType)'>Edit</button>\n                        <button mat-menu-item (click)='goToAsBuiltDrawingHistory(extractTypeDrawing(drawing, drawingType))'>History</button>\n                      </mat-menu>\n                    </td>\n                  </tr>\n                  <tr *ngIf='!extractTypeDrawing(drawing, drawingType)'>\n                    <td class='cell-centered' style=\"width: 22%\">{{ drawing.shop_drawing && drawing.shop_drawing.drawing_as_built_target_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\"></td>\n                    <td class='cell-centered' style=\"width: 22%\"></td>\n                    <td class='cell-centered' style=\"width: 22%\"></td>\n                    <td class='cell-centered see-more-cell'>\n                      <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                      </button>\n                      <mat-menu #shopDrawingMenu xPosition='before'>\n                        <button mat-menu-item (click)='showSubmitTypeDrawing(drawing, drawingType)'>Submit</button>\n                      </mat-menu>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </td> -->\n          </ng-container>\n        </ng-container>\n      </tr>\n      <tr *ngIf='drawings.length === 0 && !loading'>\n        <td colspan=4>\n          <p class='text-center'><strong>No drawings found...</strong></p>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\nimport { AddDrawingComponent } from './add-drawing/add-drawing.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DrawingService, DrawingParams } from './shared/drawing.service';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { Router, ParamMap, Route, ActivatedRoute } from '@angular/router';\nimport { mergeMap, switchMap, map } from 'rxjs/operators';\nimport { forkJoin, Observable } from 'rxjs';\nimport { UserService } from '../core/services/user.service';\nimport { AddCategoryComponent } from './add-category/add-category.component';\nimport { FormBuilder } from '@angular/forms';\nimport { CreateTransmittalFormComponent } from '../transmittal-forms/create-transmittal-form/create-transmittal-form.component';\nimport { DrawingFiltersComponent, DrawingFiltersDialogData } from './drawing-filters/drawing-filters.component';\nimport { DrawingFilters } from '../core/models/drawing-filters';\nimport { Breadcrumb } from '../layout/breadcrumbs/breadcrumbs.component';\nimport { Project } from '../core/models/project';\nimport { Client } from '../core/models/client';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { ProjectConfigurationComponent, ProjectConfigurationDialogData } from './project-configuration/project-configuration.component';\nimport { DrawingSummaryListComponent } from './drawing-summary-list/drawing-summary-list.component';\nimport { ProjectConfigurationService } from '../core/services/project-configuration.service';\nimport { ProjectConfiguration } from '../core/models/project-configuration';\nimport { Drawing } from './drawing-table/drawing-table.component';\nimport { ProjectDrawingType } from '../core/models/project-drawing-type';\nimport { ProjectCategory } from '../core/models/project-category';\nimport { ProjectCategoryService } from '../core/services/project-category.service';\n\n@Component({\n  selector: 'app-drawing',\n  templateUrl: './drawing.component.html',\n  styleUrls: ['./drawing.component.scss']\n})\nexport class DrawingComponent implements OnInit {\n  @ViewChild('success') successDialog: SwalComponent;\n  @ViewChild('drawingSummary') drawingSummary: DrawingSummaryListComponent;\n\n  drawings;\n  projectConfig: ProjectConfiguration;\n  projectCategories: ProjectCategory[];\n  isTableLoading: boolean = false\n  isDataLoading: boolean = false\n  project: Project;\n  isAuthenticated: boolean;\n  summary = {\n    shopDrawing: null,\n    asBuilt: null,\n  };\n  user = null;\n  client: Client = null;\n\n  _filters: DrawingFilters = {\n    drawingNo: '',\n    category: '',\n    uploadedBy: '',\n    typeDrawingStatus: [],\n  }\n\n  _drawingTableOptions: DrawingTableOptions = {\n    perPage: 50,\n    currentPage: 1,\n  }\n\n  get drawingTableOptions(): DrawingTableOptions {\n    return this._drawingTableOptions;\n  }\n\n  set drawingTableOptions(options: DrawingTableOptions) {\n    this.isTableLoading = true;\n    this._drawingTableOptions = options;\n\n    this.getDrawings(this.project.id, options.currentPage, options.perPage)\n      .subscribe(res => {\n        this.drawings = res.data;\n        this.isTableLoading = false;\n      });\n  }\n\n  get filters(): DrawingFilters {\n    return this._filters;\n  }\n\n  set filters(filters: DrawingFilters) {\n    this._filters = filters;\n    this.searchDrawings();\n  }\n\n  get pageSizeOptions() {\n    const defaultPageSizes = [\n      50,\n      100,\n      150,\n    ];\n\n    if(this.drawings.total > 150) {\n      defaultPageSizes.push(this.drawings.total);\n    }\n\n    return defaultPageSizes;\n  }\n\n\n  constructor(\n    public dialog: MatDialog,\n    public service: DrawingService,\n    public projectService: ProjectsService,\n    public projectConfigService: ProjectConfigurationService,\n    public projectCategoryService: ProjectCategoryService,\n    private userService: UserService,\n    private zone: NgZone,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeData();\n\n    this.userService.currentUser.subscribe((user) => {\n      this.user = user; \n    });\n  }\n\n  initializeData(): void {\n    this.isDataLoading = true;\n    this.isTableLoading = true;\n    this.route.paramMap.pipe(\n      mergeMap(\n        (params: ParamMap) => {\n          const projectId = params.get('id')\n          // TODO: Should I make this as one request?\n          const project = this.projectService.getProject(params.get('id'));\n          const drawings = this.getDrawings(projectId, this.drawingTableOptions.currentPage, this.drawingTableOptions.perPage);\n          const shopDrawingSummary = this.service.getSummary('shop', projectId);\n          const asBuiltDrawingSummary = this.service.getSummary('as-built', projectId);\n          const client = this.projectService.getClient(projectId);\n          const projectConfig = this.projectConfigService.getProjectDrawingTypes(projectId);\n          const projectCategories = this.projectCategoryService.getCategories(projectId);\n\n          return forkJoin([project, drawings, shopDrawingSummary, asBuiltDrawingSummary, client, projectConfig, projectCategories]);\n        },\n      ),\n    ).subscribe(([project, drawing, shopDrawingSummary, asBuiltDrawingSummary, client, projectConfig, projectCategories]) => {\n      this.project = project;\n      this.drawings = drawing.data\n      this.summary = {\n        shopDrawing: shopDrawingSummary.data,\n        asBuilt: asBuiltDrawingSummary.data,\n      }\n      this.projectCategories = projectCategories;\n\n      this.client = client;\n      this.projectConfig = projectConfig;\n      this.filters.typeDrawingStatus = this.projectConfig.drawingTypes.map(type => {\n        return {\n          type: type.id,\n          label: type.type,\n          value: '',\n        }\n      });\n      this.isTableLoading = false;\n      this.isDataLoading = false;\n      debugger\n    });\n  }\n\n  getDrawings(project, page, perPage, params = {}): Observable<any> {\n    return this.service.getDrawings(project, {\n      page,\n      items: perPage,\n    });\n  }\n\n  showAddDrawing(): void {\n    const dialogRef = this.dialog.open(AddDrawingComponent, {\n      width: '700px',\n      data: {\n        projectId: this.project.id,\n        type: this.projectConfig.drawingTypes[0],\n      }\n    })\n\n    dialogRef.componentInstance.formSubmitted.subscribe(res => {\n      this.refreshData()\n    })\n  }\n\n  refreshData(): void {\n    this.initializeData()\n    this.drawingSummary.getData();\n  }\n\n  showAddCategory() {\n    const addCategory = this.dialog.open(AddCategoryComponent, {\n      width: '700px',\n      data: {\n        projectId: this.project.id,\n      }\n    })\n\n    addCategory.componentInstance.formSubmitted.subscribe(res => {\n      this.initializeData()\n    });\n\n    addCategory.componentInstance.onDeleteSuccess.subscribe(res => {\n      this.successDialog.swalOptions = {\n        text: 'Category successfuly deleted.'\n      }\n\n      this.successDialog.fire();\n      this.initializeData();\n    });\n\n    addCategory.componentInstance.onEditSuccess.subscribe(res => {\n      this.successDialog.swalOptions = {\n        text: 'Category successfuly edited.'\n      }\n\n      this.successDialog.fire();\n      this.initializeData();\n    });\n  }\n\n  searchDrawings() {\n    this.isTableLoading = true;\n\n    const {\n      category,\n      uploadedBy,\n      searchQuery,\n      typeDrawingStatus,\n    } = this.filters;\n\n    const params: DrawingParams = {\n      category,\n      type_drawing_status: typeDrawingStatus,\n      uploaded_by: uploadedBy,\n      query: searchQuery,\n      page: this.drawingTableOptions.currentPage,\n      items: this.drawingTableOptions.perPage\n    }\n\n    this.service.getDrawings(this.project.id, params).subscribe(res => {\n      this.drawings = res.data\n\n      this.isTableLoading = false;\n    });\n  }\n\n  goToDrawingRequests():void {\n    const currentUrl = this.router.url;\n\n    this.router.navigateByUrl(`${currentUrl}/requests`);\n  }\n\n  goToClients(): void {\n    const currentUrl = this.router.url;\n\n    this.router.navigateByUrl(`${currentUrl}/clients`)\n  }\n\n  showNewTransmittalForm() {\n    this.dialog.open(CreateTransmittalFormComponent, {\n      width: '1000px',\n    });\n  }\n\n  pageEvent($event) {\n    this.drawingTableOptions = {\n      perPage: $event.pageSize,\n      currentPage: $event.pageIndex + 1,\n    }\n  }\n\n  openFilters() {\n    const data: DrawingFiltersDialogData = {\n      filters: this.filters,\n      categories: this.projectCategories,\n    }\n\n    const drawingFiltersDialog = this.dialog.open(DrawingFiltersComponent, {\n      width: '700px',\n      data,\n    });\n\n    drawingFiltersDialog.componentInstance.onFormSubmit.subscribe(filters => {\n      this.filters = filters;\n    });\n  }\n\n  openProjectSettings() {\n    const data: ProjectConfigurationDialogData = {\n      projectId: this.project.id,\n    }\n\n    const projectSettingsDialog =  this.dialog.open(ProjectConfigurationComponent, {\n      width: '700px',\n      data,\n    });\n\n    projectSettingsDialog.componentInstance.onSaveSuccess.subscribe(() => {\n      this.successDialog.swalOptions = {\n        text: 'Project settings successfuly updated.'\n      }\n\n      this.successDialog.fire();\n      this.initializeData();\n    });\n  }\n\n  handleFormSubmit($event) {\n    const {\n      type,\n      action,\n    } = $event;\n\n    if(type === 'request-drawing') {\n      this.successDialog.swalOptions = {\n        text: 'Drawing request successfuly created.'\n      }\n\n      this.successDialog.fire();\n    }\n\n    this.refreshData();\n  }\n}\n\n\ninterface DrawingTableOptions {\n  perPage: Number;\n  currentPage: Number;\n}\n","\n<!-- <app-breadcrumbs></app-breadcrumbs> -->\n<div class=\"summary-row\" *ngIf='!isDataLoading && project && drawings'>\n  <div class=\"header\">\n    <div \n      fxLayout='row'\n      fxLayoutAlign='space-between center'\n    >\n      <h1>{{ project.title }}</h1>\n      <div class=\"actions\">\n        <a [routerLink]=\"['requests']\" mat-stroked-button color='primary' *ngIf='user && user.isDrafter'>My Drawing Requests</a>&nbsp;\n        <a [routerLink]=\"['/dashboard/projects']\" mat-raised-button color='primary'>View All Projects</a>\n      </div>\n    </div>\n  </div>\n</div>\n<div \n  class=\"drawing-body\"\n  fxLayout='row'\n  fxLayoutAlign='space-between start'\n  *ngIf='!isDataLoading && project && drawings'\n>\n  <div \n    class=\"actions\"\n    fxLayout='row'\n    fxLayoutGap='16px'\n  >\n    <div \n      class=\"actions__buttons\"\n      fxLayout='column'\n      fxLayoutGap='8px'\n      *ngIf='project'\n    >\n      <button \n        mat-stroked-button \n        class='actions__button' \n        color='primary' \n        (click)='openProjectSettings()'\n        *ngIf='user.isSuperadmin'\n      >\n          <mat-icon>settings</mat-icon>\n          Project Settings\n      </button>\n      <button mat-stroked-button class='actions__button' color='primary' (click)='goToClients()'><mat-icon>business</mat-icon>Manage Client</button>\n      <button mat-stroked-button class='actions__button' color='primary' (click)='showAddDrawing()' *ngIf='projectConfig.drawingTypes.length && projectCategories.length'><mat-icon>add</mat-icon>New Tender Drawing</button>\n      <button mat-stroked-button class='actions__button' color='primary' (click)='showAddCategory()' *ngIf='project'><mat-icon>category</mat-icon>Categories</button>\n      <button\n          [routerLink]='[\"/dashboard/projects\", project.id, \"transmittal-forms\", \"create\"]' \n          target=\"_blank\" \n          mat-stroked-button class='actions__button' color='primary' \n          *ngIf='projectConfig.drawingTypes.length'\n          [disabled]='!client'>\n          <mat-icon>insert_drive_file</mat-icon>\n          New Transmittal File\n        </button>\n    </div>\n    <div class='actions__latest-transmittal-form'>\n      <app-latest-transmittal-form\n        *ngIf='project && projectConfig.drawingTypes.length'\n        [projectId]='project.id'\n        class='header-latest-transmittal-form'\n      ></app-latest-transmittal-form>\n    </div>\n  </div>\n  <div class=\"drawing__summary\">\n    <app-drawing-summary-list\n      *ngIf='project && projectConfig.drawingTypes.length'\n      [projectId]='project.id'\n      #drawingSummary\n    ></app-drawing-summary-list>\n  </div>\n</div>\n\n<div class=\"drawing-table-card\">  \n  <h4>Tender Drawings</h4>\n  <mat-card class='drawing-table'>\n    <div mat-card-content>\n      <div \n        class=\"drawing-table__filters\"\n        *ngIf='projectConfig && projectConfig.drawingTypes.length && projectCategories.length'\n      >\n        <button mat-stroked-button (click)='openFilters()'>\n          <mat-icon>filter_list</mat-icon>\n          Filter Drawings\n        </button>\n      </div>\n      <div class=\"drawing-main-table\" *ngIf='project'>\n        <ng-container *ngIf='projectConfig && projectConfig.drawingTypes.length  && projectCategories.length'>\n          <app-drawing-drawing-table \n            [loading]=\"isTableLoading\" \n            [drawings]=\"drawings.data\" \n            [projectId]='project.id' \n            [drawingTypes]='projectConfig.drawingTypes'\n            (onFormsSubmit)='handleFormSubmit($event)'\n            class='drawing-table'\n            #appDrawingTable\n            >\n          </app-drawing-drawing-table>\n          <mat-paginator \n            *ngIf='drawings'\n            [length]=\"drawings.total\"\n            [pageSize]=\"drawingTableOptions.perPage\"\n            [pageSizeOptions]=\"pageSizeOptions\"\n            (page)='pageEvent($event)'\n          >\n          </mat-paginator>\n        </ng-container>\n        <div \n          class=\"drawing-main-table__no-settings\"\n          *ngIf='!projectConfig || !projectConfig.drawingTypes.length || !projectCategories || !projectCategories.length && !isDataLoading'\n        >\n          <div class=\"text-center\">\n            <img src=\"../../assets/configure.png\" alt=\"Configure Icon\" class='drawing-main-table__configure-icon'>\n            <p>The project is not properly configured. Below are the items need to be configured for the project: </p>\n          </div>\n          <div class='drawing-main-table__problems'>\n            <ul>\n              <li *ngIf='!projectConfig || !projectConfig.drawingTypes.length'><strong>Project Settings</strong>. Configure drawing types in the Project Settings by clicking the button the \"Project Settings\" button on the top left.</li>\n              <li *ngIf='!projectCategories || !projectCategories.length'><strong>Project Categories</strong>. Configure project categories in the Project Settings by clicking the button the \"Categories\" button on the top left.</li>\n            </ul>\n            <!-- Please configure drawing types in the Project Settings by clicking the button the \"Project Settings\" button on the top left. -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-card>\n</div>\n\n<swal\n  #success\n  text='Drawing request successfuly created'\n  icon='success'\n></swal>\n<swal\n  #requestDrawingSuccess\n  text='Drawing request successfuly created'\n  icon='success'\n></swal>","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe, TitleCasePipe } from '@angular/common';\nimport { AddDrawingComponent } from './add-drawing/add-drawing.component';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { EditDrawingComponent } from './edit-drawing/edit-drawing.component';\nimport { SubmitShopDrawingComponent } from './submit-shop-drawing/submit-shop-drawing.component';\nimport { SweetAlert2Module, SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { DrawingTableComponent } from './drawing-table/drawing-table.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DrawingComponent } from './drawing.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { DrawingService } from './shared/drawing.service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DrawingCategorySelectInput } from './drawing-category-select/drawing-category-select.component';\nimport { RouterModule } from '@angular/router';\nimport { MatSelectModule } from '@angular/material/select';\nimport { AuditTrailComponent } from './audit-trail/audit-trail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { AddCategoryComponent } from './add-category/add-category.component';\nimport { DrawingCategoryService } from '../core/services/drawing-category.service';\nimport { CategorySelectComponent } from './category-select/category-select.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TransmittalFormsModule } from '../transmittal-forms/transmittal-forms.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { DrawingFiltersComponent } from './drawing-filters/drawing-filters.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DrawingCategoriesModule } from '../drawing-categories/drawing-categories.module';\nimport { ProjectConfigurationComponent } from './project-configuration/project-configuration.component';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { ProjectConfigurationItemComponent } from './project-configuration/project-configuration-item/project-configuration-item.component';\nimport { DrawingSummaryListComponent } from './drawing-summary-list/drawing-summary-list.component';\nimport { DrawingSummaryComponent } from './drawing-summary/drawing-summary.component';\nimport { ProjectDrawingTypeItemComponent } from './project-configuration/project-drawing-type-item/project-drawing-type-item.component';\nimport { ColorSketchModule } from 'ngx-color/sketch';\nimport { SwiperModule } from 'ngx-swiper-wrapper';\nimport { LatestTransmittalFormComponent } from './latest-transmittal-form/latest-transmittal-form.component';\nimport { RequestDrawingsModule } from '../request-drawings/request-drawings.module';\nimport { DrawingTableRequestDrawingComponent } from './drawing-table-request-drawing/drawing-table-request-drawing.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { DrawingTableDrawingTargetDateComponent } from './drawing-table-drawing-target-date/drawing-table-drawing-target-date.component';\n\n\n@NgModule({\n  declarations: [\n    AddDrawingComponent, \n    EditDrawingComponent, \n    DrawingTableComponent, \n    DrawingComponent,\n    SubmitShopDrawingComponent,\n    DrawingCategorySelectInput,\n    AuditTrailComponent,\n    AddCategoryComponent,\n    CategorySelectComponent,\n    DrawingFiltersComponent,\n    ProjectConfigurationComponent,\n    ProjectConfigurationItemComponent,\n    DrawingSummaryListComponent,\n    DrawingSummaryComponent,\n    ProjectDrawingTypeItemComponent,\n    LatestTransmittalFormComponent,\n    DrawingTableRequestDrawingComponent,\n    DrawingTableDrawingTargetDateComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatGridListModule,\n    MaterialFileInputModule,\n    MatButtonModule,\n    SweetAlert2Module,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    LayoutModule,\n    NgSelectModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    SharedModule,\n    DragDropModule,\n    FlexLayoutModule,\n    TransmittalFormsModule,\n    DrawingCategoriesModule,\n    ContentLoaderModule,\n    ColorSketchModule,\n    SwiperModule,\n    RequestDrawingsModule,\n  ],\n  exports: [\n    AddDrawingComponent,\n    DrawingTableComponent,\n  ],\n  providers: [\n    DrawingService,\n    DrawingCategoryService,\n    DatePipe,\n    TitleCasePipe,\n  ]\n})\nexport class DrawingModule { }\n","import { Component, OnInit, ViewChild, Inject, ɵCompiler_compileModuleSync__POST_R3__, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { DrawingService } from '../shared/drawing.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\n\ninterface DialogData {\n  drawing: object,\n  view: boolean,\n  type?: ProjectDrawingType,\n}\n\n@Component({\n  selector: 'app-edit-drawing',\n  templateUrl: './edit-drawing.component.html',\n  styleUrls: ['./edit-drawing.component.scss']\n})\nexport class EditDrawingComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent\n  @ViewChild('deleteConfirmation') private deleteConfirmation: SwalComponent\n  @ViewChild('deleteSuccess') private deleteSuccess: SwalComponent\n  @ViewChild('drawingFile') private drawingFile\n\n  public drawing\n  public view\n  private title\n  public drawingForm: FormGroup;\n  public isDataSubmitting: boolean = false\n  public updatedDrawing\n  public file = new FormControl(null)\n  public loading: Boolean = true;\n  subscription: Subscription;\n  useCurrentDrawingNo: false;\n\n\n  @Output() formSubmitted: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    public dialogRef: MatDialogRef<EditDrawingComponent>,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private drawingService: DrawingService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) { \n    this.drawing = data.drawing;\n    this.view = data.view\n    this.drawingForm = this.formBuilder.group({\n      drawing_title_date: this._generateFormControl(this.drawing.drawing_title_date, [Validators.required]),\n      drawing_no: this._generateFormControl(this.drawing.drawing_no, [Validators.required]),\n      drawing_title: this._generateFormControl(this.drawing.drawing_title, [Validators.required]),\n      drawing_category_id: this._generateFormControl(this.drawing.drawing_category_id, [Validators.required]),\n      drawing_target_date: this._generateFormControl('', [Validators.required]),\n      current_drawing_no: this._generateFormControl(this.drawing.current_drawing_no, [Validators.required]),\n    });\n\n    this.title = data.view ? \"View Drawing\" : \"Edit Drawing\";\n  }\n\n  ngOnInit() {\n    this.getDrawingData();\n  }\n\n  getDrawingData() {\n    this.loading = true;\n\n    // this.loading = false;\n\n    if(this.data.type) {\n      this.drawingService.getTypeDrawingTargetDate(this.drawing.id, this.data.type.id).subscribe(res => {\n        this.drawingForm.patchValue({\n          drawing_target_date: res ? res.target_date : (this.drawing.drawing_target_date ? this.drawing.drawing_target_date : '')\n        });\n        \n        this.loading = false;\n      });\n    }\n  }\n\n  closeDialog($event = null) {\n    if($event) $event.preventDefault()\n    this.dialogRef.close();\n  }\n\n  deleteDrawing($event = null) {\n    if($event) $event.preventDefault()\n\n    this.deleteConfirmation.fire()\n  }\n\n  handleDrawingDelete() {\n    this.isDataSubmitting = true\n\n    this.drawingService.deleteDrawing(this.drawing.id).subscribe(res => {\n      this.isDataSubmitting = false\n\n      this.deleteConfirmation.dismiss()\n      this.deleteSuccess.fire()\n      this.closeDialog()\n      this.formSubmitted.emit()\n    });\n  }\n  \n  onFormSubmit(event) {\n    this.isDataSubmitting = true\n\n    event.preventDefault()\n    let data = this.drawingForm.value\n\n    const drawing_title_date = this.datePipe.transform(data.drawing_title_date, \"yyyy-MM-dd\")\n    const drawing_target_date = this.datePipe.transform(data.drawing_target_date, \"yyyy-MM-dd\");\n    // const drawing_file = this.file\n\n    const form = {\n      ...this.drawingForm.value,\n      id: this.drawing.id,\n      project_id: this.drawing.project_id,\n      drawing_title_date,\n      drawing_target_date,\n    }\n\n    if(this.file.value) form['drawing_file'] = this.file.value\n\n    this.drawingService.updateDrawing(this.drawing.id, form)\n      .subscribe(res => {\n        this.isDataSubmitting = false\n        this.updatedDrawing = res.data;\n        this.successConfirmation.fire()\n      })\n  }\n\n  handleFormSubmit() {\n    this.closeDialog()\n    this.formSubmitted.emit(this.updatedDrawing)\n  }\n  \n  viewDrawing() {\n    this.drawingService.openDrawing(this.drawing.drawing_file_upload);\n  }\n\n  // TODO: Do this better\n  onUseCurrentDrawingNoToggle(value) {\n    if (value) {\n      this.drawingForm.get('current_drawing_no').disable();\n      this.drawingForm.get('current_drawing_no').setValue(this.drawingForm.get('drawing_no').value);\n      this.subscription = this.drawingForm.get('drawing_no').valueChanges.subscribe(res => {\n        this.drawingForm.get('current_drawing_no').setValue(res);\n      });\n    } else {\n      this.drawingForm.get('current_drawing_no').enable();\n      this.subscription.unsubscribe();\n    }\n  }\n\n  _generateFormControl(value, validators = []) {\n    return new FormControl({value, disabled: this.view }, [...validators])\n  }\n}\n","<h2 mat-dialog-title>{{ view ? drawing.drawing_title : \"Edit Drawing Title\" }}</h2>\n<form [formGroup]='drawingForm' enctype=\"multipart/form-data\" (submit)='onFormSubmit($event)'>\n  <mat-dialog-content>\n    <div class=\"form-main\" *ngIf='!loading'>\n      <div class=\"add-drawing-form\">\n        <div\n          fxLayout='row'\n          fxLayoutGap='16px'\n        >\n          <div fxFlex='1 0 0'>\n            <mat-form-field class='add-drawing-form__form-group'>\n              <mat-label>Date:</mat-label>\n              <input matInput [matDatepicker]=\"drawingDate\" [value]='drawing.drawing_title_date' formControlName='drawing_title_date'>\n              <mat-datepicker-toggle matSuffix [for]=\"drawingDate\"></mat-datepicker-toggle>\n              <mat-datepicker #drawingDate></mat-datepicker>\n            </mat-form-field>\n          </div>\n          <div fxFlex='1 0 0'>\n            <mat-form-field class='add-drawing-form__form-group'>\n              <mat-label>Uploaded By:</mat-label>\n              <input matInput disabled [value]='drawing.employee.first_name + \" \" + drawing.employee.last_name'>\n            </mat-form-field>\n          </div>\n        </div>\n        <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px' *ngIf='view'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Category:</mat-label>\n                <input matInput [value]='drawing.category ? drawing.category.category_name : \"\"' [disabled]='view'>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Drawing Title:</mat-label>\n                <input matInput [value]='drawing.drawing_title' formControlName='drawing_title'>\n              </mat-form-field>\n            </p>   \n          </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px' *ngIf='!view'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Category:</mat-label>\n                <app-category-select \n                  [projectId]='drawing.project_id'\n                  formControlName=\"drawing_category_id\">\n                </app-category-select>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Drawing Title:</mat-label>\n                <input matInput [value]='drawing.drawing_title' formControlName='drawing_title'>\n              </mat-form-field>\n            </p>   \n          </mat-grid-tile>\n        </mat-grid-list>\n        <div fxLayout='row' fxFlexLayoutGap='16px' fxLayoutAlign='space-between flex-start'>\n          <div \n            fxFlex='0 0 calc(50% - 8px)'  \n            class=\"add-drawing-form__col\"\n          >\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Tender Drawing No:</mat-label>\n                <input matInput [value]='drawing.drawing_no' formControlName='drawing_no'>\n              </mat-form-field>\n            </p>   \n          </div>\n          <div \n            fxFlex='0 0 calc(50% - 8px)'  \n            class=\"add-drawing-form__col\"\n          >\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Current Drawing No:</mat-label>\n                <input matInput formControlName='current_drawing_no'>\n              </mat-form-field>\n              <mat-checkbox *ngIf='!view' [(ngModel)]='useCurrentDrawingNo' [ngModelOptions]=\"{standalone: true}\" (ngModelChange)='onUseCurrentDrawingNoToggle($event)'>Use Current Tender Drawing No.</mat-checkbox>\n            </p>   \n          </div>\n        </div>\n        <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px' *ngIf='!view'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group file-input-field'>\n                <mat-label>Upload Drawing:</mat-label>\n                <upload-input [formControl]='file'></upload-input>\n              </mat-form-field>\n            </p>   \n          </mat-grid-tile>\n        </mat-grid-list>\n        <div\n          *ngIf='view'\n        >\n          <button mat-raised-button color='primary' (click)='viewDrawing()' type='button'>View Drawing</button>\n        </div>\n        <mat-grid-list cols='2' rowHeight='150px' *ngIf='data.type'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <div class=\"add-drawing-form__shop-drawing\">\n              <p class=\"add-drawing-form__shop-drawing-title\">{{ data.type.type }} Drawing</p>\n              <p>\n                <mat-form-field class='add-drawing-form__form-group'>\n                  <mat-label>{{ data.type.type }} Drawing Target Date:</mat-label>\n                  <input matInput [matDatepicker]=\"drawingTargetDate\" formControlName='drawing_target_date'>\n                  <mat-datepicker-toggle matSuffix [for]=\"drawingTargetDate\"></mat-datepicker-toggle>\n                  <mat-datepicker #drawingTargetDate></mat-datepicker>\n                </mat-form-field>\n            </p>\n            </div>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n    </div>\n    <div class=\"form-loading\" *ngIf='loading'>\n      <mat-progress-spinner\n        mode='indeterminate'\n        diameter='40'\n      ></mat-progress-spinner>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between center'\n  >\n    <div class=\"mat-dialog-actions__buttons-left\">\n      <button mat-raised-button color='warn' (click)='closeDialog($event)'>Cancel</button>&nbsp;\n      <button mat-raised-button color='primary' type='submit' *ngIf='!view' [disabled]='isDataSubmitting || loading'>Save</button>&nbsp;\n    </div>\n    <div class=\"mat-dialog-actions__buttons-right\">\n      <button mat-raised-button color='accent' (click)='deleteDrawing($event)' [disabled]='loading' type='submit' *ngIf='!view'>Delete</button>\n    </div>\n  </mat-dialog-actions>\n</form>\n\n<swal\n  #successConfirmation\n  title='Success'\n  text='Drawing has been updated!'\n  icon='success'\n  (confirm)='handleFormSubmit()'\n></swal>\n\n<swal\n  #deleteConfirmation\n  title='Are you sure?'\n  text=\"This action is irreversible\"\n  icon='warning'\n  (confirm)='handleDrawingDelete()'\n  showCancelButton='true'\n>\n</swal>\n\n<swal\n  #deleteSuccess\n  title='Success'\n  text=\"Drawing successfully deleted\"\n  icon='success'\n>\n</swal>","import { Component, OnInit, Input } from '@angular/core';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { switchMap, switchMapTo } from 'rxjs/operators';\nimport { Client } from 'src/app/core/models/client';\n\n@Component({\n  selector: 'app-latest-transmittal-form',\n  templateUrl: './latest-transmittal-form.component.html',\n  styleUrls: ['./latest-transmittal-form.component.scss']\n})\nexport class LatestTransmittalFormComponent implements OnInit {\n  private _projectId;\n  loading: boolean = false;\n  latestTransmittalForm;\n  client: Client;\n\n  @Input()\n  set projectId(value) {\n    if(value) {\n      this._projectId = value;\n      this.getData();\n    }\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  get latestTransmittalFormNumber() {\n    const clientRefFormat = this.client ? this.client.refFormat : '';\n    \n    if(this.latestTransmittalForm) {\n      return this.latestTransmittalForm.ref_no.replace(clientRefFormat, '');\n    } else {\n      return '-';\n    }\n  }\n\n  constructor(\n    private projectService: ProjectsService,\n  ) {}\n\n  ngOnInit(): void {}\n\n  getData() {\n    this.loading = true;\n\n    this.projectService.getClient(this.projectId)\n      .pipe(switchMap((client: Client) => {\n        this.client = client;\n        return this.projectService.getLatestTransmittalFile(this.projectId)\n      })).subscribe(res => {\n        this.latestTransmittalForm = res.data;\n      })\n  }\n}\n","<mat-card class=\"latest-transmittal-form\">\n  <p>\n    Latest Transmittal Form No:\n  </p>\n  <p class='latest-transmittal-form__number'>{{ latestTransmittalFormNumber }}</p>\n</mat-card>\n","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TitleCasePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-project-configuration-item',\n  templateUrl: './project-configuration-item.component.html',\n  styleUrls: ['./project-configuration-item.component.scss']\n})\nexport class ProjectConfigurationItemComponent implements OnInit {\n  @ViewChild('editInput') editInput: ElementRef;\n\n  isEditing: boolean;\n  _itemValue: string;\n  itemFormControl: FormControl = new FormControl();\n\n  @Output() onSubmit: EventEmitter<any> = new EventEmitter;\n  @Output() onDelete: EventEmitter<any> = new EventEmitter;\n\n  @Input() index;\n\n  @Input()\n  get itemValue(): string {\n    return this._itemValue;\n  }\n\n  set itemValue(value: string) {\n    let parsedValue = value.replace(/-/g, \" \");\n    const titleCaseVal = this.titleCasePipe.transform(parsedValue);\n    this._itemValue = titleCaseVal;\n    this.itemFormControl.setValue(titleCaseVal);\n  }\n\n  @Input()\n  get edit(): boolean {\n    return this.isEditing;\n  }\n\n  set edit(value: boolean) {\n    this.isEditing = value ? true : false;\n  }\n\n  constructor(\n    private titleCasePipe: TitleCasePipe,\n  ) {\n    this.itemFormControl = new FormControl();\n  }\n\n  ngOnInit(): void {}\n\n  editValue() {\n    this.isEditing = true;\n\n    setTimeout(() => {\n      this.editInput.nativeElement.focus();\n    });\n  }\n\n  delete() {\n    this.onDelete.emit({\n      index: this.index,\n    });\n  }\n\n  cancelEdit() {\n    this.isEditing = false;\n  }\n\n  submit() {\n    setTimeout(() => {\n      this.cancelEdit();\n    })\n\n    this.onSubmit.emit({\n      value: this.itemFormControl.value,\n      index: this.index,\n    });\n  }\n}\n","<div class=\"project-configuration-item\">\n  <div class=\"project-configuration-item__value\" *ngIf='!isEditing'>\n    {{ itemValue }}\n  </div>\n  <div class=\"project-configuration-item__input\" *ngIf='isEditing'>\n    <mat-form-field>\n      <input type=\"text\" matInput [formControl]='itemFormControl' #editInput>\n    </mat-form-field>\n  </div>\n  <div class=\"project-configuration-item__action\" *ngIf='!isEditing'>\n    <button mat-icon-button color='primary' (click)='editValue()'>\n      <mat-icon>edit</mat-icon>\n    </button>\n    <button mat-icon-button color='warn' (click)='delete()'>\n      <mat-icon>delete</mat-icon>\n    </button>\n  </div>\n  <div class=\"project-configuration-item__edit-action\" *ngIf='isEditing'>\n    <button mat-icon-button color='primary' (click)='submit()'>\n      <mat-icon>done</mat-icon>\n    </button>\n    <button mat-icon-button color='warn' (click)='cancelEdit()'>\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ProjectConfiguration } from 'src/app/core/models/project-configuration';\nimport { CdkDragDrop, transferArrayItem, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport _ from 'lodash';\n\n@Component({\n  selector: 'app-project-configuration',\n  templateUrl: './project-configuration.component.html',\n  styleUrls: ['./project-configuration.component.scss']\n})\nexport class ProjectConfigurationComponent implements OnInit {\n  projectConfiguration: ProjectConfiguration;\n  loading: boolean = false;\n  isSubmitting: boolean = false;\n  newDrawingTypes: Array<ProjectDrawingType> = [];\n  isDeleting: boolean = false;\n\n  @Output() onSaveSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialogRef<ProjectConfigurationComponent>,\n    private projectConfigService: ProjectConfigurationService,\n    @Inject(MAT_DIALOG_DATA) public data: ProjectConfigurationDialogData,\n  ) {}\n\n  ngOnInit(): void {\n    this.getProjectConfig();\n  }\n  \n  getProjectConfig() {\n    const { projectId } = this.data;\n    this.loading = true;\n\n    this.projectConfigService.getProjectDrawingTypes(projectId).subscribe(config => {\n      this.projectConfiguration = config;\n\n      this.loading = false;\n    });\n  }\n\n  handleDrawingTypeItemSave($event) {\n    const {\n      id,\n      color,\n      label,\n    } = $event;\n\n    this.projectConfiguration.drawingTypes = this.projectConfiguration.drawingTypes.map(drawingType => {\n      if(drawingType.id == id) {\n        const type = new ProjectDrawingType(\n          id,\n          drawingType.projectId,\n          label,\n        );\n\n        type.setColor(color);\n\n        return type;\n      }\n\n      return drawingType;\n    });\n  }\n\n  onDrawingTypeEditSubmit($event) {\n    const { value, index } = $event;\n\n    this.projectConfiguration.drawingTypes[index] = value;\n  }\n\n  onNewEditDrawingTypeSubmit($event, index) {\n    const { id,  label, color } = $event;\n\n    const type = new ProjectDrawingType(\n      id,\n      this.data.projectId,\n      label,\n    );\n\n    type.setColor(color);\n\n    this.projectConfiguration.drawingTypes.push(type);\n    this.newDrawingTypes.splice(index, 1);\n  }\n\n  removeDrawingType({ id }) {\n    this.isDeleting = true;\n\n    this.projectConfigService.deleteProjectDrawingType(this.data.projectId, id).subscribe(res => {\n      this.dialog.close();\n\n      this.onSaveSuccess.emit();\n    });\n  }\n\n  onDeleteNewDrawingTypeSubmit($event) {\n    const { index } = $event;\n\n    this.newDrawingTypes.splice(index, 1);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  addNewDrawingTypeItem()  {\n    const id = this.generateUniqueId();\n    const newItem = new ProjectDrawingType(id, this.data.projectId, '');\n    this.newDrawingTypes.push(newItem);\n  }\n\n  generateUniqueId() {\n    const ids = this.projectConfiguration.drawingTypes.map(drawingType => drawingType.id);\n\n    return _.max(ids) + 1;\n  }\n\n  saveConfiguration() {\n    const drawingTypes = this.projectConfiguration.drawingTypes.map((drawingType, index) => {\n      const type = new ProjectDrawingType(\n        drawingType.id,\n        drawingType.projectId,\n        drawingType.type,\n      ).setColor(drawingType.color)\n      .setOrder(index);\n\n      return type;\n    })\n    this.projectConfigService.updateProjectDrawingTypes(this.data.projectId, drawingTypes).subscribe(res => {\n      this.dialog.close();\n\n      this.onSaveSuccess.emit();\n    });\n  }\n}\n\nexport interface ProjectConfigurationDialogData {\n  projectId: String | Number;\n}\n","<h2 mat-dialog-title>Project Settings</h2>\n<mat-dialog-content>\n  <strong>Drawing Types:</strong>\n  <div \n    class=\"drawing-types\" \n    *ngIf='!loading'\n    cdkDropList\n    [cdkDropListData]=\"projectConfiguration.drawingTypes\"\n    (cdkDropListDropped)=\"drop($event)\">\n      <app-project-drawing-type-item\n        *ngFor='let drawingType of projectConfiguration.drawingTypes'\n        [drawingType]='drawingType'\n        (onDrawingTypeItemSave)='handleDrawingTypeItemSave($event)'\n        (onDrawingTypeDelete)='removeDrawingType($event)'\n      ></app-project-drawing-type-item>\n      <app-project-drawing-type-item\n        *ngFor='let drawingType of newDrawingTypes, let i = index'\n        [drawingType]='drawingType'\n        (onDrawingTypeItemSave)='onNewEditDrawingTypeSubmit($event, i)'\n        (onDrawingTypeDelete)='removeDrawingType($event)'\n        [edit]='true'\n      ></app-project-drawing-type-item>\n  </div>\n  <button mat-stroked-button class='new-item' (click)='addNewDrawingTypeItem()'>\n    <mat-icon>add</mat-icon>\n    New Item\n  </button>\n  <div class=\"loader\" *ngIf='loading'>\n    <content-loader [style]='{width: \"100%\"}' height=\"60\">\n      <svg:rect x=\"0\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n      <svg:rect x=\"0\" y=\"28\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n      <svg:rect x=\"0\" y=\"48\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    </content-loader>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"start\">\n  <button mat-raised-button color='warn' mat-dialog-close>Cancel</button>\n  <button mat-raised-button color='primary' (click)='saveConfiguration()' [disabled]='isSubmitting || isDeleting'>Update</button>\n</mat-dialog-actions>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { FormControl } from '@angular/forms';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-project-drawing-type-item',\n  templateUrl: './project-drawing-type-item.component.html',\n  styleUrls: ['./project-drawing-type-item.component.scss']\n})\nexport class ProjectDrawingTypeItemComponent implements OnInit {\n  private _drawingType: ProjectDrawingType;\n  color: String;\n\n  @Input()\n  set drawingType(value: ProjectDrawingType) {\n    this._drawingType = value;\n\n    this.color = value.color;\n    this.itemFormControl.setValue(value.type);\n  }\n\n  get drawingType(): ProjectDrawingType {\n    return this._drawingType;\n  }\n\n  @Input()\n  get edit(): boolean {\n    return this.isEditing;\n  }\n\n  set edit(value: boolean) {\n    this.isEditing = value ? true : false;\n  }\n\n  @Output()\n  onDrawingTypeItemSave: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  onDrawingTypeDelete: EventEmitter<any> = new EventEmitter();\n\n  isEditing: boolean = false;\n  itemFormControl: FormControl = new FormControl();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  editValue() {\n    this.isEditing = true;\n  }\n\n  delete() {\n    this.onDrawingTypeDelete.emit({\n      id: this.drawingType.id,\n    });\n  }\n\n  submit() {\n    this.onDrawingTypeItemSave.emit({\n      id: this.drawingType.id,\n      color: this.color,\n      label: this.itemFormControl.value,\n    });\n\n    this.cancelEdit();\n  }\n\n  cancelEdit() {\n    this.isEditing = false;\n  }\n\n  handleColorChange({ color }) {\n    this.color = color.hex;\n  }\n}\n","<div \n  cdkDrag\n  [cdkDragDisabled]='isEditing'\n  class=\"project-drawing-type-item\"\n>\n  <div class=\"project-drawing-type-item__header\">\n    <div class=\"project-drawing-type-item__value\" *ngIf='drawingType.type'>\n      <span [style.color]='drawingType.color'><strong>{{ drawingType.type }}</strong></span>\n    </div>\n    <div class=\"project-drawing-type-item__value\" *ngIf='edit'>\n      <strong>New Item</strong>\n    </div>\n    <div class=\"project-drawing-type-item__action\" *ngIf='!isEditing'>\n      <button mat-icon-button color='primary' (click)='editValue()'>\n        <mat-icon>edit</mat-icon>\n      </button>\n      <button mat-icon-button color='warn' (click)='delete()'>\n        <mat-icon>delete</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"project-drawing-type-item__body\" *ngIf='isEditing'>\n    <div class=\"project-drawing-type-item__fields\">\n      <div class=\"project-drawing-type-item__field\">\n        <mat-form-field\n          class='form-control'\n        >\n          <mat-label>Label:</mat-label>\n          <input type=\"text\" matInput [formControl]='itemFormControl'>\n        </mat-form-field>\n      </div>\n      <div class=\"project-drawing-type-item__field\">\n        <div class=\"color-picker\">\n          <p class=''>Color:</p>\n          <color-sketch \n            [color]=\"drawingType.color\"\n            [disableAlpha]='true'\n            (onChange)='handleColorChange($event)'\n          >\n          </color-sketch>\n        </div>\n      </div>\n    </div>\n    <div class=\"project-drawing-type-item__edit-action\">\n      <button mat-raised-button color='warn' (click)='cancelEdit()'>\n        Cancel\n      </button>&nbsp;\n      <button mat-raised-button color='primary' (click)='submit()'>\n        Save\n      </button>\n    </div>\n  </div>\n  <!-- <div class=\"project-drawing-type-item__edit-action\" *ngIf='isEditing'>\n    <button mat-icon-button color='primary' (click)='submit()'>\n      <mat-icon>done</mat-icon>\n    </button>\n    <button mat-icon-button color='warn' (click)='cancelEdit()'>\n      <mat-icon>close</mat-icon>\n    </button>\n  </div> -->\n</div>","import { Injectable } from \"@angular/core\";\nimport { ApiService } from 'src/app/core/api.service';\nimport { environment } from 'src/environments/environment';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { map } from 'rxjs/operators';\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\nimport { isNullOrUndefined } from 'util';\nimport { DatePipe } from '@angular/common';\nimport { TenderDrawingAdapter } from 'src/app/core/adapters/tender-drawing-adapter';\nimport { DrawingFilters, TypeDrawingStatusFilter } from 'src/app/core/models/drawing-filters';\nimport _ from 'lodash';\n\n@Injectable()\nexport class DrawingService {\n  user: User;\n  constructor(\n      private api: ApiService,\n      private userService: UserService,\n      private datePipe: DatePipe,\n      private tenderDrawingAdapter: TenderDrawingAdapter,\n  ) { \n    this.userService.currentUser.subscribe(res => {\n      this.user = res\n    })\n  }\n\n  // TODO: Replace DrawingParams to Drawing Filters\n  getDrawings(id = null, params: DrawingParams = {}) {\n    let url = `/drawings?project_id=${id}&drawing_category_id=${params.category || ''}&drawing_no=${params.drawing_no || ''}&uploaded_by=${params.uploaded_by || ''}&query=${params.query || ''}&items=${params.items ? params.items : 50}&page=${params.page ? params.page : 1}`\n\n    if(params.type_drawing_status) {\n      params.type_drawing_status.forEach((status) => {\n        if(status.value) {\n          url = url + `&status_${status.type}=${status.value}`\n        }\n      });\n    }\n\n    return this.api.get(url);\n  }\n\n  getTenderDrawings(id = null, params: DrawingParams = {}) {\n    const url = `/drawings?project_id=${id || ''}&drawing_category_id=${params.category || ''}&drawing_no=${params.drawing_no || ''}`\n    return this.api.get(url).pipe(map(res => {\n      return res.data.data.map(drawing => {\n        const tenderDrawing: TenderDrawing = {\n          no: drawing.drawing_no,\n          title: drawing.drawing_title,\n          targetDate: drawing.drawing_target_date,\n          titleDate: drawing.drawing_title_date,\n          drawingFile: drawing.drawing_file_upload,\n          category: drawing && drawing.category ? drawing.category.category_name : '',\n          projectId: drawing.project_id,\n          employeeId: drawing.employee_id,\n          id: drawing.id,\n          currentDrawingNo: drawing.current_drawing_no,\n        }\n\n        return tenderDrawing;\n      });\n    }));\n  }\n\n  addDrawing(body: any) {\n    const postData = {\n      ...body,\n      employee_id: this.user.employeeId\n    }\n    return this.api.post('/drawing', postData)\n  }\n\n  updateDrawing(id, body: any) {\n    return this.api.post(`/drawing/${id}/update`, body)\n  }\n\n  deleteDrawing(id) {\n    return this.api.delete(`/drawing/${id}/delete`)\n  }\n\n  getCategories() {\n    return this.api.get('/drawing-categories')\n  }\n\n  getApprovers(type, projectId) {\n    return this.api.get(`/type-drawings/approvers?project_id=${projectId}&type=${type}`)\n  }\n\n  submitTypeDrawing(type, body) {\n    const postData = {\n      ...body,\n      employee_id: this.user.employeeId,\n    }\n    return this.api.post(`/type-drawing/save`, postData)\n  }\n\n  getDrawing(id) {\n    return this.api.get(`/drawing/${id}`).pipe(map(res => {\n      return this.tenderDrawingAdapter.adapt(res.data);\n    }));\n  }\n\n  getHistory(drawingId, date='', type=null) {\n    if(type) {\n      return this.api.get(`/${type}-drawing/history/${drawingId}`)\n    }\n\n    return this.api.get(`/drawing/history/${drawingId}?date=${date ? date : ''}`)\n      .pipe(map(res => {\n        return {\n          tenderDrawing: this.tenderDrawingAdapter.adapt(res.data),\n          audits: res.data.audits,\n        }\n      }));\n  }\n\n  \n  getTypeDrawingTargetDate(id, type) {\n    const url = `/drawing/${id}/type/${type}`\n\n    return this.api.get(url)\n      .pipe(map(res => res.data));\n  }\n\n\n  getHistoryDates(drawingId) {\n    return this.api.get(`/drawing/history/${drawingId}/dates`).pipe(map(res => {\n      return res.data.map(date => {\n        return this.datePipe.transform(date, 'dd-MM-yyy')\n      });\n    }));\n  }\n\n  getSummary(type='shop', projectId) {\n    const url = `/type-drawings/summary/${projectId}?type=${type}`\n\n    return this.api.get(url).pipe()\n  }\n\n  openDrawing(path) {\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${path}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n}\n\nexport interface DrawingParams {\n  category?: string;\n  drawing_no?: string;\n  query?: string;\n  client_drawings?: boolean;\n  sbhe_drawings?: boolean;\n  uploaded_by?: string;\n  type_drawing_status?: Array<any>,\n  items?: string | Number;\n  page?: string | Number;\n}","import { Component, OnInit, Inject, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { DrawingService } from '../shared/drawing.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\nimport { valueNotEqualTo } from 'src/app/shared/forms/value-not-equal-to.directive';\nimport { DrawingStatus } from 'src/app/core/enums/drawing-status.enum';\nimport { DrawingRequestStatus } from 'src/app/core/enums/drawing-request-status.enum';\n\n// TODO: Change file name for this file so that it encompasses both the shop and\n// as-built drawings\n@Component({\n  selector: 'app-submit-shop-drawing',\n  templateUrl: './submit-shop-drawing.component.html',\n  styleUrls: ['./submit-shop-drawing.component.scss']\n})\nexport class SubmitShopDrawingComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent\n  @ViewChild('drawingFile') private drawingFile\n  @ViewChild('transmittalFile') private transmittalFile\n  drawingForm: FormGroup;\n  approvers: Observable<any>\n  previousStatus: string;\n  isDataSubmitting: Boolean;\n  drawingRef;\n  loading: Boolean = true;\n\n  get forClient(): boolean {\n    if (this.drawingRef) {\n      if(this.data.action !== 'edit') {\n        const status = ['submit', 'resubmit'];\n        const drawingStatus = ['Submitted', 'ReSubmitted'];\n  \n        return status.indexOf(this.data.action) === -1 || drawingStatus.indexOf(this.drawingRef.status) === -1;\n      } else {\n        const drawingStatus = ['Submitted', 'ReSubmitted'];\n\n        return drawingStatus.indexOf(this.drawingRef.status) !== -1;\n      }\n    }\n\n    return false;\n  }\n\n  @Output() onFormSubmit: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    public dialogRef: MatDialogRef<SubmitShopDrawingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ShowDrawingDialogData,\n    private formBuilder: FormBuilder,\n    private drawingService: DrawingService,\n    private datePipe: DatePipe\n  ) { \n\n    this.drawingRef = this.data.type_drawings.find(typeDrawing => {\n      return typeDrawing.type_id === this.data.type_id;\n    });\n\n\n    const isView = this.data.action === 'view';\n\n    const drawingRevisionValue = this.data.action === 'resubmit' ? '' : (this.drawingRef ? this.drawingRef.drawing_revision_no : '') \n    const drawingRevisionValidators = this.data.action === 'resubmit' ? [valueNotEqualTo(this.drawingRef.drawing_revision_no)] : []\n    const drawing_revision_no = new FormControl(drawingRevisionValue, [\n      ...drawingRevisionValidators,\n      Validators.required,\n    ])\n\n    const editValidators = this.data.action === 'edit' ? [] : [Validators.required];\n    const drawingTransmittalNo= this.data.action !== 'approve' && this.drawingRef ? this.drawingRef.drawing_client_transmittal_no : '';\n    const fileInputValidators = this.data.action == 'edit' ? [] : [Validators.required]\n\n    // TODO: Find a better way of doing this.\n    this.drawingForm = this.formBuilder.group({\n      drawing_no: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_no ?  this.drawingRef.drawing_no : this.data.current_drawing_no, [], isView),\n      drawing_title: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_title ? this.drawingRef.drawing_title : '', [], isView),\n      drawing_target_date: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_target_date ? this.datePipe.transform(this.drawingRef.drawing_target_date, 'dd-MM-yyyy') : this.datePipe.transform(new Date(), 'dd-MM-yyyy'), [], isView),\n      drawing_title_date: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_title_date ? this.drawingRef.drawing_title_date : new Date(), [Validators.required], isView),\n      drawing_submission_comment: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_submission_comment ? this.drawingRef.drawing_submission_comment : '', [Validators.required], isView),\n      drawing_revision_no: this._generateFormControl(drawingRevisionValue, [...drawingRevisionValidators, Validators.required], isView),\n      drawing_submission_date: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_submission_date ? this.drawingRef.drawing_submission_date : new Date(), [Validators.required], isView),\n      drawing_file: this._generateFormControl(null, fileInputValidators, isView),\n      submitted_transmittal_form: this._generateFormControl(null, [], isView),\n      drawing_client_transmittal_no: this._generateFormControl('', this.data.action === 'approve' ? [Validators.required] : [], isView),\n      drawing_client_transmittal_file_upload: this._generateFormControl(null, fileInputValidators, isView),\n      // drawing_target_date: this._generateFormControl('' : new Date(), this.data.type === 'shop' ? [Validators.required] : [], isView),\n      approver: this._generateFormControl(this.drawingRef ? this.drawingRef.approved_by : '', [Validators.required], isView),\n      drawing_returned_date: this._generateFormControl(new Date(), [Validators.required], isView)\n    });\n\n    if(this.drawingRef) {\n      this.previousStatus = this.drawingRef.status;\n    }\n  }\n\n  ngOnInit() {\n    this.approvers = this.drawingService.getApprovers('shop', this.data.projectId).pipe(\n      map(res => res.data)\n    );\n\n    if(this.data.nextDrawingType) {\n      this.loading = true;\n      this.drawingService.getTypeDrawingTargetDate(this.data.id, this.data.nextDrawingType.id)\n        .subscribe(res => {\n          this.drawingForm.addControl('drawing_next_type_target_date', new FormControl({\n            value: res ? res.target_date : '',\n            disabled: this.data.action === 'view'\n          }, [Validators.required]));\n          this.loading = false;\n        });\n    } else {\n      this.loading = false;\n    }\n  }\n\n  handleCancelClicked($event) {\n    $event.preventDefault()\n\n\n    this.closeDialog()\n  }\n\n  closeDialog() {\n    this.dialogRef.close()\n  }\n\n  viewDrawingFile() {\n    this.drawingService.openDrawing(this.drawingRef.drawing_file_upload)\n  }\n\n  viewTransmittal() {\n    this.drawingService.openDrawing(this.drawingRef.drawing_transmittal_upload)\n  }\n\n  viewSubmittedTransmittalForm() {\n    this.drawingService.openDrawing(this.drawingRef.submitted_transmittal_form)\n  }\n\n  viewSBHETransmittal() {\n    this.drawingService.openDrawing(this.drawingRef.transmittal_form.file_path)\n  }\n\n  viewClientTransmittal() {\n    this.drawingService.openDrawing(this.drawingRef.drawing_client_transmittal_file)\n  }\n\n  saveDrawing(event) {\n    event.preventDefault()\n\n    let data = this.drawingForm.getRawValue();\n\n    const actualSubmissionDate = this.datePipe.transform(data.drawing_submission_date, 'yyyy-MM-dd')\n\n    const returnedDate = this.datePipe.transform(data.drawing_returned_date, 'yyyy-MM-dd')\n\n    let status = 'Submitted';\n    let dateKey = null;\n\n    switch(this.data.action) {\n      case 'submit':\n        status = DrawingStatus.submitted\n        dateKey = 'drawing_submission_date'\n        break\n      case 'resubmit':\n        status = DrawingStatus.resubmit,\n        dateKey = 'drawing_resubmission_date'\n        break\n      case 'approve':\n        status = DrawingStatus.approved,\n        dateKey = 'drawing_approved_date'\n        break\n      case 'reject':\n        status = DrawingStatus.rejected,\n        dateKey = 'drawing_rejected_date'\n        break;\n      case 'edit':\n      case 'view':\n        status = this.drawingRef.status\n        break\n      default:\n        status = DrawingStatus.submitted\n    }\n\n    let body = {\n      drawing_returned_date: returnedDate,\n      drawing_submission_date: actualSubmissionDate,\n      drawing_submission_comment: data.drawing_submission_comment,\n      drawing_revision_no: data.drawing_revision_no,\n      drawing_transmittal_no: data.drawing_transmittal_no,\n      type_id: this.data.type_id,\n      approved_by: data.approver,\n      drawing_id: this.data.id,\n      drawing_no: data.drawing_no,\n      drawing_client_transmittal_no: data.drawing_client_transmittal_no,\n      status,\n    }\n\n    if(dateKey) body[dateKey] = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n\n    if(data.drawing_next_type_target_date) {\n      body['drawing_next_type_target_date'] = this.datePipe.transform(data.drawing_next_type_target_date, 'yyyy-MM-dd')\n    }\n\n    if (data.drawing_file) body['drawing_file'] = data.drawing_file;\n    if (data.drawing_client_transmittal_file_upload) body['drawing_client_transmittal_file_upload'] = data.drawing_client_transmittal_file_upload;\n    if (data.submitted_transmittal_form) body['submitted_transmittal_form_file'] = data.submitted_transmittal_form;\n\n    this.isDataSubmitting = true\n    debugger\n    this.drawingService.submitTypeDrawing(this.data.type, body)\n      .subscribe(res => {\n        this.isDataSubmitting = false\n        this.successConfirmation.fire()\n      })\n  }\n\n  handleFormSubmit() {\n    this.onFormSubmit.emit()\n    this.dialogRef.close()\n  }\n\n  triggerUploadDrawing() {\n    this.drawingFile.open()\n  }\n\n  triggerUploadTransmittal() {\n    this.transmittalFile.open()\n  }\n\n  _generateFormControl(value, validators, disabled = false) {\n    return new FormControl({value, disabled}, [...validators])\n  }\n\n  shouldDisplaySBHETransmittalFile() {\n    if (this.drawingRef) {\n      if(this.data.action !== 'edit') {\n        const status = ['submit', 'resubmit'];\n\n        return status.indexOf(this.data.action) !== -1;\n      } else {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  shouldDisplayClientTransmittalFile() {\n    if (this.drawingRef) {\n      if(this.data.action !== 'edit') {\n        const status = ['approve', 'reject'];\n  \n        return status.indexOf(this.data.action) !== -1;\n      } else {\n        const status = [\n          DrawingStatus.approved,\n          DrawingStatus.rejected,\n        ];\n\n        return status.indexOf(this.drawingRef.status) !== -1;\n      }\n    }\n    \n    return false;\n  }\n}\ninterface ShowDrawingDialogData {\n  current_drawing_no: string,\n  drawing_title: string,\n  drawing_no: string,\n  drawing_target_date: string,\n  drawingNumber: string,\n  revision: string,\n  actualSubmissionDate: string,\n  approvedBy: string,\n  comments: string,\n  drawingFile: string,\n  transmittalFile: string,\n  type: string,\n  projectId: string | number,\n  id: number,\n  shop_drawing: any,\n  as_built_drawing: any,\n  action: string,\n  drawing_transmittal_no: string,\n  drawing_submission_comment: '',\n  status: string,\n  uploaded_by: any,\n  type_drawings: any,\n  type_id?: any,\n  drawing_type?: any;\n  nextDrawingType?: any;\n}\n","<form [formGroup]=\"drawingForm\" (submit)=\"saveDrawing($event)\">\n  <h1 mat-dialog-title *ngIf=\"data.action == 'view'\">\n    {{ data.drawing_title | titlecase }}\n  </h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'submit'\">\n    {{ data.drawing_type && data.drawing_type.type | titlecase }} Submission\n  </h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'resubmit'\">Re-submit Drawing</h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'approve'\">Approve Drawing</h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'reject'\">Reject Drawing</h1>\n  <mat-dialog-content>\n    <div class=\"form-main\" *ngIf=\"!loading\">\n      <mat-grid-list cols=\"4\" rowHeight=\"70px\" gutterSize=\"16px\">\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Drawing Title:</mat-label>\n              <input matInput [value]=\"data.drawing_title || ''\" disabled />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Tender Drawing No:</mat-label>\n              <input matInput [value]=\"data.drawing_no || ''\" disabled />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Target Date:</mat-label>\n              <input\n                matInput\n                [value]=\"data.drawing_target_date | date: 'yyyy-MM-dd'\"\n                disabled\n              />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile\n          class=\"shop-drawing-submit__col\"\n          *ngIf=\"data.action === 'view' || data.action === 'edit'\"\n        >\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Uploaded By:</mat-label>\n              <input\n                matInput\n                [value]=\"\n                  drawingRef.uploaded_by\n                    ? drawingRef.uploaded_by.first_name +\n                      ' ' +\n                      drawingRef.uploaded_by.last_name\n                    : ''\n                \"\n                disabled\n              />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <mat-grid-list cols=\"4\" rowHeight=\"70px\" gutterSize=\"16px\">\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Drawing Number:</mat-label>\n              <input matInput formControlName=\"drawing_no\" />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Actual Submission Date:</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"actualSubmissionDate\"\n                formControlName=\"drawing_submission_date\"\n                [readonly]=\"data.action == 'view'\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"actualSubmissionDate\"\n                [disabled]=\"data.action == 'view'\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #actualSubmissionDate></mat-datepicker>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Approved By:</mat-label>\n              <mat-select\n                formControlName=\"approver\"\n                [disabled]=\"data.action == 'view'\"\n              >\n                <mat-option\n                  *ngFor=\"let approver of approvers | async\"\n                  [value]=\"approver.id\"\n                  >{{ approver.first_name }}\n                  {{ approver.last_name }}</mat-option\n                >\n              </mat-select>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Revision No.:</mat-label>\n              <input\n                matInput\n                formControlName=\"drawing_revision_no\"\n                [readonly]=\"data.action == 'view'\"\n              />\n              <mat-hint\n                >Previous Revision No:\n                {{ drawingRef ? drawingRef.drawing_revision_no : \"\" }}</mat-hint\n              >\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <div fxLayout=\"row\" fxLayoutGap=\"16px\">\n        <div fxFlex=\"0 0 25%\" *ngIf=\"data.nextDrawingType\">\n          <mat-form-field class=\"shop-drawing-submit__form-group\">\n            <mat-label>{{ data.nextDrawingType.type }} Target Date:</mat-label>\n            <input\n              matInput\n              [matDatepicker]=\"drawingAsBuiltTargetDate\"\n              formControlName=\"drawing_next_type_target_date\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"drawingAsBuiltTargetDate\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #drawingAsBuiltTargetDate></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div fxFlex=\"0 0 25%\" *ngIf=\"previousStatus\">\n          <mat-form-field class=\"shop-drawing-submit__form-group\">\n            <mat-label>Status:</mat-label>\n            <input matInput disabled [value]=\"previousStatus\" />\n          </mat-form-field>\n        </div>\n        <div fxFlex=\"0 0 25%\" *ngIf=\"previousStatus\">\n          <mat-form-field class=\"shop-drawing-submit__form-group\">\n            <mat-label>Returned Date:</mat-label>\n            <input\n              matInput\n              [matDatepicker]=\"returnedDate\"\n              formControlName=\"drawing_returned_date\"\n              [readonly]=\"data.action == 'view'\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"returnedDate\"\n              [disabled]=\"data.action == 'view'\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #returnedDate></mat-datepicker>\n          </mat-form-field>\n        </div>\n      </div>\n      <mat-grid-list cols=\"1\" rowHeight=\"140px\" gutterSize=\"16px\">\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Comments:</mat-label>\n              <textarea\n                matInput\n                rows=\"5\"\n                formControlName=\"drawing_submission_comment\"\n                [readonly]=\"data.action == 'view'\"\n              ></textarea>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <div *ngIf=\"data.action !== 'view' && data.action !== 'edit' && data.action !== 'resubmit'\">\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewDrawingFile()\"\n        >\n          View Drawing File\n        </button>\n        &nbsp;\n        <!-- <mat-grid-list cols='7' rowHeight='100px' gutterSize='16px' >\n              <mat-grid-tile class=\"shop-drawing-submit__col\" colspan='3'>\n                  <p>\n                      <mat-form-field class='shop-drawing-submit__form-group file-input-field'>\n                          <mat-label>Drawing File:</mat-label>\n                          <upload-input formControlName='drawing_file'></upload-input>\n                      </mat-form-field>\n                  </p>\n              </mat-grid-tile>\n          </mat-grid-list> -->\n      </div>\n      <div *ngIf=\"data.action == 'edit' || data.action == 'resubmit'\">\n        <mat-grid-list cols=\"7\" rowHeight=\"100px\" gutterSize=\"16px\">\n          <mat-grid-tile class=\"shop-drawing-submit__col\" colspan=\"3\">\n            <p>\n              <mat-form-field\n                class=\"shop-drawing-submit__form-group file-input-field\"\n              >\n                <mat-label>Drawing File:</mat-label>\n                <upload-input formControlName=\"drawing_file\"></upload-input>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n\n      <div *ngIf=\"data.action !== 'view'\">\n        <mat-grid-list\n          cols=\"7\"\n          rowHeight=\"100px\"\n          gutterSize=\"16px\"\n          *ngIf=\"shouldDisplaySBHETransmittalFile()\"\n        >\n          <mat-grid-tile class=\"shop-drawing-submit__col\" colspan=\"3\">\n            <p>\n              <mat-form-field\n                class=\"shop-drawing-submit__form-group file-input-field\"\n              >\n                <mat-label>SBHE Transmittal Form:</mat-label>\n                <upload-input\n                  formControlName=\"submitted_transmittal_form\"\n                ></upload-input>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n      <mat-grid-list\n        cols=\"7\"\n        rowHeight=\"100px\"\n        gutterSize=\"16px\"\n        *ngIf=\"shouldDisplayClientTransmittalFile() && data.action !== 'view'\"\n      >\n        <mat-grid-tile\n          class=\"shop-drawing-submit__col\"\n          *ngIf=\"data.action !== 'view'\"\n          colspan=\"3\"\n        >\n          <p>\n            <mat-form-field\n              class=\"shop-drawing-submit__form-group file-input-field\"\n            >\n              <mat-label>Client Transmittal Form:</mat-label>\n              <upload-input\n                formControlName=\"drawing_client_transmittal_file_upload\"\n              ></upload-input>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n\n        <mat-grid-tile\n          class=\"shop-drawing-submit__col\"\n          *ngIf=\"data.action !== 'view' && shouldDisplayClientTransmittalFile()\"\n          colspan=\"2\"\n        >\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Client Transmittal No:</mat-label>\n              <input matInput formControlName=\"drawing_client_transmittal_no\" />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <div *ngIf=\"data.action === 'view'\" class=\"drawing-file-row\">\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewDrawingFile()\"\n        >\n          View Drawing File\n        </button>\n        &nbsp;\n      </div>\n      <div *ngIf=\"data.action === 'view'\" class=\"drawing-file-row\">\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewSBHETransmittal()\"\n          *ngIf=\"drawingRef.transmittal_form\"\n        >\n          View SBHE Transmittal File\n        </button>\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewSubmittedTransmittalForm()\"\n          *ngIf=\"drawingRef.submitted_transmittal_form\"\n        >\n          View Submitted SBHE Transmittal File\n        </button>\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewClientTransmittal()\"\n          *ngIf=\"drawingRef.drawing_client_transmittal_file\"\n        >\n          View Client Transmittal File\n        </button>\n      </div>\n    </div>\n    <div class=\"form-loading\" *ngIf=\"loading\">\n      <mat-progress-spinner\n        mode=\"indeterminate\"\n        diameter=\"40\"\n      ></mat-progress-spinner>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button\n      mat-raised-button\n      color=\"warn\"\n      type=\"cancel\"\n      (click)=\"handleCancelClicked($event)\"\n    >\n      Cancel</button\n    >&nbsp;\n    <!-- TODO: Have a progress spinner here -->\n    <button\n      mat-raised-button\n      color=\"primary\"\n      type=\"submit\"\n      [disabled]=\"isDataSubmitting || loading\"\n      *ngIf=\"data.action !== 'view'\"\n    >\n      <span>{{\n        (data.action !== \"edit\" ? data.action : \"save\") | titlecase\n      }}</span>\n    </button>\n  </mat-dialog-actions>\n</form>\n\n<swal\n  #successConfirmation\n  title=\"Success\"\n  text=\"Drawing has been updated!\"\n  icon=\"success\"\n  (confirm)=\"handleFormSubmit()\"\n></swal>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormControl } from '@angular/forms';\nimport { HistoryFilters } from 'src/app/core/models/history-filters';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-history-filters',\n  templateUrl: './history-filters.component.html',\n  styleUrls: ['./history-filters.component.scss'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => HistoryFiltersComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => HistoryFiltersComponent),\n      multi: true\n    }\n  ]\n})\nexport class HistoryFiltersComponent implements OnInit, ControlValueAccessor {\n  date: FormControl;\n  _value: HistoryFilters;\n\n  @Input() loading: boolean;\n  @Input() include: string[];\n\n  @Input()\n  get value() {\n    return this._value;\n  }\n\n  set value(value: HistoryFilters) {\n    this._value = value;\n\n    if (value) {\n      this.date.setValue(value.date);\n    }\n  }\n\n  constructor(\n    private datePipe: DatePipe\n  ) { \n    this.date = new FormControl();\n\n    this.date.valueChanges.subscribe(date => {\n      const filters: HistoryFilters = {\n        date,\n      }\n      this.onChange(filters);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: HistoryFilters) {\n    if (value) {\n      this.date.setValue(value.date);\n    }\n  }\n\n  filter = (d: Date | null): boolean => {\n    if (this.include) {\n      const date = this.datePipe.transform(d, 'dd-MM-yyyy');\n\n      return this.include.indexOf(date) !== -1;\n    }\n\n    return true;\n  }\n\n  validate(_: FormControl) {\n    return this.date.valid ? null : { filters: { valid: false, } }\n  }\n}\n","<div class=\"history-filters\">\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n  >\n    <div fxFlex='0 0 20%'>\n      <mat-form-field appearance='outline' class='form-control' *ngIf='!loading'>\n        <mat-label>Date: </mat-label>\n        <input matInput [matDatepicker]=\"picker\" [matDatepickerFilter]=\"filter\" [formControl]='date'>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n      <div class='history-filters__loader' *ngIf='loading'>\n        <content-loader [style]='{width: \"100%\"}' height=\"80\" *ngIf='loading'>\n          <svg:rect x=\"0\" y=\"20\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"20\" />\n        </content-loader>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TenderDrawingHistoryComponent } from './tender-drawing/tender-drawing-history/tender-drawing-history.component';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { HistoryFiltersComponent } from './history-filters/history-filters.component';\nimport { TenderDrawingComponent } from './tender-drawing/tender-drawing.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FlexLayoutModule, CoreModule } from '@angular/flex-layout';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TypeDrawingComponent } from './type-drawing/type-drawing.component';\nimport { TypeDrawingHistoryComponent } from './type-drawing/type-drawing-history/type-drawing-history.component';\nimport { VersionedFieldComponent } from './shared/versioned-field/versioned-field.component';\n\n\n\n@NgModule({\n  declarations: [TenderDrawingHistoryComponent, HistoryFiltersComponent, TenderDrawingComponent, TypeDrawingComponent, TypeDrawingHistoryComponent, VersionedFieldComponent],\n  imports: [\n    CommonModule,\n    AppLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDatepickerModule,\n    ContentLoaderModule,\n    MatIconModule,\n    FlexLayoutModule,\n  ]\n})\nexport class HistoryModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-versioned-field',\n  templateUrl: './versioned-field.component.html',\n  styleUrls: ['./versioned-field.component.scss']\n})\nexport class VersionedFieldComponent {\n  @Input() label: string = '';\n  @Input()\n  set current(current) {\n    this._current = current;\n  }\n\n  get current() {\n    return this.displayValue(this._current);\n  }\n\n  @Input() audits: Array<any> = [];\n  @Input() textarea: boolean = false;\n  @Input() displayFn;\n\n  _current;\n\n  displayValue(value) {\n    if(this.displayFn && typeof this.displayFn === 'function') {\n      return this.displayFn(value)\n    }\n\n    return value;\n  }\n\n  constructor() { }\n}\n","<div class=\"versioned-field\">\n  <div class=\"versioned-field__current\">\n    <mat-form-field\n      appearance='fill'\n      class='form-control'\n    >\n      <mat-label>{{ label }}</mat-label>\n      <input matInput [value]='current' *ngIf='!textarea'>\n      <textarea matInput rows=5 [value]='displayValue(current)' *ngIf='textarea'></textarea>\n    </mat-form-field>\n    <div class=\"versioned-field__changes\">\n      <div class=\"versioned-field__audit\" *ngFor='let audit of audits'>\n        <strong>+ {{ displayValue(audit.value) }}</strong>\n        <div class=\"audit-bottom\">\n          <div class=\"auditor\">\n            {{ audit.auditedBy }}\n          </div>\n          &nbsp;-&nbsp;\n          <div class=\"updated-at\">\n            <span>{{ audit.time | date:\"shortTime\" }} - <strong>{{ audit.time | date:\"dd-MM-yyyy\"}}</strong></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\nimport { DatePipe } from '@angular/common';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-tender-drawing-history',\n  templateUrl: './tender-drawing-history.component.html',\n  styleUrls: ['./tender-drawing-history.component.scss']\n})\nexport class TenderDrawingHistoryComponent implements OnInit {\n  @Input() tenderDrawing: TenderDrawing;\n  @Input() audits: any;\n\n  get isCreated() {\n    return this.audits && this.audits.event === 'created';\n  }\n\n  get events() {\n    const events = this.audits.map(audit => {\n      return audit.event;\n    });\n\n    const eventsUnique = events.filter((event, index) => {\n      return events.indexOf(event) === index;\n    });\n\n    return eventsUnique.join(', ');\n  }\n\n  get doneBy() {\n    const employees = this.audits.map(audit => {\n      return `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n    });\n\n    const employeeUnique = employees.filter((employee, index) => {\n      return employees.indexOf(employee) === index;\n    });\n\n    return employeeUnique.join(', ');\n  }\n\n  constructor(\n    private datePipe: DatePipe,\n  ) { }\n\n  ngOnInit(): void {}\n\n  isUpdated(key) {\n    if(this.audits) {\n      return this.audits.find(audit => {\n        return audit.new_values[key]\n      });\n    }\n\n    return false;\n  }\n\n  extractValues(key) {\n    const hasNewValues =  this.audits.filter(audit => {\n      return audit.new_values[key];\n    });\n\n    return hasNewValues.map(audit => {\n      return {\n        time: audit.created_at,\n        value: audit.new_values[key],\n        auditedBy: `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n      }\n    });\n  }\n\n  generateDrawingFileUrl(url) {\n    return `${environment.s3_url}${url}`\n  }\n\n  valueToDate = (value) => {\n    return this.datePipe.transform(value, \"dd-MM-yyyy\");\n  }\n}\n","<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n  >\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing No: '\n      [current]='tenderDrawing.no'\n      [audits]='extractValues(\"drawing_no\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing Title: '\n      [current]='tenderDrawing.title'\n      [audits]='extractValues(\"drawing_title\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n  >\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing Title Date: '\n      [current]='tenderDrawing.titleDate'\n      [audits]='extractValues(\"drawing_title_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Category: '\n      [current]='tenderDrawing.category'\n      [audits]='extractValues(\"drawing_category\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Project: '\n      [current]='tenderDrawing.projectName'\n      [audits]='extractValues(\"project\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Uploaded By: '\n      [current]='tenderDrawing.employeeName'\n      [audits]='extractValues(\"employee\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Shop Drawing Target Date: '\n      [current]='tenderDrawing.targetDate'\n      [audits]='extractValues(\"drawing_target_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Current Drawing No: '\n      [current]='tenderDrawing.currentDrawingNo'\n      [audits]='extractValues(\"current_drawing_no\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div fxLayout='row'>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing File: '\n      [current]='tenderDrawing.drawingFile'\n      [audits]='extractValues(\"drawing_file_upload\")'\n      [displayFn]='generateDrawingFileUrl'>\n    </app-versioned-field>\n  </div>\n</div>\n\n<div class=\"details\">\n  <p><strong>Events: </strong>{{ events | titlecase }}</p>\n  <p><strong>Done by: </strong>{{ doneBy | titlecase }}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DrawingService } from 'src/app/drawing/shared/drawing.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap, map } from 'rxjs/operators';\nimport { HistoryFilters } from 'src/app/core/models/history-filters';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-tender-drawing',\n  templateUrl: './tender-drawing.component.html',\n  styleUrls: ['./tender-drawing.component.scss']\n})\nexport class TenderDrawingComponent implements OnInit {\n  loading: boolean = false;\n  drawingId: string;\n  include: string[];\n  _filterValue: HistoryFilters = {\n    date: null,\n  }; \n  filters: FormControl;\n  tenderDrawing: TenderDrawing;\n  audits = [];\n\n  get filterValue(): HistoryFilters {\n    return this._filterValue;\n  }\n\n  set filterValue(value: HistoryFilters) {\n    this._filterValue = value;\n  }\n\n  constructor(\n    private drawingService: DrawingService,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n\n\n    this.route.parent.paramMap\n      .pipe(switchMap((params: ParamMap) => {\n        console.log(params)\n        const drawingId = params.get('drawingId');\n        this.drawingId = drawingId;\n        return this.drawingService.getHistoryDates(drawingId);\n      })).subscribe((res) => {\n        this.include = res;\n\n        this.getHistory()\n        this.loading = false;\n      });\n  }\n\n  getHistory() {\n    this.drawingService.getHistory(this.drawingId)\n      .subscribe(res => {\n        console.log(res)\n        this.tenderDrawing = res.tenderDrawing;\n        this.audits = res.audits;\n      });\n  }\n\n  parseAppDateToDate(apiDate: string) {\n    const parts = apiDate.split(\"-\");\n\n    return new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n  }\n}\n","<div class=\"tender-drawing-history-page\">\n  <div class=\"tender-drawing-history\">\n    <mat-card>\n      <h2 mat-card-title>History</h2>\n      <div mat-card-content>\n        <app-tender-drawing-history \n          [tenderDrawing]='tenderDrawing'\n          [audits]='audits'\n          *ngIf='tenderDrawing'\n          class='history'\n          >\n        </app-tender-drawing-history>\n        <div class=\"tender-drawing-history__empty\" *ngIf='!loading && !audits.length'>\n          <p class='text-center'>There are no history for this drawing yet...</p>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-type-drawing-history',\n  templateUrl: './type-drawing-history.component.html',\n  styleUrls: ['./type-drawing-history.component.scss']\n})\nexport class TypeDrawingHistoryComponent implements OnInit {\n  @Input() drawing;\n  @Input() audits;\n\n  get events() {\n    const events = this.audits.map(audit => {\n      return audit.event;\n    });\n\n    const eventsUnique = events.filter((event, index) => {\n      return events.indexOf(event) === index;\n    });\n\n    return eventsUnique.join(', ');\n  }\n\n  get doneBy() {\n    const employees = this.audits.map(audit => {\n      return `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n    });\n\n    const employeeUnique = employees.filter((employee, index) => {\n      return employees.indexOf(employee) === index;\n    });\n\n    return employeeUnique.join(', ');\n  }\n\n  constructor(\n    private datePipe: DatePipe,\n  ) { }\n\n  ngOnInit(): void {}\n\n  isUpdated(key) {\n    if(this.audits) {\n      return this.audits.find(audit => {\n        return audit.new_values[key]\n      });\n    }\n\n    return false;\n  }\n\n  extractValues(key) {\n    const hasNewValues =  this.audits.filter(audit => {\n      return audit.new_values[key];\n    });\n\n    return hasNewValues.map(audit => {\n      return {\n        time: audit.created_at,\n        value: audit.new_values[key],\n        auditedBy: `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n      }\n    });\n  }\n\n  generateDrawingFileUrl(url) {\n    return `${environment.s3_url}${url}`\n  }\n\n  getApprovedBy() {\n    return this.drawing.approved_by ? `${this.drawing.approved_by.first_name} ${this.drawing.approved_by.last_name}` : '';\n  }\n\n  getDrawingComment() {\n    switch(this.drawing.status) {\n      case 'Submitted':\n        return this.drawing.drawing_submission_comment;\n      case 'ReSubmitted':\n        return this.drawing.drawing_resubmission_comment;\n      case 'Rejected':\n        return this.drawing.drawing_rejected_comment;\n      case 'Approved':\n        return this.drawing.drawing_approved_comment;\n      default:\n        return '';\n    }\n  }\n\n  getUploadedBy() {\n    return this.drawing.uploaded_by ? `${this.drawing.uploaded_by.first_name} ${this.drawing.uploaded_by.last_name}` : '';\n  }\n\n  valueToDate = (value) => {\n    return this.datePipe.transform(value, \"dd-MM-yyyy\");\n  }\n\n  // extractCommentValues() {\n  //   const commentKeys = [\n  //     'drawing_submission_comment',\n  //     'drawing_resubmission_comment',\n  //     'drawing_rejected_comment',\n  //     'drawing_approved_comment',\n  //   ];\n\n  //   const hasNewValues =  this.audits.filter(audit => {\n  //     const keys = Object.keys(audit.new_values);\n\n  //     commentKeys.forEach(key => {\n  //       if(keys.indexOf(key) !== -1) {\n  //         return true;\n  //       }\n  //     });\n  //   });\n\n  //   return hasNewValues.map(audit => {\n  //     return {\n  //       time: audit.created_at,\n  //       value: audit.new_values[key],\n  //       auditedBy: `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n  //     }\n  //   });\n  // }\n}\n","<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing No: '\n      [current]='drawing.drawing_no'\n      [audits]='extractValues(\"drawing_no\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Actual Submission Date: '\n      [current]='drawing.drawing_submission_date'\n      [audits]='extractValues(\"drawing_submission_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n</div>\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Approved By: '\n      [current]='getApprovedBy()'\n      [audits]='extractValues(\"approved_by\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Revision No: '\n      [current]='drawing.drawing_revision_no'\n      [audits]='extractValues(\"drawing_revision_no\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='As Built Target Date: '\n      [current]='drawing.drawing_as_built_target_date'\n      [audits]='extractValues(\"drawing_as_built_target_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Status: '\n      [current]='drawing.status'\n      [audits]='extractValues(\"status\")'>\n    </app-versioned-field>\n  </div>\n</div>\n\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Comments: '\n      [current]='drawing.drawing_submission_comment'\n      [audits]='extractValues(\"drawing_submission_comment\")'\n      [textarea]='true'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Uploaded By: '\n      [current]='getUploadedBy()'\n      [audits]='extractValues(\"uploaded_by\")'>\n    </app-versioned-field>\n  </div>\n</div>\n\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='SBHE Transmittal No: '\n      [current]='drawing.transmittal_form ? drawing.transmittal_form.ref_no : \"\"'\n      [audits]='extractValues(\"transmittal_form\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Client Transmittal No: '\n      [current]='drawing.drawing_client_transmittal_no'\n      [audits]='extractValues(\"drawing_client_transmittal_no\")'>\n    </app-versioned-field>\n  </div>\n  <!-- <div fxFlex='0 0 calc(50% - 16px)'>\n    <mat-form-field \n      appearance='fill' \n      class='form-control' \n    >\n      <mat-label>Uploaded By:</mat-label>\n      <input type=\"text\" matInput readonly [value]='getUploadedBy()'>\n    </mat-form-field>\n    <div class='new-value bg-green' *ngIf='isUpdated(\"uploaded_by\")'>\n      <div class='audit' *ngFor='let audit of extractValues(\"uploaded_by\")'>\n        <strong>+ {{ audit.value }}</strong>\n        <div class=\"audit-bottom\">\n          <div class=\"auditor\">\n            {{ audit.auditedBy }}\n          </div>\n          &nbsp;-&nbsp;\n          <div class=\"updated-at\">\n            <span>{{audit.time | date:\"shortTime\"}} - <strong>{{ audit.time | date:\"dd-MM-yyyy\"}}</strong></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HistoryFilters } from 'src/app/core/models/history-filters';\nimport { TypeDrawingService } from 'src/app/core/services/type-drawing.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-type-drawing',\n  templateUrl: './type-drawing.component.html',\n  styleUrls: ['./type-drawing.component.scss']\n})\nexport class TypeDrawingComponent implements OnInit {\n  loading: boolean = false;\n  drawingId: string;\n  include: string[];\n  _filterValue: HistoryFilters = {\n    date: null,\n  }; \n  filters: FormControl;\n  typeDrawing;\n  audits = [];\n  type = '';\n\n  get filterValue(): HistoryFilters {\n    return this._filterValue;\n  }\n\n  set filterValue(value: HistoryFilters) {\n    this._filterValue = value;\n  }\n\n  get drawingTitle(): string {\n    return this.typeDrawing && this.typeDrawing.drawing_no ? this.typeDrawing.drawing_no : this.typeDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private typeDrawingService: TypeDrawingService,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true\n\n    this.route.parent.paramMap\n      .pipe(switchMap((params: ParamMap) => {\n        const drawingId = params.get('drawingId');\n        this.drawingId = drawingId;\n        return this.typeDrawingService.getHistoryDates(drawingId, this.type);\n      })).subscribe((res) => {\n        this.getHistory();\n        \n        this.loading = false;\n      });\n  }\n\n  getHistory() {\n    this.typeDrawingService.getHistory(this.drawingId, this.type)\n      .subscribe(res => {\n        this.typeDrawing = res.data;\n        this.audits = res.data.audits;\n      });\n  }\n\n  parseAppDateToDate(apiDate: string) {\n    const parts = apiDate.split(\"-\");\n\n    return new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n  }\n\n}\n","<div class=\"type-drawing-history-page\">\n  <div class=\"type-drawing-history\">\n    <mat-card>\n      <h2 mat-card-title>History</h2>\n      <div mat-card-content>\n        <app-type-drawing-history \n          [drawing]='typeDrawing'\n          [audits]='audits'\n          *ngIf='typeDrawing'\n          class='history'\n          >\n        </app-type-drawing-history>\n        <div class=\"tender-drawing-history__empty\" *ngIf='!loading && !audits.length'>\n          <p class='text-center'>There are no history for this drawing yet...</p>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { Router } from '@angular/router';\nimport { UserService, User } from '../core/services/user.service';\nimport { Breadcrumb } from '../layout/breadcrumbs/breadcrumbs.component';\nimport _ from 'lodash';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule, MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  projects: Array<any> = [];\n  loading: Boolean = false;\n  isAuthenticated: boolean;\n  user: User = null;\n  projectsDataSource = new MatTableDataSource([]);\n  currentSort: Sort = {active: '', direction: ''};\n\n  columnsToDisplay = ['projectTitle', 'startDate', 'endDate', 'status', 'progress'];\n\n  get projectsSorted(): Array<any> {\n    let _sortKey = 'id';\n    \n    if(this.currentSort.direction) {\n      switch(this.currentSort.active) {\n        case('projectTitle'):\n          _sortKey = 'title';\n          break;\n        case('startDate'):\n          _sortKey = 'startDate';\n          break;\n        case('endDate'):\n          _sortKey = 'endDate';\n          break;\n        case('status'):\n          _sortKey = 'status';\n          break;\n        case('progress'):\n          _sortKey = 'progress';\n          break;\n      }\n\n      return _.orderBy(this.projects, [_sortKey], [this.currentSort.direction]);\n    }\n    return this.projects;\n  }\n\n\n  constructor(\n    private projectsService: ProjectsService,\n    private router: Router,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.userService.currentUser.subscribe(user => {\n      this.user = user;\n\n      this.loading = false;\n    });\n  }\n\n  getData(): void {\n    this.loading = true\n\n    this.userService.currentUser\n      .subscribe()\n  }\n\n  onProjectClick(project) {\n    this.router.navigateByUrl(`/dashboard/project/${project.id}`);\n    \n    return false;\n  }\n\n  goToDrawingRequests() {\n    this.router.navigate([`drawing-requests`])\n  }\n\n  generateStatusClass(status: String) {\n    return `projects__status projects__status--${_.kebabCase(status)}`;\n  }\n\n  onTableSortChange($event: Sort) {\n    this.currentSort = $event;\n  }\n}\n\n","<div class=\"home\">\n  <ng-container *ngIf='!loading'>\n    <div *ngIf='user.isDrafter'>\n      <app-projects></app-projects>\n    </div>\n    <div *ngIf='user.isAdmin'>\n      <app-request-drawings></app-request-drawings>\n    </div>\n  </ng-container>\n  <div class=\"home__loader-container\" *ngIf='loading'>\n    <mat-progress-spinner \n      class='loader'\n      mode='indeterminate'\n      value='75'\n      diameter='60'\n    ></mat-progress-spinner>\n    <p>Please wait...</p>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { CoreModule } from '../core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { UserService } from '../core/services/user.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { RequestDrawingsModule } from '../request-drawings/request-drawings.module';\nimport { DrafterModule } from '../drafter/drafter.module';\nimport { ProjectsModule } from '../projects/projects.module';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    RequestDrawingsModule,\n    DrafterModule,\n    LayoutModule,\n    ProjectsModule,\n    MatCardModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    CoreModule,\n    MatTableModule,\n    MatSortModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    RouterModule,\n  ],\n  providers: [\n    ProjectsService,\n    UserService,\n    AuthGuard,\n  ],\n  exports: [\n    HomeComponent,\n  ]\n})\nexport class HomeModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { JwtService } from 'src/app/core/services/jwt.service';\nimport { Router } from '@angular/router';\nimport _ from 'lodash'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html',\n  styleUrls: ['./app-header.component.scss']\n})\nexport class AppHeaderComponent implements OnInit {\n  user: User\n  loading: boolean = false;\n\n  @Output() menuClicked: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userService.currentUser.subscribe(res => {\n      this.user = res\n    })\n  }\n\n  logout() {\n    this.userService.logout();\n    this.router.navigateByUrl('/login');\n  }\n\n  onMenuClick() {\n    this.menuClicked.emit();\n  }\n}\n","<mat-toolbar class='app-header' color='primary'>\n  <div class=\"app-header__left\">\n    <button \n      mat-icon-button class=\"example-icon\" \n      aria-label=\"Example icon-button with menu icon\"\n      (click)='onMenuClick()'\n    >\n      <mat-icon>menu</mat-icon>\n    </button>\n    <div class=\"app-header__logo-container\">\n      <a href=\"#\">\n        <img src=\"../../../assets/logo.png\" alt=\"\" class='app-header__logo'>\n      </a>\n    </div>\n  </div>\n  <div class=\"app-header__actions-container\" *ngIf='user'>\n    <button mat-button [matMenuTriggerFor]='headerMenu'>\n      <img [src]=\"user.avatar\" alt=\"\" class='app-header__avatar'>\n    </button>\n    <mat-menu #headerMenu=\"matMenu\" class='header-menu'>\n      <div class=\"user-details\">\n        <span class='user'>{{ user.getUserFullName() }}</span>\n      </div>\n      <button mat-menu-item (click)=\"logout()\">Logout</button>\n    </mat-menu>\n  </div>\n</mat-toolbar>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, Event, NavigationEnd } from '@angular/router';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss']\n})\nexport class BreadcrumbsComponent implements OnInit {\n  // @Input() replaceLabel: ReplaceLabelMap[];\n\n  public breadcrumbs: Breadcrumb[];\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n  }\n\n  ngOnInit(): void {\n    this.router.events.pipe(\n        filter((event: Event) => event instanceof NavigationEnd),\n        distinctUntilChanged(),\n    ).subscribe(() => {\n        this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n    });\n  }\n\n  buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: Breadcrumb[] = []): Breadcrumb[] {\n    //If no routeConfig is avalailable we are on the root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n    if (route.routeConfig && route.routeConfig.data && route.routeConfig.data.method) {\n      route.routeConfig.data.method();\n    }\n\n    // If the route is dynamic route such as ':id', remove it\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n\n    if(isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n\n    //In the routeConfig the complete path is not available,\n    //so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: Breadcrumb = {\n        name: route.routeConfig ? route.routeConfig.path : '',\n        label: label,\n        url: nextUrl,\n    };\n    // Only adding route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [ ...breadcrumbs, breadcrumb ] : [ ...breadcrumbs];\n    if (route.firstChild) {\n        //If we are not on our current path yet,\n        //there will be more children to look after, to build our breadcumb\n        return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n\n    return newBreadcrumbs;\n  }\n}\n\nexport interface Breadcrumb {\n  name: string;\n  label: string;\n  url: string;\n  icon?: string;\n}\n\n// export interface replaceLabelMap\n","<ol class='breadcrumbs'>\n  <li *ngFor='let breadcrumb of breadcrumbs'>\n    <a [routerLink]='breadcrumb.url'>\n      {{ breadcrumb.label }}\n    </a>\n  </li>\n</ol>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppHeaderComponent } from './app-header/app-header.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table'; \nimport { MatIconModule } from '@angular/material/icon'; \nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [AppHeaderComponent, MainLayoutComponent, BreadcrumbsComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    RouterModule,\n    // TODO REMOVE COMPONENTS HERE\n    MatCardModule,\n    MatGridListModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatToolbarModule,\n    MatSidenavModule,\n  ],\n  exports: [\n    MainLayoutComponent,\n    AppHeaderComponent,\n    BreadcrumbsComponent,\n  ]\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { MenuService } from 'src/app/core/services/menu-service';\nimport { environment } from 'src/environments/environment';\nimport { Router, Event, NavigationStart } from '@angular/router';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\n\nexport class MainLayoutComponent implements OnInit {\n  menuStatus: boolean = false;\n  sbheLink: String = environment.sbhePmUrl;\n\n  constructor(\n    public dialog: MatDialog,\n    public menuService: MenuService,\n    private router: Router\n  ) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationStart) {\n        this.setMenu(false);\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.menuService.menuStatus.subscribe(res => {\n      this.menuStatus = res;\n    });\n  }\n\n  toggleMenu() {\n    this.menuService.setMenuStatus(!this.menuStatus);\n  }\n\n  setMenu(boolean) {\n    this.menuService.setMenuStatus(boolean);\n  }\n\n  handleClick() {\n    this.setMenu(false);  \n  }\n}\n","<div class=\"main-layout mat-app-background\">\n  <app-header\n    (menuClicked)='toggleMenu()'\n  ></app-header>\n  <mat-sidenav-container>\n    <mat-sidenav \n      #sidenav \n      mode='push'\n      [opened]='menuStatus'\n      fixedTopGap='62'\n      fixedInViewport=\"true\"\n      (closed)=\"setMenu(false)\"\n      class='main-layout__sidebar'>\n      <mat-nav-list>\n        <mat-list-item>\n          <a matLine routerLink=\"/\">\n            <button mat-icon-button>\n              <mat-icon>dashboard</mat-icon>\n              Drawing Module\n            </button>\n          </a>\n        </mat-list-item>\n        <mat-list-item>\n          <a matLine [href]=\"sbheLink\" target=\"_blank\" (click)='handleClick()'>\n            <button mat-icon-button>\n              <mat-icon>menu_book</mat-icon>\n              Project Management\n            </button>\n          </a>\n        </mat-list-item>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class='main-layout__content'>\n      <div id=\"content\">\n        <ng-content></ng-content>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { Router } from '@angular/router';\nimport { UserService, User } from '../core/services/user.service';\nimport { Breadcrumb } from '../layout/breadcrumbs/breadcrumbs.component';\nimport _ from 'lodash';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule, MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects: Array<any> = [];\n  loading: Boolean = false;\n  isAuthenticated: boolean;\n  user: User = null;\n  projectsDataSource = new MatTableDataSource([]);\n  currentSort: Sort = {active: '', direction: ''};\n\n  columnsToDisplay = ['projectTitle', 'startDate', 'endDate', 'status', 'progress'];\n\n  get projectsSorted(): Array<any> {\n    let _sortKey = 'id';\n    \n    if(this.currentSort.direction) {\n      switch(this.currentSort.active) {\n        case('projectTitle'):\n          _sortKey = 'title';\n          break;\n        case('startDate'):\n          _sortKey = 'startDate';\n          break;\n        case('endDate'):\n          _sortKey = 'endDate';\n          break;\n        case('status'):\n          _sortKey = 'status';\n          break;\n        case('progress'):\n          _sortKey = 'progress';\n          break;\n      }\n\n      return _.orderBy(this.projects, [_sortKey], [this.currentSort.direction]);\n    }\n    return this.projects;\n  }\n\n\n  constructor(\n    private projectsService: ProjectsService,\n    private router: Router,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.userService.currentUser.subscribe(user => {\n      this.user = user;\n    });\n    this.getData();\n  }\n\n  getData(): void {\n    this.loading = true\n\n    this.projectsService.getProjects()\n      .subscribe(res => {\n        this.projects = res;\n        this.loading = false;\n      });\n  }\n\n  onProjectClick(project) {\n    this.router.navigateByUrl(`/dashboard/projects/${project.id}`);\n    \n    return false;\n  }\n\n  goToDrawingRequests() {\n    this.router.navigate([`drawing-requests`])\n  }\n\n  generateStatusClass(status: String) {\n    return `projects__status projects__status--${_.kebabCase(status)}`;\n  }\n\n  onTableSortChange($event: Sort) {\n    this.currentSort = $event;\n  }\n}\n","<div class=\"home\">\n  <div\n    fxLayout='row'\n    fxLayoutAlign='space-between center'\n  >\n    <h1>Projects</h1>\n    <div class=\"actions\">\n      <a \n        [routerLink]=\"['/']\"\n        mat-raised-button\n        color='primary'\n        *ngIf='!user.isDrafter'\n      >\n        View Request Drawing\n      </a>\n    </div>\n  </div>\n  <div class=\"projects\" *ngIf='!loading'>\n    <mat-table \n      [dataSource]=\"projectsSorted\" \n      class='projects__table' \n      matSort \n      #projectsTable\n      (matSortChange)='onTableSortChange($event)'\n    >\n      <ng-container matColumnDef=\"projectTitle\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Project Title </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.title }} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"startDate\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Start Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.startDate | date:'dd-MM-yyyy' }} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"endDate\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> End Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.endDate | date:'dd-MM-yyyy' }} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\">\n          <span [ngClass]='generateStatusClass(project.status)'>\n            {{ project.status }} \n          </span>\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"progress\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Progress </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.percentage }}% </mat-cell>\n      </ng-container>\n\n\n      <mat-header-row *matHeaderRowDef=\"columnsToDisplay\" class='projects__header'></mat-header-row>\n      <mat-row *matRowDef=\"let project; columns: columnsToDisplay\" class='projects__row' (click)='onProjectClick(project)'></mat-row>\n    </mat-table>\n  </div>\n  <div class=\"home__loader-container\" *ngIf='loading'>\n    <mat-progress-spinner \n      class='loader'\n      mode='indeterminate'\n      value='75'\n      diameter='60'\n    ></mat-progress-spinner>\n    <p>Please wait...</p>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { CoreModule } from '../core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { UserService } from '../core/services/user.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ProjectsComponent } from './projects.component';\n\n\n\n@NgModule({\n  declarations: [ProjectsComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    MatCardModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    CoreModule,\n    MatTableModule,\n    MatSortModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    RouterModule,\n  ],\n  providers: [\n    ProjectsService,\n    UserService,\n    AuthGuard,\n  ],\n  exports: [\n    ProjectsComponent,\n  ]\n})\nexport class ProjectsModule { }\n","import { Component, OnInit, ViewChildren, QueryList, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { moveItemInArray, transferArrayItem, CdkDragDrop, CdkDropList } from '@angular/cdk/drag-drop';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\n\n\n@Component({\n  selector: 'app-assign-drawings',\n  templateUrl: './assign-drawings.component.html',\n  styleUrls: ['./assign-drawings.component.scss']\n})\nexport class AssignDrawingsComponent implements OnInit {\n  drafters: Array<Drafter> = [];\n  loading: Boolean = false;\n  taskDragLists = [];\n  isSaving: Boolean = false;\n\n  @Output() onAssignSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private dialogRef: MatDialogRef<AssignDrawingsComponent>,\n    private drafterService: DrafterService,\n    private drawingRequestService: DrawingRequestService,\n  ) { \n    \n\n    console.log(this.taskDragLists)\n  }\n  \n  ngOnInit(): void {\n    this.getDrafters();\n  }\n\n  async getDrafters() {\n    this.loading = true;\n    this.drafterService.getDrafters(false).subscribe(res => {\n      this.drafters = res.data.map(drafter => {\n        const {\n          id,\n          first_name: firstName,\n          last_name: lastName,\n          drawing_requests: drawingRequests,\n          avatar = '',\n        } = drafter;\n  \n        // TODO: Handle status in API\n        const status = 'IN'\n  \n        return new Drafter({firstName, lastName, drawingRequests, status, id, avatar});\n        });\n        this.taskDragLists = this.drafters.map((drafter, index) => {\n          return `drafter-${index}`\n        });\n\n        this.loading = false;\n      });\n  }\n\n  closeDialog() {\n    this.dialogRef.close()\n  }\n\n  saveDrawingAssignments() {\n    this.isSaving = true;\n    const body = this.prepareSaveDrawingAssignmentsData();\n\n    this.drawingRequestService.assignRequests(body).subscribe(res => {\n      this.isSaving = false;\n      this.closeDialog();\n\n      this.onAssignSuccess.emit();\n    });\n  }\n\n  private prepareSaveDrawingAssignmentsData() {\n    return this.drafters.map(drafter => {\n      const drawingRequests = drafter.drawingRequests.map((request: DrawingRequest) => request.id);\n      \n      return {\n        drafter: drafter.id,\n        drawing_requests: drawingRequests,\n      }\n    });\n  }\n\n  \n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n}\n","<h1 mat-dialog-title>Assign Requests</h1>\n<div mat-dialog-content class='assign-drawings'>\n  <div \n    class=\"assign-drawings__container\"\n    fxLayout='row wrap'\n    fxLayoutAlign='center'\n    fxLayoutGap='16px'\n  >\n    <div class=\"assign-drawings__column\" *ngFor='let drafter of drafters; let i = index' fxFlex='0 0 calc(33.333% - 16px)'>\n      <div class=\"assign-drawing-drafter\">\n        <div class=\"assign-drawing-drafter__header\">\n          <img \n            [src]='drafter.avatarLink'\n            alt=\"Avatar\"\n            class='assign-drawing-drafter__img'\n          >\n          <h4>{{ drafter.fullname }}</h4>\n        </div>\n        <div \n          cdkDropList\n          [id]='\"drafter-\" + i'\n          class=\"assign-drawing-drafter__tasks\"\n          [cdkDropListConnectedTo]=\"taskDragLists\"\n          [cdkDropListData]=\"drafter.drawingRequests\"\n          (cdkDropListDropped)=\"drop($event)\"\n        >\n        <div *ngFor=\"let task of drafter.drawingRequests\" class='assign-drawing-drafter__task' cdkDrag>{{ task.subject }}</div> \n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"closeDialog()\" color='warn'>Close</button>\n  <button mat-raised-button (click)=\"saveDrawingAssignments()\" color='primary' [disabled]='loading || isSaving'>Save</button>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DrafterService, DrafterTasksData } from 'src/app/core/services/drafter.service';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { User } from 'src/app/core/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DrawingRequestComponent, DrawingRequestDialogData } from '../drawing-request/drawing-request.component';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { RequestDrawingActionComponent } from '../request-drawing-action/request-drawing-action.component';\nimport _ from 'lodash';\nimport { RequestTableFiltersComponent, RequestTableFiltersDialogData, RequestTableFilters } from 'src/app/drafter/request-table-filters/request-table-filters.component';\n\n@Component({\n  selector: 'drafter-tasks',\n  templateUrl: './drafter-tasks.component.html',\n  styleUrls: ['./drafter-tasks.component.scss']\n})\nexport class DrafterTasksComponent implements OnInit {\n  @Input() loading: Boolean = false;\n  @Output() onEditFormSubmit: EventEmitter<any> = new EventEmitter();\n\n  private _drafter: Drafter;\n  public columnsToDisplay = ['index', 'requestedBy', 'subject', 'drawingNo', 'status', 'requestedDate', 'targetDate', 'actions'];\n  public drafterDrawingRequests: DrawingRequest[] = [];\n  public tableData: DrafterTasksData = {\n    data: [],\n    total: 0,\n    currentPage: 1,\n  }\n  public fetchingRequests: Boolean = false;\n\n  @Input() set drafter(drafter: Drafter) {\n    this._drafter = drafter;\n    \n    if(drafter) {\n      this.filters = {\n        searchTerm: '',\n        status: '',\n        employeeId: '',\n        endDate: '',\n        fromDate: ''\n      };\n\n      this.getData();\n    }\n  }\n\n  get pageSizes(): Array<number> {\n    let defaultPageSizes = [\n      50,\n      100,\n      150\n    ];\n\n    if(this.tableData.total < 50) {\n      defaultPageSizes.unshift(this.tableData.total);\n    }\n\n    if(this.tableData.total > 150) {\n      defaultPageSizes.push(this.tableData.total);\n    }\n\n    return defaultPageSizes;\n  }\n\n  get drafter(): Drafter {\n    return this._drafter;\n  }\n\n  set pageNumber(pageNumber: number) {\n    this._pageNumber = pageNumber;\n\n    this.getData();\n  }\n\n  get pageNumber(): number {\n    return this._pageNumber;\n  }\n\n  private _pageNumber: number = 1;\n\n  set filters(filters: RequestTableFilters) {\n    this._filters = filters;\n\n    this.getData();\n  }\n\n  get filters(): RequestTableFilters {\n    return this._filters;\n  }\n\n  private _filters: RequestTableFilters = {\n    searchTerm: '',\n    status: '',\n    employeeId: '',\n    endDate: '',\n    fromDate: ''\n  }\n\n  constructor(\n    private drafterService: DrafterService,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {}\n\n  async getData() {\n    this.tableData.data = [];\n    this.fetchingRequests = true;\n    const filters = this.filters;\n\n    this.drafterService.getDrafterTasks(this._drafter.id, {\n      page: this.pageNumber,\n      filters,\n    }).subscribe(res => {\n      this.tableData = res;\n\n      this.fetchingRequests = false;\n    });\n  }\n\n  viewDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      type: 'view',\n      drawingRequest\n      // projectId: this.projectId,\n    }\n\n    const viewRequestDialog = this.dialog.open(DrawingRequestComponent, {\n      width: '720px',\n      restoreFocus: false,\n      data: dialogData,\n    });\n\n    viewRequestDialog.componentInstance.onApproveSuccess.subscribe(() => this.onEditFormSubmit.emit('Drawing successfuly updated.'));\n    viewRequestDialog.componentInstance.onRejectSuccess.subscribe(() => this.onEditFormSubmit.emit('Drawing successfuly rejected.'));\n  }\n\n  editDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      type: 'edit',\n      drawingRequest\n      // projectId: this.projectId,\n    }\n\n    const editDialogRef = this.dialog.open(DrawingRequestComponent, {\n      width: '720px',\n      restoreFocus: false,\n      data: dialogData,\n    });\n\n    editDialogRef.componentInstance.onFormSubmit.subscribe(() => this.onEditFormSubmit.emit());\n  }\n\n  showRequestDrawingActionRef(action, drawingRequest) {\n    const requestDrawingActionRef = this.dialog.open(RequestDrawingActionComponent, {\n      width: '720px',\n      restoreFocus: false,\n      data: {\n        action,\n        drawingRequest,\n      }\n    });\n\n    return requestDrawingActionRef;\n  }\n\n  showApproveDrawing(drawingRequest) {\n    const dialogRef = this.showRequestDrawingActionRef('approve', drawingRequest);\n\n    dialogRef.componentInstance.onCompleteSuccess.subscribe(() => this.onEditFormSubmit.emit());\n  }\n\n  showRejectDrawing(drawingRequest) {\n    const dialogRef = this.showRequestDrawingActionRef('reject', drawingRequest);\n\n    dialogRef.componentInstance.onCompleteSuccess.subscribe(() => this.onEditFormSubmit.emit());\n  }\n\n  generateStatusClass(status: String) {\n    const statusTransformed = _.kebabCase(status);\n\n    return `drafter-tasks-table__status--${statusTransformed}`;\n  }\n\n  handlePaginatorChange($event) {\n    this.pageNumber = $event.pageIndex + 1;\n  }\n\n  openFilters() {\n    const filters = this.filters;\n\n    const data: RequestTableFiltersDialogData = {\n      projectId: '',\n      filters,\n      defaultStatus: 'All',\n    }\n\n    const dialogRef = this.dialog.open(RequestTableFiltersComponent, {\n      width: '700px',\n      data,\n    });\n\n    dialogRef.componentInstance.onFilterChange.subscribe(res => {\n      this.filterRequests(res);\n    });\n  }\n\n  filterRequests(filters) {\n    this.filters = filters;\n  }\n}\n","<div class=\"drafter-tasks\">\n  <div class=\"drafter-tasks__actions\">\n    <button \n      mat-stroked-button\n      (click)='openFilters()'\n    >\n      <mat-icon>filter_list</mat-icon>\n      Filter Requests\n    </button>\n  </div>\n  <table mat-table [dataSource]=\"tableData.data\" class='drafter-tasks__table'>\n    <ng-container matColumnDef='index'>\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ i + 1 }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='requestedBy'>\n      <th mat-header-cell *matHeaderCellDef>Requester</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestedBy.getUserFullName() }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='subject'>\n      <th mat-header-cell *matHeaderCellDef>Subject</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.subject }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='drawingNo'>\n      <th mat-header-cell *matHeaderCellDef>Drawing No</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.drawing.currentDrawingNo }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef='let task;'>\n        <span [ngClass]=\"generateStatusClass(task.status)\">{{ task.status }}</span>\n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef='requestedDate'>\n      <th mat-header-cell *matHeaderCellDef>Request Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='targetDate'>\n      <th mat-header-cell *matHeaderCellDef>Target Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.targetDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='actions'>\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef='let drawingRequest;'>\n        <button mat-button [matMenuTriggerFor]='buildDrawingMenu'>\n          <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n        </button>\n        <mat-menu #buildDrawingMenu xPosition='before'>\n          <button mat-menu-item (click)='viewDrawingRequest(drawingRequest)'>View</button>\n          <button mat-menu-item (click)='editDrawingRequest(drawingRequest)'>Edit</button>\n          <button mat-menu-item color='accent' (click)='showApproveDrawing(drawingRequest)' type='button' *ngIf='drawingRequest.status === \"Completed\"'>Approve</button>\n          <button mat-menu-item color='warn' (click)='showRejectDrawing(drawingRequest)' type='button' *ngIf='drawingRequest.status === \"Completed\"'>Reject</button>\n        </mat-menu>\n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n  </table>\n\n  <div \n    fxLayout='row'\n    fxLayoutAlign='center'\n    class=\"drafter__tasks-no-data\"\n    *ngIf='!loading && !fetchingRequests && tableData.data.length === 0'\n  >\n    <p>No tasks found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"45\" *ngIf='loading || fetchingRequests'>\n    <svg:rect x=\"0\" y=\"5\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"20\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"35\" width=\"100%\" height=\"5\" />\n  </content-loader>\n\n  <mat-paginator \n    [length]='tableData.total'\n    [pageSize]='tableData.data.length'\n    [pageSizeOptions]=\"pageSizes\"\n    (page)='handlePaginatorChange($event)'\n    *ngIf='!loading'\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, EventEmitter, Output, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\n\n@Component({\n  selector: 'app-drafters',\n  templateUrl: './drafters.component.html',\n  styleUrls: ['./drafters.component.scss']\n})\nexport class DraftersComponent implements OnInit {\n  public loading: Boolean = false;\n  public drafters: Drafter[] = [];\n  public columnsToDisplay: string[] = ['drafter', 'status', 'overview'];\n\n  @Output() drafterClicked: EventEmitter<Drafter> = new EventEmitter();\n\n  constructor(\n    private dialogRef: MatDialogRef<DraftersComponent>,\n    private drafterService: DrafterService,\n    @Inject(MAT_DIALOG_DATA) public data: DraftersDialogData,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n    this.drafterService.getDrafters(true, this.data.projectId).subscribe(res => {\n      this.drafters = res.data.map(drafter => {\n        const {\n          id,\n          first_name: firstName,\n          last_name: lastName,\n          drawing_requests: drawingRequests,\n          avatar ='',\n        } = drafter;\n\n        // TODO: Handle status in API\n        const status = 'IN'\n\n        return new Drafter({firstName, lastName, drawingRequests, status, id, avatar});\n      });\n      \n      this.loading = false;\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  handleDrafterClicked(drafter: Drafter) {\n    this.drafterClicked.emit(drafter);\n    this.dialogRef.close();\n  }\n}\n\nexport interface DraftersDialogData {\n  projectId: number;\n}\n","<h1 mat-dialog-title>Drafters</h1>\n<div mat-dialog-content>\n  <table mat-table [dataSource]=\"drafters\" class='drafters__table'>\n    <ng-container matColumnDef='drafter'>\n      <th mat-header-cell *matHeaderCellDef>Drafter</th>\n      <td mat-cell *matCellDef=\"let drafter\">\n        <img \n          class='drafters__avatar'\n          [src]=\"drafter.avatarLink\" \n          alt=\"avatar\"\n        >\n        {{ drafter.fullname }}\n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef=\"let drafter\">\n      {{ drafter.status }}\n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef='overview'>\n      <th mat-header-cell *matHeaderCellDef>\n        <div class=\"request-drawings-table__overview-heading\">\n          Overview\n        </div>\n      </th>\n      <td mat-cell *matCellDef=\"let drafter\">\n        <mat-progress-bar mode=\"determinate\" [value]=\"(drafter.completedTasks.length/drafter.drawingRequests.length) * 100\" class='progress-bar'></mat-progress-bar>\n        {{ drafter.completedTasks.length }} Completed : {{ drafter.drawingRequests.length }} Assigned\n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr (click)=\"handleDrafterClicked(drafter)\" mat-row *matRowDef=\"let drafter; columns: columnsToDisplay\" class='drafters__table-row'></tr>\n  </table>\n  \n  <div class='drafters__no-data' *ngIf='drafters.length == 0 && !loading'>\n    <p>No drafter found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"90\" *ngIf='loading'>\n    <svg:rect x=\"10\" y=\"0\" width='20' height='20'/>\n    <svg:rect x=\"40\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"25\" width='20' height='20'/>\n    <svg:rect x=\"40\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"50\" width='20' height='20'/>\n    <svg:rect x=\"40\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  </content-loader>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color='warn' (click)=\"closeDialog()\">Close</button>\n</div>","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DatePipe } from '@angular/common';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\n\n@Component({\n  selector: 'app-drawing-request',\n  templateUrl: './drawing-request.component.html',\n  styleUrls: ['./drawing-request.component.scss']\n})\nexport class DrawingRequestComponent implements OnInit {\n  public drawingRequestForm: FormGroup;\n  public isSubmitting: Boolean = false;\n\n  @Output() onFormSubmit: EventEmitter<any> = new EventEmitter();\n  @Output() onApproveSuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onRejectSuccess: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('contentDiv') contentDiv: HTMLElement;\n  @ViewChild('confirmApproveDrawing') confirmApproveDrawing: SwalComponent;\n  @ViewChild('confirmRejectDrawing') confirmRejectDrawing: SwalComponent;\n\n  get isView(): Boolean {\n    return this.data.type === \"view\";\n  }\n\n  get drawingRequest(): DrawingRequest {\n    return this.data.drawingRequest;\n  }\n\n  constructor(\n    private dialogRef: MatDialogRef<DrawingRequestComponent>,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: DrawingRequestDialogData,\n    private drawingRequestService: DrawingRequestService,\n    private datePipe: DatePipe,\n  ) { \n    this.drawingRequestForm = this.formBuilder.group({\n      subject: new FormControl({value: this.drawingRequest.subject, disabled: this.isView}, [Validators.required]),\n      status: new FormControl({value: this.drawingRequest.status, disabled: this.isView}, [Validators.required]),\n      request_date: new FormControl({value: this.drawingRequest.requestDate, disabled: this.isView}, [Validators.required]),\n      target_date: new FormControl({value: this.drawingRequest.targetDate, disabled: this.isView } , [Validators.required]),\n      drawing: new FormControl({value: this.drawingRequest.drawing, disabled: this.isView } , [Validators.required]),\n      drawing_file: new FormControl(null),\n      comments: new FormControl({value: this.drawingRequest.comments, disabled: this.isView}, {})\n    });\n\n    if(this.data.isDrafter) {\n      this.drawingRequestForm.controls['status'].disable();\n    }\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  saveDrawingRequest() {\n    const {\n      request_date,\n      target_date,\n      subject,\n      status,\n      drawing,\n      drawing_file,\n      comments,\n    } = this.drawingRequestForm.value;\n\n    const body = {\n      subject,\n      status,\n      request_date: this.datePipe.transform(request_date, 'yyyy-MM-dd'),\n      target_date: this.datePipe.transform(target_date, 'yyyy-MM-dd'),\n      drawing_id: drawing.id,\n      comments,\n    }\n\n    if(drawing_file) {\n      body['drawing_file'] = drawing_file;\n    }\n\n    this.isSubmitting = true;\n    this.drawingRequestService.editRequest(body, this.data.drawingRequest.id).subscribe(() => {\n      this.isSubmitting = false;\n      this.onFormSubmit.emit();\n      this.closeDialog();\n    });\n  }\n\n  showApproveDrawingConfirm() {\n    this.confirmApproveDrawing.fire();\n  }\n\n  showRejectDrawingConfirm() {\n    this.confirmRejectDrawing.fire();\n  }\n}\n\nexport interface DrawingRequestDialogData {\n  type: string;\n  drawingRequest: DrawingRequest;\n  projectId?: string | number;\n  isDrafter?: Boolean;\n}\n","<form [formGroup]='drawingRequestForm'>\n  <h1 mat-dialog-title>Drawing Request</h1>\n  <div mat-dialog-content cdkFocusRegionstart>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row`'\n      *ngIf='drawingRequest.drawing && data.isDrafter'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Project</mat-label>\n          <input matInput disabled [value]='drawingRequest.drawing.projectName'>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Subject</mat-label>\n          <input matInput formControlName='subject'>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Status</mat-label>\n          <mat-select formControlName='status'>\n            <mat-option value='Assigned'>Assigned</mat-option>\n            <mat-option value='Completed'>Completed</mat-option>\n            <mat-option value='Approved'>Approved</mat-option>\n            <mat-option value='Rejected'>Rejected</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Request Date:</mat-label>\n          <input matInput [matDatepicker]=\"requestDate\" formControlName='request_date'>\n          <mat-datepicker-toggle matSuffix [for]=\"requestDate\"></mat-datepicker-toggle>\n          <mat-datepicker #requestDate></mat-datepicker>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Target Date:</mat-label>\n          <input matInput [matDatepicker]=\"targetDate\" formControlName='target_date'>\n          <mat-datepicker-toggle matSuffix [for]=\"targetDate\"></mat-datepicker-toggle>\n          <mat-datepicker #targetDate></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Requested By</mat-label>\n          <input matInput [value]='drawingRequest.requestedBy.getUserFullName()' disabled>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Assigned To</mat-label>\n          <input matInput [value]='drawingRequest.assignedTo.fullname' disabled>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Drawing:</mat-label>\n          <app-drawing-select formControlName='drawing' [projectId]='data.projectId'></app-drawing-select>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'></div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n      *ngIf='!isView'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Drawing File:</mat-label>\n          <upload-input formControlName='drawing_file'></upload-input>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'></div>\n    </div>\n\n    <div fxLayout='row'>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n        <textarea matInput cols=\"30\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n    </div>\n    \n    <div\n      class='files'\n    >\n      <button *ngIf='drawingRequest.drawingFile' mat-raised-button color='primary' type='button' (click)='drawingRequest.openDrawing()'>\n        View Original Drawing\n      </button> <br />\n      <button *ngIf='drawingRequest.completedDrawingFile !== \"Assigned\" && drawingRequest.completedDrawingFile' mat-raised-button color='primary' type='button' (click)='drawingRequest.openCompletedDrawingFile()'>\n        View Completed Drawing\n      </button>\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <div\n      fxLayout='row'\n      fxLayoutAlign='space-between flex-start'\n      class='full-width'\n    >\n      <div class=\"actions-left\">\n        <button mat-raised-button color='primary' (click)='saveDrawingRequest(); $event.preventDefault()' *ngIf='data.type !== \"view\"'>Save</button>\n      </div>\n      <button mat-raised-button  (click)='closeDialog()' [disabled]='' type='button'>Close</button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { take, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'featured-drafters',\n  templateUrl: './featured-drafters.component.html',\n  styleUrls: ['./featured-drafters.component.scss']\n})\nexport class FeaturedDraftersComponent implements OnInit {\n  public loading: Boolean = false;\n  public drafters: Array<Drafter> = [];\n  public columnsToDisplay: string[] = ['drafter', 'status', 'overview'];\n  // private _projectId;\n\n  @Output() drafterClicked: EventEmitter<Drafter> = new EventEmitter();\n  @Output() onDraftersLoaded: EventEmitter<Drafter[]> = new EventEmitter();\n\n  // @Input() set projectId(projectId: Number | string) {\n  //   if(projectId) {\n  //     this._projectId = projectId;\n  //     this.getData();\n  //   } else {\n  //     this.loading = true;\n  //   }\n  // }\n\n  // get projectId(): Number | string {\n  //   return this._projectId;\n  // }\n\n  constructor(\n    private drafterService: DrafterService\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n    this.drafters = [];\n\n    this.drafterService.getDrafters(true)\n      .pipe(map(res => res.data))\n      .subscribe(res => {\n        this.drafters = res.map(drafter => {\n          const {\n            id,\n            first_name: firstName,\n            last_name: lastName,\n            drawing_requests: drawingRequests,\n            avatar = '',\n          } = drafter;\n\n          // TODO: Handle status in API\n          const status = 'IN';\n\n          return new Drafter({firstName, lastName, drawingRequests, status, id, avatar});\n        });\n        \n        this.loading = false;\n        this.onDraftersLoaded.emit(this.drafters);\n      });\n  }\n\n  handleDrafterClicked(drafter: Drafter) {\n    this.drafterClicked.emit(drafter)\n  }\n}\n","<table mat-table [dataSource]=\"drafters\" class='featured-drafter__table'>\n  <ng-container matColumnDef='drafter'>\n    <th mat-header-cell *matHeaderCellDef>Drafter</th>\n    <td mat-cell *matCellDef=\"let drafter\">\n      <img \n        class='featured-drafter__avatar'\n        [src]=\"drafter.avatarLink\" \n        alt=\"avatar\"\n      >\n      {{ drafter.fullname }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef='status'>\n    <th mat-header-cell *matHeaderCellDef>Status</th>\n    <td mat-cell *matCellDef=\"let drafter\">\n    {{ drafter.status }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef='overview'>\n    <th mat-header-cell *matHeaderCellDef>\n      <div class=\"request-drawings-table__overview-heading\">\n        Overview\n      </div>\n    </th>\n    <td mat-cell *matCellDef=\"let drafter\">\n      <mat-progress-bar mode=\"determinate\" [value]=\"(drafter.completedTasks.length/drafter.drawingRequests.length) * 100\" class='progress-bar'></mat-progress-bar>\n      {{ drafter.completedTasks.length }} Completed : {{ drafter.drawingRequests.length }} Assigned\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr (click)=\"handleDrafterClicked(drafter)\" mat-row *matRowDef=\"let drafter; columns: columnsToDisplay\" class='featured-drafter__table-row'></tr>\n</table>\n\n<div class='featured-drafter__no-data' *ngIf='drafters.length == 0 && !loading'>\n  <p>No drafter found...</p>\n</div>\n\n<content-loader [style]='{width: \"100%\"}' height=\"90\" *ngIf='loading'>\n  <svg:rect x=\"10\" y=\"0\" width='20' height='20'/>\n  <svg:rect x=\"40\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"25\" width='20' height='20'/>\n  <svg:rect x=\"40\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"50\" width='20' height='20'/>\n  <svg:rect x=\"40\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n</content-loader>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DrawingRequestService, DrawingRequestParams } from 'src/app/core/services/drawing-request.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { map, switchMap } from 'rxjs/operators';\nimport { User, UserService } from 'src/app/core/services/user.service';\nimport { Drafter } from 'src/app/core/models/drafter';\n\n@Component({\n  selector: 'featured-requests',\n  templateUrl: './featured-requests.component.html',\n  styleUrls: ['./featured-requests.component.scss']\n})\nexport class FeaturedRequestsComponent implements OnInit {\n  public requests: DrawingRequest[] = [];\n  public loading: Boolean = false;\n  public columnsToDisplay: string[] = ['index', 'subject', 'status', 'drafter'];\n  // private _projectId;\n  private user: User;\n\n  constructor(\n    private drawingRequestService: DrawingRequestService,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  async getData() {\n    this.loading = true;\n    this.requests = [];\n\n    this.userService.currentUser\n      .pipe(switchMap(user => {\n        this.user = user;\n\n        const params: DrawingRequestParams = {\n          assignedBy: this.user.employeeId,\n          status: 'Assigned',\n        }\n\n        return this.drawingRequestService.getRequests('', params)\n      }))\n      .subscribe(res => {\n        console.log(res);\n        const requests = res;\n        this.requests = requests.reverse();\n\n        this.loading = false;\n      });\n  }\n}\n","<table mat-table [dataSource]=\"requests\" class='request-drawings__table'>\n  <ng-container matColumnDef='index'>\n    <th mat-header-cell *matHeaderCellDef>No.</th>\n    <td mat-cell *matCellDef=\"let request; let i = index;\">{{ i + 1 }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef='subject'>\n    <th mat-header-cell *matHeaderCellDef>Subject</th>\n    <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.subject }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef='drafter'>\n    <th mat-header-cell *matHeaderCellDef>Assigned To:</th>\n    <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.assignedTo.fullname }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef='status'>\n    <th mat-header-cell *matHeaderCellDef>Status:</th>\n    <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.status }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n</table> \n\n<div class='no-data' *ngIf='requests.length == 0 && !loading'>\n  <p>No drawing requests found...</p>\n</div>\n\n<content-loader [style]='{width: \"100%\"}' height=\"150\" *ngIf='loading'>\n  <svg:rect x=\"10\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"83\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"108\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n</content-loader>","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\n\n@Component({\n  selector: 'app-request-drawing-action',\n  templateUrl: './request-drawing-action.component.html',\n  styleUrls: ['./request-drawing-action.component.scss']\n})\nexport class RequestDrawingActionComponent implements OnInit {\n  comments: FormControl = new FormControl('');\n  loading: boolean = false;\n\n  @Output() onCompleteSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<RequestDrawingActionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RequestDrawingActionDialogData,\n    private drawingReqeustService: DrawingRequestService,\n  ) {}\n\n  ngOnInit(): void {}\n\n  handleFormSubmit() {\n    const action = this.data.action;\n    const drawingRequestId = this.data.drawingRequest.id;\n    const comments = this.comments.value;\n    this.loading = true;\n\n    switch(action) {\n      case 'approve':\n        this.drawingReqeustService.approveDrawing(drawingRequestId, comments).subscribe((res) => {\n          this.loading = false;\n          this.onCompleteSuccess.emit();\n          this.closeDialog();\n        });\n        break;\n      case 'reject':\n        this.drawingReqeustService.rejectDrawing(drawingRequestId, comments).subscribe((res) => {\n          this.loading = false;\n          this.onCompleteSuccess.emit();\n          this.closeDialog();\n        });\n        break;\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n\nexport interface RequestDrawingActionDialogData {\n  action: string;\n  drawingRequest: DrawingRequest;\n}\n","<div class=\"drawing-request-action\">\n  <form (submit)='handleFormSubmit()'>\n    <h1 mat-dialog-title>{{ data.action | titlecase }} Drawing Request</h1>\n    <div class=\"mat-dialog-content\">\n      <p>Are you sure you want to {{ data.action }} this drawing request?</p>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments</mat-label>\n        <textarea matInput rows=\"5\" name='comments' [formControl]='comments'></textarea>\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-raised-button (click)='closeDialog()' type='button' color='warn'>Cancel</button>\n      <button mat-raised-button type='submit' color='primary' [disabled]='loading'>{{ data.action | titlecase }}</button>\n    </div>\n  </form>\n</div>","import { Component, Inject, EventEmitter, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DatePipe } from '@angular/common';\nimport { map, switchMap } from 'rxjs/operators';\nimport { DrawingService } from 'src/app/drawing/shared/drawing.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { TypeDrawingModule } from 'src/app/type-drawing/type-drawing.module';\nimport { TypeDrawingService } from 'src/app/core/services/type-drawing.service';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\n\n@Component({\n  selector: 'app-request-drawing',\n  templateUrl: './request-drawing.component.html',\n  styleUrls: ['./request-drawing.component.scss']\n})\nexport class RequestDrawingComponent implements OnInit {\n  public requestDrawingForm: FormGroup;\n  public isSubmitting: Boolean = false;\n  public onRequestSaved: EventEmitter<any> = new EventEmitter();\n  public drawingTypes;\n  approvers;\n\n  constructor(\n    public dialogRef: MatDialogRef<RequestDrawingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RequestDrawingDialogData,\n    private formBuilder: FormBuilder,\n    private drawingRequestService: DrawingRequestService,\n    private drawingService: DrawingService,\n    private datePipe: DatePipe,\n    private projectConfigService: ProjectConfigurationService,\n  ) {\n    this.drawingTypes = this.data.drawingTypes;\n    this.requestDrawingForm = this.formBuilder.group({\n      subject: new FormControl('', [Validators.required]),\n      targetDate: new FormControl(new Date(), [Validators.required]),\n      drawing: new FormControl('', [Validators.required]),\n      drawingFile: new FormControl('', [Validators.required]),\n      typeId: new FormControl('', [Validators.required]),\n      comments: new FormControl(''),\n    });\n\n    this.requestDrawingForm.get('drawing').valueChanges.pipe(switchMap(res => {\n      this.requestDrawingForm.get('typeId').setValue('');\n      this.requestDrawingForm.get('typeId').disable();\n      return this.projectConfigService.getProjectDrawingTypes(res.projectId)\n    })).subscribe(res => {\n      this.requestDrawingForm.get('typeId').enable();\n      this.drawingTypes = res.drawingTypes;\n    });\n\n    if (this.data.isDrafter) {\n      this.requestDrawingForm.addControl('employeeId', new FormControl('', [Validators.required]));\n    }\n  }\n\n  ngOnInit() {\n    if(this.data.isDrafter) {\n      this.approvers = this.drawingService.getApprovers('shop', this.data.projectId).pipe(\n        map(res => res.data)\n      );\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  processForm() {\n    this.isSubmitting = true;\n\n    const {\n      subject,\n      targetDate,\n      drawing,\n      drawingFile,\n      employeeId,\n      comments,\n      typeId,\n    } = this.requestDrawingForm.value\n    const body = {\n      subject,\n      target_date: this.datePipe.transform(targetDate, \"yyyy-MM-dd\"),\n      request_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\n      drafter_id: this.data.drafterId,\n      project_id: this.data && this.data.projectId ? this.data.projectId : '',\n      drawing_id: drawing.id,\n      drawing_file: drawingFile,\n      type_id: typeId,\n      comments,\n    }\n\n    if (this.data.isDrafter) {\n      body['employee_id'] = employeeId;\n    }\n    \n    this.drawingRequestService.createRequest(body).subscribe(res => {\n      this.closeDialog();\n      this.onRequestSaved.emit(res.data);\n    });\n  }\n}\n\ninterface RequestDrawingDialogData {\n  drafterId;\n  projectId;\n  isDrafter?: boolean;\n  drawingTypes: Array<ProjectDrawingType>;\n}\n","<h1 mat-dialog-title>New Drawing Request</h1>\n<form [formGroup]=\"requestDrawingForm\">\n  <mat-dialog-content>\n    <div class=\"new-drawing-request\">\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>Subject: </mat-label>\n        <input matInput formControlName='subject'/>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>Target Date:</mat-label>\n        <input matInput [matDatepicker]=\"targetDate\" formControlName='targetDate'>\n        <mat-datepicker-toggle matSuffix [for]=\"targetDate\"></mat-datepicker-toggle>\n        <mat-datepicker #targetDate></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>For Drawing No:</mat-label>\n        <app-drawing-select formControlName='drawing' [projectId]='data.projectId'></app-drawing-select>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Drawing Type:</mat-label>\n        <mat-select formControlName='typeId'>\n          <mat-option [value]='drawingType.id' *ngFor='let drawingType of drawingTypes'>{{ drawingType.type }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control' *ngIf='data.isDrafter'>\n        <mat-label>Assigned By:</mat-label>\n        <mat-select formControlName='employeeId'>\n          <mat-option *ngFor='let approver of approvers | async' [value]='approver.id'>{{ approver.first_name }} {{ approver.last_name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>Original Drawing File:</mat-label>\n        <upload-input formControlName='drawingFile'></upload-input>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n        <textarea matInput id=\"\" cols=\"20\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-raised-button color='warn' type='button' (click)='closeDialog()'>Close</button>\n    <button mat-raised-button color='primary' [disabled]='!requestDrawingForm.valid || isSubmitting' (click)='processForm(); $event.preventDefault()'>Save</button>\n  </mat-dialog-actions>\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssignDrawingsComponent } from './assign-drawings/assign-drawings.component';\nimport { Drafter } from '../core/models/drafter';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FeaturedDraftersComponent } from './featured-drafters/featured-drafters.component';\nimport { DrafterTasksComponent } from './drafter-tasks/drafter-tasks.component';\nimport { FeaturedRequestsComponent } from './featured-requests/featured-requests.component';\nimport { RequestDrawingComponent } from './request-drawing/request-drawing.component';\nimport { DraftersComponent } from './drafters/drafters.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectConfigurationService } from '../core/services/project-configuration.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ProjectDrawingType } from '../core/models/project-drawing-type';\n\n@Component({\n  selector: 'app-request-drawings',\n  templateUrl: './request-drawings.component.html',\n  styleUrls: ['./request-drawings.component.scss']\n})\n\nexport class RequestDrawingsComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent;\n  @ViewChild('featuredDrafters') private featuredDrafters: FeaturedDraftersComponent;\n  @ViewChild('featuredRequests') private featuredReqests: FeaturedRequestsComponent;\n  @ViewChild('drafterTasks') private drafterTasks: DrafterTasksComponent;\n\n\n  selectedDrafter: Drafter = null;\n  isDrafterTasksLoading: Boolean = false;\n  test = new FormControl(null);\n  projectId: number | string;\n  drawingTypes: Array<ProjectDrawingType>;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private projectConfigService: ProjectConfigurationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.isDrafterTasksLoading = true;\n  }\n\n  openAssignDrawings() {\n    const assignDialog = this.dialog.open(AssignDrawingsComponent, {\n      width: '100%'\n    });\n\n    assignDialog.componentInstance.onAssignSuccess.subscribe(() => this.onAssignDrawingsSuccess());\n  }\n\n  handleDrafterClicked(drafter: Drafter) {\n    this.selectedDrafter = drafter;\n\n    this.isDrafterTasksLoading = false;\n  }\n\n  handleDraftersLoaded(drafters: Drafter[]) {\n    if(!this.selectedDrafter) {\n      this.selectedDrafter = drafters[0];\n\n      this.isDrafterTasksLoading = false;\n    }\n  }\n\n  onAssignDrawingsSuccess() {\n    this.successConfirmation.swalOptions = {text: \"Requests successfully assigned\"};\n\n    this.getAllData();\n\n    this.successConfirmation.fire();\n  }\n\n  onRequestSaved() {\n    this.successConfirmation.swalOptions = {text: \"Requests successfully saved\"};\n\n    this.getAllData();\n\n    this.successConfirmation.fire();\n  }\n\n  getAllData() {\n    this.featuredDrafters.getData();\n    this.featuredReqests.getData();\n    this.drafterTasks.getData();\n  }\n\n  showNewRequestDrawing() {\n    const newRequestDrawingDialog = this.dialog.open(RequestDrawingComponent, {\n      width: '720px',\n      data: {\n        drafterId: this.selectedDrafter.id,\n        projectId: this.projectId,\n        drawingTypes: this.drawingTypes,\n      }\n    });\n\n    newRequestDrawingDialog.componentInstance.onRequestSaved.subscribe(() => this.onRequestSaved());\n  }\n\n  openDrafters() {\n    const draftersDialog = this.dialog.open(DraftersComponent, {\n      width: '720px',\n      data: {\n        projectId: this.projectId,\n      }\n    });\n\n    draftersDialog.componentInstance.drafterClicked.subscribe((drafter) => this.handleDrafterClicked(drafter))\n  }\n\n  openRequests() {\n    const requestsDialog = this.dialog.open(RequestsComponent, {\n      width: '1000px',\n      data: {}\n    });\n  }\n\n  handleEditRequestFormSubmit(message) {\n    const alertMessage = message ? message : \"Request successfully saved\";\n\n    this.successConfirmation.swalOptions = {text: alertMessage};\n\n    this.getAllData();\n\n    this.successConfirmation.fire();\n  }\n}\n","<div class=\"request-drawings\">\n  <div \n    fxLayout='row'\n    fxLayoutAlign='space-between center'\n  >\n    <h1>Request Drawing</h1>\n    <a [routerLink]=\"['/dashboard/projects']\" mat-raised-button color='primary'>View All Projects</a>\n  </div>\n  <div \n    fxLayout='row wrap'\n    fxLayoutGap='16px'\n  >\n    <div fxFlex='60 0 0'>\n      <mat-card class='request-drawings__card'>\n        <mat-card-header>\n          <mat-card-title>Requested Drawings</mat-card-title>\n          <button mat-stroked-button color='primary' (click)='openRequests()'>See All</button>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"request-drawings__table-container\">\n            <featured-requests \n              #featuredRequests>\n            </featured-requests>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div fxFlex='40 0 0'>\n      <mat-card class='request-drawings__card requested-drawings'>\n        <mat-card-header>\n          <mat-card-title>Drafters</mat-card-title>\n          <div class=\"actions\">\n            <button mat-stroked-button color='primary' (click)=\"openAssignDrawings()\">Assigned Drawing</button>&nbsp;\n            <button mat-stroked-button color='primary' (click)=\"openDrafters()\">See All</button>\n          </div>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"request-drawings__table-container\">\n            <featured-drafters \n              (drafterClicked)='handleDrafterClicked($event)' \n              (onDraftersLoaded)='handleDraftersLoaded($event)' \n              #featuredDrafters>\n            </featured-drafters>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"request-drawings-main-table\">\n    <mat-card class='request-drawings__card request-drawings__card--main'>\n      <div \n        fxLayout='row'\n        class=\"drafter-tasks__header\"\n      >\n        <div class=\"drafter-tasks__title\" fxLayout='row'>\n          <content-loader [style]='{width: \"100%\"}' height=\"20\" *ngIf='isDrafterTasksLoading'>\n            <svg:rect x=\"10\" y=\"0\" width='320' height='20'/>\n          </content-loader>\n          <mat-card-title *ngIf='!isDrafterTasksLoading && selectedDrafter'>{{ selectedDrafter.fullname }}</mat-card-title>\n        </div>\n        <div class=\"drafter-tasks__action\">\n          <button mat-raised-button color='primary' (click)='showNewRequestDrawing()'>Request Drawing</button>\n        </div>\n      </div>\n      <mat-card-content>\n        <drafter-tasks \n          [loading]=\"isDrafterTasksLoading\" \n          [drafter]=\"selectedDrafter\" \n          (onEditFormSubmit)='handleEditRequestFormSubmit($event)' \n          #drafterTasks>\n        </drafter-tasks>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n>\n</swal>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RequestDrawingsComponent } from './request-drawings.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { LayoutModule as AppLayout } from '../layout/layout.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AssignDrawingsComponent } from './assign-drawings/assign-drawings.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { FeaturedDraftersComponent } from './featured-drafters/featured-drafters.component';\nimport { DrafterModule } from '../drafter/drafter.module';\nimport { DrafterService } from '../core/services/drafter.service';\nimport { FeaturedRequestsComponent } from './featured-requests/featured-requests.component';\nimport { DrawingRequestService } from '../core/services/drawing-request.service';\nimport { DrafterTasksComponent } from './drafter-tasks/drafter-tasks.component';\nimport { RequestDrawingComponent } from './request-drawing/request-drawing.component';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DraftersComponent } from './drafters/drafters.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { DrawingRequestComponent } from './drawing-request/drawing-request.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SharedModule } from '../shared/shared.module';\nimport { RequestDrawingActionComponent } from './request-drawing-action/request-drawing-action.component';\nimport { RouterModule } from '@angular/router';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n\n\n\n@NgModule({\n  declarations: [\n    RequestDrawingsComponent, \n    AssignDrawingsComponent, \n    FeaturedDraftersComponent, \n    FeaturedRequestsComponent, \n    DrafterTasksComponent, \n    RequestDrawingComponent, \n    DraftersComponent, \n    RequestsComponent, \n    DrawingRequestComponent, \n    RequestDrawingActionComponent\n  ],\n  imports: [\n    CommonModule,\n    AppLayout,\n    RouterModule,\n    MatCardModule,\n    MatGridListModule,\n    MatTableModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    FlexLayoutModule,\n    MatDatepickerModule,\n    DragDropModule,\n    DrafterModule,\n    ContentLoaderModule,\n    SweetAlert2Module,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    SharedModule,\n  ],\n  providers: [\n    DrafterService,\n    DrawingRequestService,\n  ],\n  exports: [\n    DrawingRequestComponent,\n    RequestDrawingComponent,\n    RequestDrawingsComponent,\n  ]\n})\nexport class RequestDrawingsModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-requests',\n  templateUrl: './requests.component.html',\n  styleUrls: ['./requests.component.scss']\n})\nexport class RequestsComponent implements OnInit {\n  public loading: Boolean = false;\n  public requests: DrawingRequest[] = [];\n  public columnsToDisplay: string[] = ['index', 'subject', 'status', 'requestDate', 'targetDate', 'drafter'];\n\n  constructor(\n    private dialogRef: MatDialogRef<RequestsComponent>,\n    private drawingRequestService: DrawingRequestService,\n    private userService: UserService,\n    @Inject(MAT_DIALOG_DATA) public data: RequestsDialogData,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n    \n    this.userService.currentUser\n      .pipe(switchMap((user: User) => {\n        return this.drawingRequestService.getRequests(this.data.projectId, {\n          assignedBy: user.employeeId,\n          status: 'Assigned',\n        });\n      })).subscribe(res => {\n        const requests = res;\n\n        this.requests = requests.reverse();\n\n        this.loading = false;\n      }); \n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n\nexport interface RequestsDialogData {\n  projectId: string | Number;\n}\n","<h1 mat-dialog-title>Requests</h1>\n<div mat-dialog-content>\n  <table mat-table [dataSource]=\"requests\" class='request-drawings__table'>\n    <ng-container matColumnDef='index'>\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let request; let i = index;\">{{ i + 1 }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='subject'>\n      <th mat-header-cell *matHeaderCellDef>Subject</th>\n      <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.subject }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='requestDate'>\n      <th mat-header-cell *matHeaderCellDef>Request Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.status }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='targetDate'>\n      <th mat-header-cell *matHeaderCellDef>Target Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.targetDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='drafter'>\n      <th mat-header-cell *matHeaderCellDef>Assigned To:</th>\n      <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.assignedTo.fullname }}</td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n  </table> \n  \n  <div class='no-data' *ngIf='requests.length == 0 && !loading'>\n    <p>No requests found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"150\" *ngIf='loading'>\n    <svg:rect x=\"10\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"83\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"108\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  </content-loader>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color='primary' (click)=\"closeDialog()\">Close</button>\n</div>","import { Component, OnInit, Optional, Self, Input, Output, EventEmitter, forwardRef, ElementRef } from '@angular/core';\nimport { NgControl, ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'app-ajax-autocomplete',\n  templateUrl: './ajax-autocomplete.component.html',\n  styleUrls: ['./ajax-autocomplete.component.scss'],\n  providers: [],\n})\nexport class AjaxAutocompleteComponent {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n  searchTermInput: FormControl;\n\n  @Input() options;\n  @Input() displayFn;\n  @Input() loading;\n\n  @Output() onSearchTermInputChange: EventEmitter<any> = new EventEmitter();\n  @Output() onOptionSelected: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef,\n  ) { \n    this.searchTermInput = new FormControl(null);\n\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.searchTermInput.valueChanges.subscribe(searchTerm => {\n      let term = searchTerm;\n\n      if(typeof term !== 'string') {\n        term = this.displayFn(term);\n      }\n\n      this.onChange(term);\n    });\n  }\n\n  writeValue(value: any): void {\n    this.searchTermInput.setValue(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean):void {\n    if (isDisabled) {\n      this.searchTermInput.disable();\n    } else {\n      this.searchTermInput.enable();\n    }\n  }\n\n  handleOptionSelected(option: MatAutocompleteSelectedEvent) {\n    this.onOptionSelected.emit(option.option.value);\n  }\n}\n","<div class=\"ajax-autocomplete\">\n  <input matInput [formControl]='searchTermInput' autocomplete=\"off\" [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto='matAutocomplete' [displayWith]='displayFn' (optionSelected)='handleOptionSelected($event)'>\n    <mat-option *ngIf=\"loading\" class=\"loading\">\n      <div class=\"ajax-autocomplete__loader-container\">\n        <mat-spinner diameter=\"30\"></mat-spinner>\n      </div>\n    </mat-option>\n    <ng-container *ngIf='searchTermInput.value && options.length === 0 && !loading'>\n      <mat-option>\n        <ng-content select='[empty-options]'></ng-content>\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading && !searchTermInput.value'>\n      <mat-option>\n        Start typing to search...\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading && options.length > 0'>\n      <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n        {{ displayFn(option) }}\n      </mat-option>\n    </ng-container>\n  </mat-autocomplete>\n</div>\n","import { Component, OnInit, Input, HostBinding, Optional, Self, ElementRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, Validators, NgControl } from '@angular/forms';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { Client } from 'src/app/core/models/client';\nimport { ClientBuilder } from 'src/app/core/builders/client-builder';\nimport { ClientsService } from 'src/app/core/services/clients.service';\nimport _ from 'lodash';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'app-client-select',\n  templateUrl: './client-select.component.html',\n  styleUrls: ['./client-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: ClientSelectComponent}],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class ClientSelectComponent implements OnInit, ControlValueAccessor, MatFormFieldControl<Client> {\n  static nextId = 0;\n\n  describedBy = '';\n  loading: boolean = false;\n  options: Client[] = [];\n  onChange = (_: any) => {};\n  onTouched = () => {};\n  errorState = false;\n  autocomplete: FormControl;\n  selectedClient: Client = null;\n  stateChanges = new Subject<void>();\n  focused: boolean = false;\n\n  @HostBinding() id = `client-select-${ClientSelectComponent.nextId++}`;\n\n\n  @Input()\n  get value(): Client | null {\n    if (this.selectedClient) {\n      return this.selectedClient;\n    }\n\n    return null;\n  }\n\n  set value(client: Client) {\n    this.selectedClient = client;\n    this.autocomplete.setValue(client.name);\n    this.onChange(this.selectedClient);\n\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  \n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    this.focused = true;\n  }\n\n  get empty() {\n    return !this.autocomplete.value;\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    public clientService: ClientsService,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _focusMonitor: FocusMonitor,\n  ) {\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.autocomplete = new FormControl('', [Validators.required]);\n\n    this.search = _.debounce(this.search, 700);\n\n    this.autocomplete.valueChanges.subscribe(res => {\n      this.loading = true;\n      this.search(res);\n    });\n\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      if (this.focused && !origin) {\n        this.onTouched();\n      }\n      \n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  writeValue(client: Client) {\n    let term = client ? client.name : '';\n    if(client) {\n      this.selectedClient = client;\n    }\n\n    this.autocomplete.setValue(term);\n\n    this.stateChanges.next();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  search(term) {    \n    if(term) {\n      this.clientService.getClients({\n        name: term,\n      }).subscribe(res => {\n        this.options = res;\n  \n        this.loading = false;\n      });\n    } else {\n      this.options = [];\n      this.loading = false;\n    }\n  }\n\n  displayFn(option: Client) {\n    if(option) { return option.name }\n  }\n\n  onOptionSelected(option) {\n    this.onChange(option);\n  }\n}\n","<div class=\"client-select\">\n  <app-ajax-autocomplete\n    [options]='options'\n    [loading]='loading'\n    [displayFn]='displayFn'\n    [formControl]='autocomplete'\n    (onOptionSelected)='onOptionSelected($event)'>\n    <p empty-options>No clients found</p>\n  </app-ajax-autocomplete>\n</div>\n","import { Component, OnInit, HostBinding, Input, Optional, Self, ElementRef, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { NgControl, FormControl, ControlValueAccessor } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { DrawingService, DrawingParams } from 'src/app/drawing/shared/drawing.service';\nimport _ from 'lodash'\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\n\n@Component({\n  selector: 'app-drawing-select',\n  templateUrl: './drawing-select.component.html',\n  styleUrls: ['./drawing-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: DrawingSelectComponent}],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class DrawingSelectComponent implements MatFormFieldControl<any>, OnDestroy {\n  static nextId = 0;\n  stateChanges = new Subject<void>();\n  selectedDrawingId: Number | string;\n  selectedDrawing: TenderDrawing;\n  focused: boolean = false;\n  describedBy = '';\n  errorState = false;\n  searchTermInput: FormControl;\n  subject = new Subject();\n  options: TenderDrawing[] = [];\n  loading: boolean = false;\n  shouldShowOptions = false;\n\n  @HostBinding() id = `drawing-select-${DrawingSelectComponent.nextId++}`;\n\n  @Input() projectId;\n  @Input() sbheDrawings: boolean = true;\n  @Input() clientDrawings: boolean = true;\n\n  @Input()\n  get value(): TenderDrawing {\n    return this.selectedDrawing;\n  }\n\n  set value(value: TenderDrawing) {\n    if(value) {\n      this.searchTermInput.setValue(value.currentDrawingNo);\n      this.selectedDrawing = value;\n      this.onChange(value);\n    }\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  \n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  get empty() {\n    return !this.searchTermInput.value;\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private _elementRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    private drawingService: DrawingService,\n  ) {\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.searchTermInput = new FormControl('');\n\n    this.searchTermInput.valueChanges.subscribe((searchTerm: string | TenderDrawing )=> {\n      this.loading = true;\n      let term = searchTerm;\n\n      if(typeof searchTerm !== 'string' && searchTerm) {\n        term = searchTerm.currentDrawingNo;\n      }\n\n      this.search(term);\n    });\n\n    this.search = _.debounce(this.search, 700);\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy():void {\n    this.stateChanges.complete();\n  }\n\n  onChange: (_: any) => void = (_: any) => {};\n  onTouched: () => void = () => {};\n\n  writeValue(drawing: TenderDrawing) {\n    if(drawing) {\n      this.searchTermInput.setValue(drawing);\n      this.selectedDrawingId = drawing.no;\n      this.selectedDrawing = drawing;\n    }\n    this.stateChanges.next();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  search(searchTerm) {\n    if(searchTerm) {\n      const params: DrawingParams = {\n        drawing_no: searchTerm,\n        sbhe_drawings: this.sbheDrawings,\n        client_drawings: this.clientDrawings,\n      }\n\n      this.drawingService.getTenderDrawings(this.projectId, params).subscribe(res => {\n        this.options = res;\n        this.loading = false;\n      });\n    } else {\n      this.options = [];\n      this.loading = false;\n    }\n  }\n\n  handleClick(event) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  displayFn(option: TenderDrawing) {\n    if(option) { return option.currentDrawingNo }\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this.searchTermInput.disable();\n  }\n\n  onOptionSelected($event) {\n    this.selectedDrawing = $event.option.value;\n    const option = $event.option.value;\n\n    this.onChange(option);\n  }\n}\n","<div class=\"drawing-select\" #drawingSelect>\n  <input matInput [formControl]='searchTermInput' autocomplete=\"off\" [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)='onOptionSelected($event)' #autoCompletePanel>\n    <mat-option *ngIf=\"loading\" class=\"loading\">\n      <div class=\"drawing-select__loader-container\">\n        <mat-spinner diameter=\"30\"></mat-spinner>\n      </div>\n    </mat-option>\n    <ng-container *ngIf='searchTermInput.value && options.length === 0 && !loading'>\n      <mat-option>\n        No data...\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading && !searchTermInput.value'>\n      <mat-option>\n        Start typing to search for a drawing no..\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading'>\n      <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n        {{ option.currentDrawingNo }}\n      </mat-option>\n    </ng-container>\n  </mat-autocomplete>\n</div>\n","import { Component, OnInit, Input, Optional, Self, ElementRef, OnDestroy, ViewChild, HostListener } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgControl, FormControl, ControlValueAccessor } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'upload-input',\n  templateUrl: './upload-input.component.html',\n  styleUrls: ['./upload-input.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: UploadInputComponent}],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class UploadInputComponent implements ControlValueAccessor, MatFormFieldControl<File>, OnInit, OnDestroy {\n  static nextId = 0;\n\n  @ViewChild('fileInput') fileInput: ElementRef;\n  focused = false\n  id = `drawing-category-select-${UploadInputComponent.nextId++}`;\n  selectedFile: File = null;\n  stateChanges = new Subject<void>()\n  errorState = false\n  describedBy = ''\n\n\n  @Input()\n  get value(): File | null {\n    if (this.selectedFile) {\n      return this.selectedFile;\n    }\n\n    return null\n  }\n  set value(file: File | null) {\n    this.selectedFile = file;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  public _placeholder: string;\n\n  get empty() {\n    return !this.selectedFile\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @HostListener('change', ['$event.target.files']) emitFiles( event: FileList ) {\n    const file = event && event.item(0);\n    this.selectedFile = file;\n\n    this.onChange(this.selectedFile)\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private _elementRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor\n  ) {\n\n    // Replace the provider from above with this.\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    fm.monitor(_elementRef, true).subscribe(origin => {\n      this.focused = !!origin\n      this.stateChanges.next()\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy():void {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  onContainerClick(event: MouseEvent) {\n    return null;\n  }\n\n  onChange: (_: any) => void = (_: any) => {};\n  onTouched: () => void = () => {};\n\n  writeValue(value: File) {\n    this.selectedFile = value\n    this.stateChanges.next()\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  chooseFile() {\n    this.fileInput.nativeElement.click();\n  }\n}\n","<div class=\"upload-input\">\n  <input type=\"file\" #fileInput>\n  <span class='upload-input__file'>{{ selectedFile && selectedFile.name }}</span>\n  <button type='button' mat-raised-button color='primary' class='upload-input__button' (click)='chooseFile()'>Upload File</button>\n</div>\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function valueNotEqualTo(match: string): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    const valid = match != control.value\n    return valid ? null : {'valueNotEqualTo': {value: control.value}}\n  };\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadInputComponent } from './forms/upload-input/upload-input.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DrawingSelectComponent } from './forms/drawing-select/drawing-select.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { AjaxAutocompleteComponent } from './forms/ajax-autocomplete/ajax-autocomplete.component';\nimport { ClientSelectComponent } from './forms/client-select/client-select.component';\n\n\n@NgModule({\n  declarations: [UploadInputComponent, DrawingSelectComponent, AjaxAutocompleteComponent, ClientSelectComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatAutocompleteModule\n  ],\n  exports: [\n    UploadInputComponent,\n    DrawingSelectComponent,\n    ClientSelectComponent,\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DrawingService } from '../drawing/shared/drawing.service';\nimport { TypeDrawingService } from '../core/services/type-drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-shop-drawing',\n  templateUrl: './shop-drawing.component.html',\n  styleUrls: ['./shop-drawing.component.scss']\n})\nexport class ShopDrawingComponent implements OnInit {\n  shopDrawing;\n\n  get drawingTitle(): string {\n    return this.shopDrawing && this.shopDrawing.drawing_no ? this.shopDrawing.drawing_no : this.shopDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private typeDrawingService: TypeDrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.typeDrawingService.getShopDrawing(id);\n    })).subscribe(res => {\n      this.shopDrawing = res.data;\n    });\n  }\n\n}\n","<h1 *ngIf='shopDrawing'>Shop Drawing - {{ drawingTitle }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShopDrawingComponent } from './shop-drawing.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HistoryModule } from '../history/history.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [ShopDrawingComponent],\n  imports: [\n    LayoutModule,\n    CommonModule,\n    HistoryModule,\n    RouterModule,\n  ]\n})\nexport class ShopDrawingModule { }\n","import { ShopDrawingComponent } from './shop-drawing.component';\nimport { TypeDrawingComponent as TypeDrawingHistoryComponent } from '../history/type-drawing/type-drawing.component';\n\n\nexport const SHOP_DRAWING_ROUTES = {\n  path: 'shop-drawing',\n  data: {\n    type: 'shop'\n  },\n  children: [\n    {\n      path: ':drawingId',\n      component: ShopDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TypeDrawingHistoryComponent,\n          data: {\n            type: 'shop'\n          },\n        }\n      ]\n    }\n  ]\n}\n","import { TenderDrawingComponent } from './tender-drawing.component';\nimport { TenderDrawingComponent as TenderDrawingHistory } from '../history/tender-drawing/tender-drawing.component';\n\n\nexport const TENDER_DRAWING_ROUTES = {\n  path: 'tender-drawing',\n  children: [\n    {\n      path: ':drawingId',\n      component: TenderDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TenderDrawingHistory,\n        }\n      ]\n    }\n  ]\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TenderDrawing } from '../core/models/tender-drawing';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DrawingService } from '../drawing/shared/drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tender-drawing',\n  templateUrl: './tender-drawing.component.html',\n  styleUrls: ['./tender-drawing.component.scss']\n})\nexport class TenderDrawingComponent implements OnInit {\n  tenderDrawing: TenderDrawing;\n\n  constructor(\n    private route: ActivatedRoute,\n    private drawingService: DrawingService,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.drawingService.getDrawing(id);\n    })).subscribe(res => {\n      this.tenderDrawing = res;\n    });\n  }\n}","<h1 *ngIf='tenderDrawing'>{{ tenderDrawing.title }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TenderDrawingComponent } from './tender-drawing.component';\nimport { HistoryModule } from '../history/history.module';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [TenderDrawingComponent],\n  imports: [\n    AppLayoutModule,\n    CommonModule,\n    HistoryModule,\n    RouterModule,\n  ],\n})\nexport class TenderDrawingModule { }\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TransmittalFormItemValues } from '../transmittal-form-item/transmittal-form-item.component';\n\n@Component({\n  selector: 'app-add-transmittal-form-item',\n  templateUrl: './add-transmittal-form-item.component.html',\n  styleUrls: ['./add-transmittal-form-item.component.scss']\n})\nexport class AddTransmittalFormItemComponent implements OnInit {\n  @Output() onFormSubmit: EventEmitter<any> = new EventEmitter();\n\n  addTransmittalFormItem: FormControl;\n\n  constructor(\n    private dialogRef: MatDialogRef<AddTransmittalFormItemComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AddTransmittalFormItemDialogData,\n  ) { \n    const initialData: TransmittalFormItemValues = {\n      sn: data.currentSerialNo,\n      referenceNo: '',\n      qty: '',\n      drawing: '',\n    }\n\n    this.addTransmittalFormItem = new FormControl(initialData, [Validators.required]);\n  }\n\n  ngOnInit(): void {}\n\n  handleFormSubmit() {\n    this.onFormSubmit.emit(this.addTransmittalFormItem.value);\n\n    this.dialogRef.close();\n  }\n}\n\nexport interface AddTransmittalFormItemDialogData {\n  currentSerialNo?: number | string;\n  projectId?: number | string;\n}\n","<form (submit)='handleFormSubmit()'>\n  <h1 mat-dialog-title>Add New Item</h1>\n  <div mat-dialog-content>\n    <app-transmittal-form-item [formControl]='addTransmittalFormItem' [projectId]='data.projectId'></app-transmittal-form-item>\n  </div>\n  <div mat-dialog-footer>\n    <button mat-raised-button mat-dialog-close type='button'>Close</button> &nbsp;\n    <button mat-raised-button type='submit' color='primary' [disabled]='addTransmittalFormItem.invalid'>Submit</button>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TransmittalFormValues } from '../transmittal-form/transmittal-form.component';\nimport { TransmittalFormService } from 'src/app/core/services/transmittal-form.service';\nimport { DatePipe } from '@angular/common';\nimport { TransmittalFormPurposes } from 'src/app/core/enums/transmittal-form-purpose.enum';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { Client } from 'src/app/core/models/client';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { User, UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-create-transmittal-form',\n  templateUrl: './create-transmittal-form.component.html',\n  styleUrls: ['./create-transmittal-form.component.scss']\n})\nexport class CreateTransmittalFormComponent implements OnInit {\n  transmittalForm: FormControl;\n  projectId;\n  isLoading: boolean = false;\n  client: Client;\n  submitting: boolean = false;\n  recentlyCreatedTransmittalFile;\n  drawingTypes: Array<ProjectDrawingType> = [];\n  user: User;\n\n  @ViewChild('successConfirmation') public successConfirmation: SwalComponent;\n\n  constructor(\n    private transmittalFormService: TransmittalFormService,\n    private datePipe: DatePipe,\n    private projectService: ProjectsService,\n    private route: ActivatedRoute,\n    private projectConfigService: ProjectConfigurationService,\n    private userService: UserService,\n    private router: Router\n  ) {\n    const defaultValues: TransmittalFormValues = {\n      date: new Date(),\n      attn: '',\n      subject: '',\n      for: [false, false, false, false, false, false, false, false],\n      remarks: '',\n      type: '',\n      refNo: '',\n    }\n\n    this.transmittalForm = new FormControl(defaultValues)\n   }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const id = params.get('id');\n        this.projectId = id;\n        return this.projectService.getClient(id);\n      }),\n      switchMap((client) => {\n        this.client = client;\n\n        return this.projectConfigService.getProjectDrawingTypes(this.projectId)\n      }),\n      switchMap((config) => {\n        this.drawingTypes = config.drawingTypes;\n\n        return this.userService.currentUser;\n      })\n    )\n    .subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  handleFormSubmit() {\n    this.submitting = true;\n\n    const {\n      date,\n      attn,\n      subject,\n      for: purpose,\n      remarks,\n      type,\n      items,\n      refNo,\n      signature,\n      useSaved,\n    } = this.transmittalForm.value;\n\n    // TODO: Purpose should be many\n    const formFor = purpose.findIndex(reason => {\n      return reason;\n    });\n\n    const formItems = items.map(item => {\n      return {\n        serial_no: item.sn + 1,\n        drawing_id: item.drawing.id,\n        reference_no: item.referenceNo,\n        quantity: item.qty\n      }\n    });\n\n    const signatureUri = useSaved ? signature : this.dataURItoBlob(signature);\n\n    const body = {\n      client_id: this.client.id,\n      date: this.datePipe.transform(date, 'yyyy-MM-dd'),\n      attn,\n      subject,\n      remarks,\n      type_id: type,\n      ref_no: refNo,\n      items: JSON.stringify(formItems),\n      for: TransmittalFormPurposes[formFor],\n      created_by: this.user.employeeId,\n      signature: signatureUri,\n    };\n    debugger\n    this.transmittalFormService.createTransmittalForm(body).subscribe(res => {\n      this.submitting = false;\n      this.recentlyCreatedTransmittalFile = res.data;\n      \n      this.transmittalForm.setValue(null);\n      this.successConfirmation.swalOptions = {\n        text: `Transmittal Form #${this.recentlyCreatedTransmittalFile.ref_no} created`,\n      }\n      this.successConfirmation.fire();\n    });\n  }\n\n  openFile() {\n    const path = this.recentlyCreatedTransmittalFile.file_path;\n\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${path}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n\n  dataURItoBlob(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    const byteString = atob(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to an ArrayBuffer\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    //Old Code\n    //write the ArrayBuffer to a blob, and you're done\n    //var bb = new BlobBuilder();\n    //bb.append(ab);\n    //return bb.getBlob(mimeString);\n\n    //New Code\n    return new Blob([ab], {type: mimeString});\n  }\n  handleBack(){\n    let id = this.route.snapshot.params.id;\n    this.router.navigate(['/dashboard/projects', id])\n  }\n}\n","<div class=\"d-flex\">\n  <div>\n    <button mat-icon-button (click)=\"handleBack()\" color=\"primary\">\n      <mat-icon>arrow_back</mat-icon>&nbsp;Back\n    </button>\n  </div>\n  <div>\n    <h2>New Transmittal Form</h2>\n  </div>\n</div>\n<div class=\"create-tranmittal-form\">\n  <div class=\"content\">\n    <mat-card>\n      <mat-card-content>\n        <form (submit)=\"handleFormSubmit()\">\n          <app-transmittal-form\n            [formControl]=\"transmittalForm\"\n            [client]=\"client\"\n            [drawingTypes]=\"drawingTypes\"\n            [user]=\"user\"\n          >\n          </app-transmittal-form>\n          <div fxLayoutAlign=\"space-between\">\n            <button mat-raised-button color=\"accent\" (click)=\"handleBack()\">Cancel</button>\n            <button\n              mat-raised-button\n              color=\"primary\"\n              type=\"submit\"\n              [disabled]=\"transmittalForm.invalid || submitting\"\n            >\n              Save Transmittal Form\n            </button>\n          </div>\n\n          &nbsp;\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n<swal\n  #successConfirmation\n  title=\"Success\"\n  icon=\"success\"\n  (confirm)=\"openFile()\"\n>\n</swal>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, NG_VALUE_ACCESSOR, NG_VALIDATORS, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'app-transmittal-form-item',\n  templateUrl: './transmittal-form-item.component.html',\n  styleUrls: ['./transmittal-form-item.component.scss'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TransmittalFormItemComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => TransmittalFormItemComponent),\n      multi: true\n    }\n  ],\n})\nexport class TransmittalFormItemComponent implements OnInit , ControlValueAccessor{\n  transmittalFormItem: FormGroup;\n  @Input() projectId;\n\n  get value(): TransmittalFormItemValues {\n    return this.transmittalFormItem.value;\n  }\n\n  set value(value: TransmittalFormItemValues) {\n    this.transmittalFormItem.setValue(value);\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { \n    this.transmittalFormItem = this.formBuilder.group({\n      sn: new FormControl('', []),\n      drawing: new FormControl('', [Validators.required]),\n      referenceNo: new FormControl('', [Validators.required]),\n      qty: new FormControl('', [Validators.required]),\n    });\n\n    this.transmittalFormItem.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n\n    if (value === null) {\n      this.transmittalFormItem.reset();\n    }\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if(isDisabled) {\n      this.transmittalFormItem.disable();\n    } else {\n      this.transmittalFormItem.enable();\n    }\n  }\n\n  validate(_: FormControl) {\n    return this.transmittalFormItem.valid ? null : { client: { valid: false, } }\n  }\n\n}\nexport interface TransmittalFormItemValues {\n  sn?: number | string;\n  qty: number | string;\n  referenceNo: string;\n  drawing: number | string;\n}\n","<div class='transmittal-form-item' [formGroup]='transmittalFormItem' cdkFocusRegionStart>\n  <mat-form-field class='form-control'>\n    <mat-label>Drawing</mat-label>\n    <app-drawing-select\n      formControlName='drawing'\n      [projectId]='projectId'  \n    >\n    </app-drawing-select>\n  </mat-form-field>\n  <mat-form-field class='form-control'>\n    <mat-label>Reference No.</mat-label>\n    <input type=\"text\" matInput formControlName='referenceNo'>\n  </mat-form-field>\n  <mat-form-field class='form-control'>\n    <mat-label>Qty</mat-label>\n    <input type=\"number\" matInput formControlName='qty'>\n  </mat-form-field>\n</div>\n","import { Component, OnInit, ViewChild, forwardRef, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddTransmittalFormItemComponent, AddTransmittalFormItemDialogData } from '../add-transmittal-form-item/add-transmittal-form-item.component';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { FormBuilder, FormGroup, Validators, FormControl, ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormArrayName, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Client } from 'src/app/core/models/client';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { SignaturePad } from 'angular2-signaturepad';\nimport { User } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-transmittal-form',\n  templateUrl: './transmittal-form.component.html',\n  styleUrls: ['./transmittal-form.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TransmittalFormComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => TransmittalFormComponent),\n      multi: true,\n    }\n  ],\n})\nexport class TransmittalFormComponent implements OnInit, ControlValueAccessor {\n  @ViewChild('itemsTable') table: MatTable<any>;\n  @ViewChild(SignaturePad) signaturePad: SignaturePad;\n  @Input()\n  get client() {\n    return this._client;\n  }\n\n  set client(client: Client) {\n    this._client = client;\n    if(client) {\n      this.transmittalForm.get('refNo').setValue(client.refFormat);\n    }\n  }\n\n  @Input() drawingTypes: Array<ProjectDrawingType> = [];\n  @Input() user: User;\n\n  private _client: Client;\n\n  columnsToDisplay = ['sn', 'description', 'referenceNo', 'qty', 'action'];\n  dataSource = new MatTableDataSource<any>();\n  projectId;\n\n  transmittalForm: FormGroup;\n  signature: string = '';\n  useSavedSignature: FormControl = new FormControl();\n\n  get value(): TransmittalFormValues {\n    return this.transmittalForm.value;\n  }\n\n  set value(value: TransmittalFormValues) {\n    this.transmittalForm.setValue(value);\n    \n    this.triggerOnChange();\n  }\n\n  get selectedClient(): Client {\n    return this.transmittalForm.get('client').value;\n  }\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  public signaturePadOptions: Object = {\n    'minWidth': 1,\n    'canvasWidth': 500,\n    'canvasHeight': 300\n  };\n\n  constructor(\n    private dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private route: ActivatedRoute,\n  ) {\n    this.transmittalForm = this.formBuilder.group({\n      date: new FormControl(new Date(), [Validators.required]),\n      attn: new FormControl('', [Validators.required]),\n      type: new FormControl(''),\n      refNo: new FormControl('', [Validators.required]),\n      subject: new FormControl('', [Validators.required]),\n      for: new FormArray([\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n      ]),\n      remarks: new FormControl(''),\n    });\n\n    this.transmittalForm.valueChanges.subscribe(value => {\n      this.triggerOnChange();\n    });\n\n    this.route.paramMap.subscribe(res => {\n      this.projectId = res.get('id');\n    });\n\n    this.useSavedSignature.valueChanges.subscribe(value => {\n      if(value) {\n        this.signature = this.user.signatureLink;\n\n        this.triggerOnChange();\n      } else {\n        this.signature = '';\n\n        this.triggerOnChange();\n      }\n    })\n  }\n\n  ngOnInit(): void {}\n  onRemove(index){\n    this.dataSource.data.splice(index, 1)\n    this.table.renderRows();\n    this.triggerOnChange();\n  }\n  showAddItem() {\n    const data: AddTransmittalFormItemDialogData = {\n      currentSerialNo: this.dataSource.data.length,\n      projectId: this.projectId,\n    };\n\n    const addItemDialog = this.dialog.open(AddTransmittalFormItemComponent, {\n      width: '720px',\n      data,\n    });\n\n    addItemDialog.componentInstance.onFormSubmit.subscribe(res => {\n      this.dataSource.data.push(res);\n\n      this.table.renderRows();\n      this.triggerOnChange();\n    });\n  }\n\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n\n    if (value === null) {\n      this.transmittalForm.reset();\n      this.dataSource.data = [];\n      this.clearSignature();\n      this.table.renderRows();\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if(isDisabled) {\n      this.transmittalForm.disable();\n    } else {\n      this.transmittalForm.enable();\n    }\n  }\n\n  validate(_: FormControl) {\n    const shouldRequireSignature = this.useSavedSignature.value ? true : this.signature;\n\n    return this.transmittalForm.valid && this.dataSource.data.length >= 1 && shouldRequireSignature ? null: { transmittalForm: { valid: false, } };\n  }\n\n  drawComplete() {\n    this.signature = this.signaturePad.toDataURL();\n\n    this.triggerOnChange();\n  }\n\n  clearSignature() {\n    this.signature = '';\n    this.signaturePad.clear();\n\n    this.triggerOnChange();\n  }\n\n  triggerOnChange() {\n    this.onChange({\n      ...this.transmittalForm.value,\n      items: this.dataSource.data,\n      signature: this.signature,\n      useSaved: this.useSavedSignature.value,\n    });\n    this.onTouched();\n  }\n}\n\nexport interface TransmittalFormValues {\n  date: Date | string,\n  attn: string;\n  subject: string;\n  for: Array<boolean>;\n  remarks?: string;\n  type: string;\n  refNo?: string;\n  signature?: string;\n  useSaved?: boolean;\n}\n","<div class=\"transmittal-form\" [formGroup]=\"transmittalForm\">\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\" fxLayoutAlign=\"space-between center\">\n    <div fxFlex=\"0 0 calc(25% - 16px)\">\n      <mat-radio-group class=\"transmittal-form-type\" formControlName=\"type\">\n        <mat-radio-button\n          [value]=\"drawingType.id\"\n          *ngFor=\"let drawingType of drawingTypes\"\n          >{{ drawingType.type }}</mat-radio-button\n        >\n        <!-- <mat-radio-button value='shop'>Shop</mat-radio-button>\n        <mat-radio-button value='as-built'>As Built</mat-radio-button> -->\n      </mat-radio-group>\n    </div>\n    <div fxFlex=\"0 0 calc(25%)\">\n      <mat-form-field class=\"form-control\">\n        <mat-label>Reference No:</mat-label>\n        <input matInput type=\"text\" formControlName=\"refNo\" />\n      </mat-form-field>\n      <mat-form-field class=\"form-control\">\n        <mat-label>Date:</mat-label>\n        <input matInput [matDatepicker]=\"formDate\" formControlName=\"date\" />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"formDate\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #formDate></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field class=\"form-control\">\n        <mat-label>Attn: </mat-label>\n        <input matInput type=\"text\" formControlName=\"attn\" />\n      </mat-form-field>\n    </div>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\">\n    <div fxFlex=\"0 0 calc(33% - 16px)\">\n      <mat-form-field class=\"form-control\">\n        <mat-label>Subject</mat-label>\n        <input matInput type=\"text\" formControlName=\"subject\" />\n      </mat-form-field>\n    </div>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\">\n    <div fxFlex=\"0 0 calc(50%)\" formArrayName=\"for\">\n      <div\n        fxLayout=\"row\"\n        fxLayoutAlign=\"space-between center\"\n        class=\"checkboxes-row\"\n      >\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\" value=\"for information\"\n            >for information</mat-checkbox\n          >\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for endorsement</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for action</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for review</mat-checkbox>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for record</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for approval</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for distrbution</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">other</mat-checkbox>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tranmsittal-form-items\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"full-width\" #itemsTable>\n      <ng-container matColumnDef=\"sn\">\n        <th mat-header-cell *matHeaderCellDef>S/N</th>\n        <td mat-cell *matCellDef=\"let item; let i = index\">{{ i + 1 }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef>Description</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.drawing.no }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"referenceNo\">\n        <th mat-header-cell *matHeaderCellDef>Reference No.</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.referenceNo }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"qty\">\n        <th mat-header-cell *matHeaderCellDef>Qty.</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.qty }}</td>\n      </ng-container>\n      <!-- Action Column -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Action</th>\n        <td mat-cell *matCellDef=\"let item; let i = index\">\n          <button mat-button color=\"accent\" (click)=\"onRemove(i)\">\n            Remove\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n      <tr mat-row *matRowDef=\"let items; columns: columnsToDisplay\"></tr>\n    </table>\n\n    <div\n      class=\"transmittal-form-items__no-items text-center\"\n      *ngIf=\"dataSource.data.length === 0\"\n    >\n      <h3>No items in this transmittal form</h3>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"button\"\n        (click)=\"showAddItem()\"\n      >\n        Add One Now\n      </button>\n    </div>\n\n    <div\n      class=\"transmittal-form-items__actions\"\n      *ngIf=\"dataSource.data.length >= 1\"\n    >\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"button\"\n        (click)=\"showAddItem()\"\n      >\n        Add Another Item\n      </button>\n    </div>\n  </div>\n  <div class=\"transmittal-form-remarks\">\n    <div fxLayout=\"row\">\n      <div fxFlex=\"0 0 500px\">\n        <mat-form-field class=\"form-control\">\n          <mat-label>Remarks</mat-label>\n          <input type=\"text\" matInput formControlName=\"remarks\" />\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div class=\"transmittal-form__signature\">\n    <p>\n      <mat-checkbox\n        class=\"transmittal-form__use-saved\"\n        [formControl]=\"useSavedSignature\"\n        >Use saved signature</mat-checkbox\n      >\n    </p>\n    <ng-container *ngIf=\"!useSavedSignature.value\">\n      <div class=\"transmittal-form__signature-pad\">\n        <signature-pad\n          [options]=\"signaturePadOptions\"\n          (onEndEvent)=\"drawComplete()\"\n        >\n        </signature-pad>\n      </div>\n      <p class=\"text-center\">\n        <strong>Signature</strong>\n      </p>\n      <p>\n        <button\n          mat-raised-button\n          color=\"warn\"\n          type=\"button\"\n          (click)=\"clearSignature()\"\n        >\n          Clear\n        </button>\n      </p>\n    </ng-container>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-transmittal-forms',\n  templateUrl: './transmittal-forms.component.html',\n  styleUrls: ['./transmittal-forms.component.scss']\n})\nexport class TransmittalFormsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>transmittal-forms works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransmittalFormsComponent } from './transmittal-forms.component';\nimport { CreateTransmittalFormComponent } from './create-transmittal-form/create-transmittal-form.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { TransmittalFormComponent } from './transmittal-form/transmittal-form.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { AddTransmittalFormItemComponent } from './add-transmittal-form-item/add-transmittal-form-item.component';\nimport { TransmittalFormItemComponent } from './transmittal-form-item/transmittal-form-item.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { SignaturePadModule } from 'angular2-signaturepad';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n\n\n@NgModule({\n  declarations: [TransmittalFormsComponent, CreateTransmittalFormComponent, TransmittalFormComponent, AddTransmittalFormItemComponent, TransmittalFormItemComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SweetAlert2Module,\n    AppLayoutModule,\n    FlexLayoutModule,\n    SharedModule,\n    SignaturePadModule,\n    MatIconModule\n  ]\n})\nexport class TransmittalFormsModule { }\n","import { Routes } from '@angular/router';\nimport { CreateTransmittalFormComponent } from './create-transmittal-form/create-transmittal-form.component';\n\nexport const TRANSMITTAL_FORMS_ROUTES = {\n  path: 'transmittal-forms',\n  children: [\n     {\n       path: 'create',\n       component: CreateTransmittalFormComponent,\n     },\n  ]\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { TypeDrawingService } from '../core/services/type-drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-type-drawing',\n  templateUrl: './type-drawing.component.html',\n  styleUrls: ['./type-drawing.component.scss']\n})\nexport class TypeDrawingComponent implements OnInit {\n  typeDrawing;\n\n  get drawingTitle(): string {\n    return this.typeDrawing && this.typeDrawing.drawing_no ? this.typeDrawing.drawing_no : this.typeDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private typeDrawingService: TypeDrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.typeDrawingService.getTypeDrawing(id);\n    })).subscribe(res => {\n      this.typeDrawing = res.data;\n    });\n  }\n\n}\n","<h1 *ngIf='typeDrawing'>{{ typeDrawing.drawing_type.type }} Drawing - {{ drawingTitle }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypeDrawingComponent } from './type-drawing.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { HistoryModule } from '../history/history.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [TypeDrawingComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    HistoryModule,\n    RouterModule,\n  ]\n})\nexport class TypeDrawingModule { }\n","import { TypeDrawingComponent } from './type-drawing.component';\nimport { TypeDrawingComponent as TypeDrawingHistoryComponent } from '../history/type-drawing/type-drawing.component';\n\n\nexport const TYPE_DRAWING_ROUTES = {\n  path: 'type-drawing',\n  children: [\n    {\n      path: ':drawingId',\n      component: TypeDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TypeDrawingHistoryComponent,\n        }\n      ]\n    }\n  ]\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorized',\n  templateUrl: './unauthorized.component.html',\n  styleUrls: ['./unauthorized.component.scss']\n})\nexport class UnauthorizedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>unauthorized works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // api_url: `http://localhost:8000/`,\n  // api_url: `http://api-drawing-prod.sbhe-ume-pm.net/api/v1`,\n  api_url: `http://api-drawing-staging.sbhe-ume-pm.net/api/v1`,\n  s3_url: \"https://s3-ap-southeast-1.amazonaws.com/sbhe-dev/\",\n  sbhePmUrl: \"http://onion.sbhe-ume-pm.net/\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}