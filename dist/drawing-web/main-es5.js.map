{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/as-built-drawing/as-built-drawing.component.ts","webpack:///src/app/as-built-drawing/as-built-drawing.component.html","webpack:///src/app/as-built-drawing/as-built-drawing.module.ts","webpack:///src/app/as-built-drawing/as-built.routes.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/no-auth-guard.service.ts","webpack:///src/app/clients/clients-filters/clients-filters.component.ts","webpack:///src/app/clients/clients-filters/clients-filters.component.html","webpack:///src/app/clients/clients-form/clients-form.component.ts","webpack:///src/app/clients/clients-form/clients-form.component.html","webpack:///src/app/clients/clients.component.ts","webpack:///src/app/clients/clients.component.html","webpack:///src/app/clients/clients.module.ts","webpack:///src/app/core/adapters/client-adapter.ts","webpack:///src/app/core/adapters/drafter-requests-summary-adapter.ts","webpack:///src/app/core/adapters/drafter.adapter.ts","webpack:///src/app/core/adapters/drawing-category-adapter.ts","webpack:///src/app/core/adapters/drawing-request-adapter.ts","webpack:///src/app/core/adapters/index.ts","webpack:///src/app/core/adapters/project-adapter.ts","webpack:///src/app/core/adapters/tender-drawing-adapter.ts","webpack:///src/app/core/api.service.ts","webpack:///src/app/core/builders/client-builder.ts","webpack:///src/app/core/builders/drawing-request-builder.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/enums/drawing-status.enum.ts","webpack:///src/app/core/enums/transmittal-form-purpose.enum.ts","webpack:///src/app/core/enums/usertypes.enum.ts","webpack:///src/app/core/index.ts","webpack:///src/app/core/interceptors/error.interceptor.ts","webpack:///src/app/core/interceptors/http.token.interceptors.ts","webpack:///src/app/core/interceptors/index.ts","webpack:///src/app/core/models/audit-trail.ts","webpack:///src/app/core/models/client.ts","webpack:///src/app/core/models/drafter.ts","webpack:///src/app/core/models/drawing-request.ts","webpack:///src/app/core/models/project-configuration.ts","webpack:///src/app/core/models/project-drawing-type.ts","webpack:///src/app/core/services/auth-guard.service.ts","webpack:///src/app/core/services/clients.service.ts","webpack:///src/app/core/services/drafter-requests.service.ts","webpack:///src/app/core/services/drafter.service.ts","webpack:///src/app/core/services/drawing-category.service.ts","webpack:///src/app/core/services/drawing-request.service.ts","webpack:///src/app/core/services/jwt.service.ts","webpack:///src/app/core/services/menu-service.ts","webpack:///src/app/core/services/project-category.service.ts","webpack:///src/app/core/services/project-configuration.service.ts","webpack:///src/app/core/services/projects.service.ts","webpack:///src/app/core/services/transmittal-form.service.ts","webpack:///src/app/core/services/type-drawing.service.ts","webpack:///src/app/core/services/user.service.ts","webpack:///src/app/dashboard/admin-guard.service.ts","webpack:///src/app/dashboard/dashboard-routing.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/dashboard/drafter-guard.service.ts","webpack:///src/app/drafter/complete-drawing-request/complete-drawing-request.component.ts","webpack:///src/app/drafter/complete-drawing-request/complete-drawing-request.component.html","webpack:///src/app/drafter/drafter.component.ts","webpack:///src/app/drafter/drafter.component.html","webpack:///src/app/drafter/drafter.module.ts","webpack:///src/app/drafter/request-summary/request-summary.component.ts","webpack:///src/app/drafter/request-summary/request-summary.component.html","webpack:///src/app/drafter/request-table-filters/request-table-filters.component.ts","webpack:///src/app/drafter/request-table-filters/request-table-filters.component.html","webpack:///src/app/drafter/requests-table/requests-table.component.ts","webpack:///src/app/drafter/requests-table/requests-table.component.html","webpack:///src/app/drawing-categories/drawing-categories-table/drawing-categories-table.component.ts","webpack:///src/app/drawing-categories/drawing-categories-table/drawing-categories-table.component.html","webpack:///src/app/drawing-categories/drawing-categories.module.ts","webpack:///src/app/drawing/add-category/add-category.component.ts","webpack:///src/app/drawing/add-category/add-category.component.html","webpack:///src/app/drawing/add-drawing/add-drawing.component.ts","webpack:///src/app/drawing/add-drawing/add-drawing.component.html","webpack:///src/app/drawing/audit-trail/audit-trail.component.ts","webpack:///src/app/drawing/audit-trail/audit-trail.component.html","webpack:///src/app/drawing/category-select/category-select.component.ts","webpack:///src/app/drawing/category-select/category-select.component.html","webpack:///src/app/drawing/drawing-category-select/drawing-category-select.component.ts","webpack:///src/app/drawing/drawing-category-select/drawing-category-select.component.html","webpack:///src/app/drawing/drawing-filters/drawing-filters.component.ts","webpack:///src/app/drawing/drawing-filters/drawing-filters.component.html","webpack:///src/app/drawing/drawing-summary-list/drawing-summary-list.component.ts","webpack:///src/app/drawing/drawing-summary-list/drawing-summary-list.component.html","webpack:///src/app/drawing/drawing-summary/drawing-summary.component.ts","webpack:///src/app/drawing/drawing-summary/drawing-summary.component.html","webpack:///src/app/drawing/drawing-table-drawing-target-date/drawing-table-drawing-target-date.component.ts","webpack:///src/app/drawing/drawing-table-drawing-target-date/drawing-table-drawing-target-date.component.html","webpack:///src/app/drawing/drawing-table-request-drawing/drawing-table-request-drawing.component.ts","webpack:///src/app/drawing/drawing-table-request-drawing/drawing-table-request-drawing.component.html","webpack:///src/app/drawing/drawing-table/drawing-table.component.ts","webpack:///src/app/drawing/drawing-table/drawing-table.component.html","webpack:///src/app/drawing/drawing.component.ts","webpack:///src/app/drawing/drawing.component.html","webpack:///src/app/drawing/drawing.module.ts","webpack:///src/app/drawing/edit-drawing/edit-drawing.component.ts","webpack:///src/app/drawing/edit-drawing/edit-drawing.component.html","webpack:///src/app/drawing/latest-transmittal-form/latest-transmittal-form.component.ts","webpack:///src/app/drawing/latest-transmittal-form/latest-transmittal-form.component.html","webpack:///src/app/drawing/project-configuration/project-configuration-item/project-configuration-item.component.ts","webpack:///src/app/drawing/project-configuration/project-configuration-item/project-configuration-item.component.html","webpack:///src/app/drawing/project-configuration/project-configuration.component.ts","webpack:///src/app/drawing/project-configuration/project-configuration.component.html","webpack:///src/app/drawing/project-configuration/project-drawing-type-item/project-drawing-type-item.component.ts","webpack:///src/app/drawing/project-configuration/project-drawing-type-item/project-drawing-type-item.component.html","webpack:///src/app/drawing/shared/drawing.service.ts","webpack:///src/app/drawing/submit-shop-drawing/submit-shop-drawing.component.ts","webpack:///src/app/drawing/submit-shop-drawing/submit-shop-drawing.component.html","webpack:///src/app/history/history-filters/history-filters.component.ts","webpack:///src/app/history/history-filters/history-filters.component.html","webpack:///src/app/history/history.module.ts","webpack:///src/app/history/shared/versioned-field/versioned-field.component.ts","webpack:///src/app/history/shared/versioned-field/versioned-field.component.html","webpack:///src/app/history/tender-drawing/tender-drawing-history/tender-drawing-history.component.ts","webpack:///src/app/history/tender-drawing/tender-drawing-history/tender-drawing-history.component.html","webpack:///src/app/history/tender-drawing/tender-drawing.component.ts","webpack:///src/app/history/tender-drawing/tender-drawing.component.html","webpack:///src/app/history/type-drawing/type-drawing-history/type-drawing-history.component.ts","webpack:///src/app/history/type-drawing/type-drawing-history/type-drawing-history.component.html","webpack:///src/app/history/type-drawing/type-drawing.component.ts","webpack:///src/app/history/type-drawing/type-drawing.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/layout/app-header/app-header.component.ts","webpack:///src/app/layout/app-header/app-header.component.html","webpack:///src/app/layout/breadcrumbs/breadcrumbs.component.ts","webpack:///src/app/layout/breadcrumbs/breadcrumbs.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/main-layout/main-layout.component.ts","webpack:///src/app/layout/main-layout/main-layout.component.html","webpack:///src/app/projects/projects.component.ts","webpack:///src/app/projects/projects.component.html","webpack:///src/app/projects/projects.module.ts","webpack:///src/app/request-drawings/assign-drawings/assign-drawings.component.html","webpack:///src/app/request-drawings/assign-drawings/assign-drawings.component.ts","webpack:///src/app/request-drawings/drafter-tasks/drafter-tasks.component.html","webpack:///src/app/request-drawings/drafter-tasks/drafter-tasks.component.ts","webpack:///src/app/request-drawings/drafters/drafters.component.ts","webpack:///src/app/request-drawings/drafters/drafters.component.html","webpack:///src/app/request-drawings/drawing-request/drawing-request.component.ts","webpack:///src/app/request-drawings/drawing-request/drawing-request.component.html","webpack:///src/app/request-drawings/featured-drafters/featured-drafters.component.ts","webpack:///src/app/request-drawings/featured-drafters/featured-drafters.component.html","webpack:///src/app/request-drawings/featured-requests/featured-requests.component.html","webpack:///src/app/request-drawings/featured-requests/featured-requests.component.ts","webpack:///src/app/request-drawings/request-drawing-action/request-drawing-action.component.ts","webpack:///src/app/request-drawings/request-drawing-action/request-drawing-action.component.html","webpack:///src/app/request-drawings/request-drawing/request-drawing.component.ts","webpack:///src/app/request-drawings/request-drawing/request-drawing.component.html","webpack:///src/app/request-drawings/request-drawings.component.ts","webpack:///src/app/request-drawings/request-drawings.component.html","webpack:///src/app/request-drawings/request-drawings.module.ts","webpack:///src/app/request-drawings/requests/requests.component.ts","webpack:///src/app/request-drawings/requests/requests.component.html","webpack:///src/app/shared/forms/ajax-autocomplete/ajax-autocomplete.component.ts","webpack:///src/app/shared/forms/ajax-autocomplete/ajax-autocomplete.component.html","webpack:///src/app/shared/forms/client-select/client-select.component.ts","webpack:///src/app/shared/forms/client-select/client-select.component.html","webpack:///src/app/shared/forms/drawing-select/drawing-select.component.ts","webpack:///src/app/shared/forms/drawing-select/drawing-select.component.html","webpack:///src/app/shared/forms/upload-input/upload-input.component.ts","webpack:///src/app/shared/forms/upload-input/upload-input.component.html","webpack:///src/app/shared/forms/value-not-equal-to.directive.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shop-drawing/shop-drawing.component.ts","webpack:///src/app/shop-drawing/shop-drawing.component.html","webpack:///src/app/shop-drawing/shop-drawing.module.ts","webpack:///src/app/shop-drawing/shop-drawing.routes.ts","webpack:///src/app/tender-drawing/tender-drawing-routes.ts","webpack:///src/app/tender-drawing/tender-drawing.component.ts","webpack:///src/app/tender-drawing/tender-drawing.component.html","webpack:///src/app/tender-drawing/tender-drawing.module.ts","webpack:///src/app/transmittal-forms/add-transmittal-form-item/add-transmittal-form-item.component.ts","webpack:///src/app/transmittal-forms/add-transmittal-form-item/add-transmittal-form-item.component.html","webpack:///src/app/transmittal-forms/create-transmittal-form/create-transmittal-form.component.ts","webpack:///src/app/transmittal-forms/create-transmittal-form/create-transmittal-form.component.html","webpack:///src/app/transmittal-forms/transmittal-form-item/transmittal-form-item.component.ts","webpack:///src/app/transmittal-forms/transmittal-form-item/transmittal-form-item.component.html","webpack:///src/app/transmittal-forms/transmittal-form/transmittal-form.component.ts","webpack:///src/app/transmittal-forms/transmittal-form/transmittal-form.component.html","webpack:///src/app/transmittal-forms/transmittal-forms.component.ts","webpack:///src/app/transmittal-forms/transmittal-forms.component.html","webpack:///src/app/transmittal-forms/transmittal-forms.module.ts","webpack:///src/app/transmittal-forms/transmittal-forms.routes.ts","webpack:///src/app/type-drawing/type-drawing.component.ts","webpack:///src/app/type-drawing/type-drawing.component.html","webpack:///src/app/type-drawing/type-drawing.module.ts","webpack:///src/app/type-drawing/type-drawing.routes.ts","webpack:///src/app/unauthorized/unauthorized.component.ts","webpack:///src/app/unauthorized/unauthorized.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","userService","router","title","initializeApp","checkUser","selector","templateUrl","styleUrls","DEFAULT_SWIPER_CONFIG","direction","slidesPerView","AppModule","provide","useValue","declarations","providers","bootstrap","AsBuiltDrawingComponent","route","typeDrawingService","paramMap","pipe","res","get","getAsBuiltDrawing","subscribe","asBuiltDrawing","data","drawing_no","drawing","AsBuiltDrawingModule","AS_BUILT_DRAWINGS_ROUTES","type","children","AuthRoutingModule","forChild","AuthComponent","formBuilder","loading","loginForm","group","username","password","$event","loginDetails","preventDefault","attemptLogin","navigateByUrl","err","console","log","onFormSubmit","AuthModule","NoAuthGuard","state","isAuthenticated","authenticated","ClientsFiltersComponent","searchTerm","onSearchTermChange","valueChanges","value","emit","ClientsFormComponent","_client","onChange","onTouched","clientForm","refFormat","extractClientValue","required","city","country","zipCode","address","reset","fn","isDisabled","disable","enable","_","valid","client","key","setValue","useExisting","multi","ClientsComponent","dialog","projectService","clientService","successMessage","isSubmitting","projectId","getProject","project","getClient","formValue","body","project_id","ref_format","zip_code","addClient","successConfirmation","fire","handleFormSubmit","ClientsModule","ClientAdapter","request","name","client_name","setAddress","setRefFormat","setCity","setCountry","setZipCode","build","DrafterRequestsSummaryAdapter","assigned","completed","rejected","approved","total","DrafterAdapter","first_name","last_name","avatar","drawing_requests","status","drafter","drawingRequests","firstName","lastName","DrawingCategoryAdapter","category_name","DrawingRequestAdapter","assignedToUser","assigned_to","requestedByUser","requested_by","subject","request_date","target_date","drawing_file","completed_drawing_file","comments","drawing_type","assignedTo","tenderDrawing","no","drawing_title","targetDate","drawing_target_date","titleDate","drawing_title_date","drawingFile","drawing_file_upload","category","employeeId","employee_id","currentDrawingNo","current_drawing_no","projectName","requestedBy","roleId","role_id","companyId","drawingType","setColor","color","setOrder","order","drawingRequest","setAssignedTo","setStatus","setRequestedBy","setDrawing","setDrawingFile","setCompletedDrawingFile","setComments","setDrawingType","ProjectAdapter","client_address","location","percentage","manpower","start_date","end_date","startDate","endDate","clientName","clientAddress","TenderDrawingAdapter","employee","employeeName","ApiService","http","params","api_url","formData","createFormData","post","FormData","forEach","append","put","delete","object","form","namespace","property","hasOwnProperty","undefined","formKey","Date","toISOString","File","Blob","ClientBuilder","_id","_name","_address","format","_refFormat","_city","_country","_zipCode","DrawingRequestBuilder","requestDate","_subject","_requestDate","_targetDate","_status","_assignedTo","user","_requestedBy","_drawingFile","_drawing","_completedDrawingFile","_comments","_drawingType","CoreModule","useClass","DrawingStatus","TransmittalFormPurposes","UserTypes","ErrorInterceptor","next","handle","logout","queryParams","session_expired","HttpTokenInterceptor","jwtService","headersConfig","token","getToken","clone","setHeaders","AuditTrail","drawingTitle","drawingNo","date","doneBy","event","oldValues","newValues","changedKeys","AuditEvents","CREATED","getChangedKeys","startCase","join","Client","clientBuilder","Drafter","drafterDetails","filter","s3_url","image","DrawingRequest","drawingRequestBuilder","completedDrawingFile","forceRefreshPrefix","getTime","win","window","open","focus","ProjectConfiguration","drawingTypes","ProjectDrawingType","AuthGuard","ClientsService","api","clientAdapter","url","adapt","DrafterRequestsService","drafterRequestSummaryAdapter","drafterId","DrafterService","drawingRequestAdapter","withCompletedTasks","page","items","filters","fromDate","currentPage","current_page","pageParams","item","DrawingCategoryService","drawingCategoryAdapter","DrawingRequestService","currentUser","userId","postData","assignedBy","drafter_requests","JSON","stringify","JwtService","TOKEN_KEY","localStorage","setItem","removeItem","MenuService","MENU_KEY","menuStatusSubject","menuStatus","asObservable","ProjectCategoryService","projectCategory","categoryName","categoryId","ProjectConfigurationService","types","projectDrawingType","toJson","typeId","ProjectsService","projectAdapter","TransmittalFormService","TypeDrawingService","datePipe","transform","User","userDetails","generateAvatarLink","generateDefaultAvatarLink","tokenExpiration","signature","signaturePath","avatarLink","defaultAvatarPath","adminUserTypes","Superadmin","Director","Engineer","Supervisor","ProjectManager","AssistantProjectManager","Coordinator","indexOf","UserService","tokenService","currentUserSubject","isAuthenticatedSubject","generateUserDetails","token_expiration","setAuth","purgeAuth","userData","role","company","signature_path","credentials","saveToken","removeToken","AdminGuard","isAdmin","DashboardRoutingModule","DashboardComponent","DashboardModule","DrafterGuard","isDrafter","CompleteDrawingRequestComponent","dialogRef","drawingRequestService","onCompleteSuccess","completeDrawingForm","close","completeRequest","drawingRequestId","closeDialog","DrafterComponent","swalOptions","text","summary","getData","newRequestDrawingDialog","width","componentInstance","onRequestSaved","requestsTable","showNewRequestDrawing","DrafterModule","RequestSummaryComponent","drafterRequest","getSummary","_drafterId","_projectId","RequestTableFiltersComponent","drawingService","onFilterChange","defaultStatus","defaultTerm","fromDateFormatted","toDate","endDateFormatted","filterForm","controls","minDate","approvers","getApprovers","initialValues","_filters","onSubmit","resetForm","RequestsTableComponent","drafterService","isLoading","columnsToDisplay","tableData","_pageNumber","getDrafterAssignedTasks","pageNumber","completeDrawingRequest","dialogData","drawingRequestDialog","statusTransformed","kebabCase","pageIndex","defaultPageSizes","unshift","push","openFilters","handlePaginatorChange","DrawingCategoriesTableComponent","drawingCategoryService","projectCategoryService","elementRef","isDataSubmitting","categories","projectCategories","onDeleteSuccess","onEditSuccess","getProjectCategories","getCategories","deleteConfirmation","selectedDeleteCategory","deleteCategory","editCategoryName","selectedEditCategory","setTimeout","nativeElement","querySelector","editCategory","DrawingCategoriesModule","AddCategoryComponent","categoryService","errors","formSubmitted","categoryForm","addCategory","error","setErrors","invalid","handleOnDeleteSuccess","handleOnEditSuccess","AddDrawingComponent","drawingForm","drawing_category_id","test","categories$","getRawValue","addDrawing","addedDrawing","uploadFile","closeDrawing","subscription","unsubscribe","onUseCurrentDrawingNoToggle","AuditTrailComponent","isDataLoading","history","displayedColumns","getHistory","audit","created_at","old_values","new_values","changedBy","company_id","toUpperCase","CategorySelectComponent","projectDrawingService","ngControl","fm","elRef","nextId","stateChanges","focused","errorState","controlType","touched","_required","shouldShowAllOption","_disabled","describedBy","delta","valueAccessor","monitor","origin","ids","complete","stopMonitoring","target","tagName","toLowerCase","_placeholder","plh","empty","DrawingCategory","DrawingCategorySelectInput","_elementRef","myControl","selectedId","shouldLabelFloat","filteredOptions","_filter","filterValue","includes","host","DrawingFiltersComponent","searchQuery","_extractFilterValues","uploadedBy","typeDrawingStatus","formControlName","generateFormControlName","addControl","filterFormValue","label","string","camelCase","resetFilters","DrawingSummaryListComponent","drawingTypeSummaries","swiperConfig","slidesOffsetAfter","slidesOffsetBefore","navigation","loop","getProjectDrawingTypeSummary","DrawingSummaryComponent","_title","replace","DrawingTableDrawingTargetDateComponent","getTypeDrawingTargetDate","DrawingTableRequestDrawingComponent","drafterAdapter","drafters","requestDrawingForm","getDrafters","drafter_id","drawing_id","drawingId","type_id","submitData","createRequest","processForm","DrawingTableComponent","projectConfigService","drawings","isGettingConfig","onFormsSubmit","view","editDrawingRef","action","openDrawing","nextDrawingType","getNextTypeDrawing","submitDrawingRef","index","find","resubmitDrawingRef","showDrawing","drawing_approved_date","drawing_rejected_date","drawing_resubmission_date","drawing_as_built_target_date","drawing_revision_no","typeDrawing","type_drawings","typeDrawingTargetDate","type_drawing_target_dates","project_drawing_type_id","statusClass","condition","length","DrawingComponent","service","zone","isTableLoading","shopDrawing","asBuilt","_drawingTableOptions","perPage","initializeData","getDrawings","drawingTableOptions","shopDrawingSummary","asBuiltDrawingSummary","projectConfig","getProjectDrawingTypes","refreshData","drawingSummary","successDialog","type_drawing_status","uploaded_by","query","currentUrl","pageSize","drawingFiltersDialog","projectSettingsDialog","onSaveSuccess","options","searchDrawings","DrawingModule","EditDrawingComponent","file","_generateFormControl","getDrawingData","patchValue","deleteDrawing","dismiss","deleteSuccess","updateDrawing","updatedDrawing","validators","disabled","handleDrawingDelete","LatestTransmittalFormComponent","getLatestTransmittalFile","latestTransmittalForm","clientRefFormat","ref_no","ProjectConfigurationItemComponent","titleCasePipe","itemFormControl","onDelete","isEditing","editInput","cancelEdit","_itemValue","parsedValue","titleCaseVal","ProjectConfigurationComponent","newDrawingTypes","isDeleting","getProjectConfig","config","projectConfiguration","splice","deleteProjectDrawingType","previousContainer","container","previousIndex","currentIndex","generateUniqueId","newItem","max","updateProjectDrawingTypes","addNewDrawingTypeItem","saveConfiguration","ProjectDrawingTypeItemComponent","onDrawingTypeItemSave","onDrawingTypeDelete","hex","DrawingService","tenderDrawingAdapter","audits","SubmitShopDrawingComponent","drawingRef","isView","drawingRevisionValue","drawingRevisionValidators","editValidators","drawingTransmittalNo","drawing_client_transmittal_no","fileInputValidators","drawing_submission_comment","drawing_submission_date","submitted_transmittal_form","drawing_client_transmittal_file_upload","approver","approved_by","drawing_returned_date","previousStatus","drawing_transmittal_upload","transmittal_form","file_path","drawing_client_transmittal_file","actualSubmissionDate","returnedDate","dateKey","submitted","resubmit","drawing_transmittal_no","drawing_next_type_target_date","submitTypeDrawing","transmittalFile","drawingStatus","saveDrawing","handleCancelClicked","HistoryFiltersComponent","d","include","_value","HistoryModule","VersionedFieldComponent","textarea","displayFn","current","_current","displayValue","TenderDrawingHistoryComponent","valueToDate","hasNewValues","time","auditedBy","events","eventsUnique","employees","employeeUnique","TenderDrawingComponent","_filterValue","parent","getHistoryDates","apiDate","parts","split","parseInt","TypeDrawingHistoryComponent","drawing_resubmission_comment","drawing_rejected_comment","drawing_approved_comment","TypeDrawingComponent","HomeComponent","projectsService","projects","projectsDataSource","currentSort","active","navigate","_sortKey","orderBy","HomeModule","AppHeaderComponent","menuClicked","onMenuClick","BreadcrumbsComponent","activatedRoute","breadcrumbs","buildBreadCrumb","root","routeConfig","breadcrumb","method","lastRoutePart","pop","isDynamicRoute","startsWith","snapshot","paramName","nextUrl","newBreadcrumbs","firstChild","LayoutModule","MainLayoutComponent","menuService","sbheLink","sbhePmUrl","setMenu","setMenuStatus","boolean","toggleMenu","handleClick","ProjectsComponent","getProjects","ProjectsModule","AssignDrawingsComponent","taskDragLists","isSaving","onAssignSuccess","prepareSaveDrawingAssignmentsData","assignRequests","saveDrawingAssignments","DrafterTasksComponent","onEditFormSubmit","drafterDrawingRequests","fetchingRequests","getDrafterTasks","_drafter","viewRequestDialog","restoreFocus","onApproveSuccess","onRejectSuccess","editDialogRef","requestDrawingActionRef","showRequestDrawingActionRef","filterRequests","DraftersComponent","drafterClicked","DrawingRequestComponent","drawingRequestForm","editRequest","confirmApproveDrawing","confirmRejectDrawing","FeaturedDraftersComponent","onDraftersLoaded","FeaturedRequestsComponent","requests","getRequests","reverse","RequestDrawingActionComponent","drawingReqeustService","approveDrawing","rejectDrawing","RequestDrawingComponent","RequestDrawingsComponent","selectedDrafter","isDrafterTasksLoading","assignDialog","onAssignDrawingsSuccess","getAllData","featuredDrafters","featuredReqests","drafterTasks","draftersDialog","handleDrafterClicked","requestsDialog","message","alertMessage","openRequests","openAssignDrawings","openDrafters","handleDraftersLoaded","handleEditRequestFormSubmit","RequestDrawingsModule","RequestsComponent","AjaxAutocompleteComponent","_focusMonitor","onSearchTermInputChange","onOptionSelected","searchTermInput","term","option","handleOptionSelected","ClientSelectComponent","selectedClient","autocomplete","search","debounce","getClients","DrawingSelectComponent","shouldShowOptions","sbheDrawings","clientDrawings","selectedDrawingId","selectedDrawing","sbhe_drawings","client_drawings","getTenderDrawings","UploadInputComponent","selectedFile","fileInput","click","chooseFile","valueNotEqualTo","match","control","SharedModule","ShopDrawingComponent","getShopDrawing","ShopDrawingModule","SHOP_DRAWING_ROUTES","TENDER_DRAWING_ROUTES","getDrawing","TenderDrawingModule","AddTransmittalFormItemComponent","initialData","sn","currentSerialNo","referenceNo","qty","addTransmittalFormItem","CreateTransmittalFormComponent","transmittalFormService","submitting","defaultValues","attn","for","remarks","refNo","transmittalForm","purpose","useSaved","formFor","findIndex","reason","formItems","serial_no","reference_no","quantity","signatureUri","dataURItoBlob","client_id","created_by","createTransmittalForm","recentlyCreatedTransmittalFile","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","handleBack","openFile","TransmittalFormItemComponent","transmittalFormItem","TransmittalFormComponent","dataSource","useSavedSignature","signaturePadOptions","triggerOnChange","signatureLink","table","renderRows","addItemDialog","clearSignature","shouldRequireSignature","signaturePad","toDataURL","clear","TransmittalFormsComponent","TransmittalFormsModule","TRANSMITTAL_FORMS_ROUTES","getTypeDrawing","TypeDrawingModule","TYPE_DRAWING_ROUTES","UnauthorizedComponent","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DrawingComponent } from './drawing/drawing.component';\nimport { DrawingModule } from './drawing/drawing.module';\nimport { HomeComponent } from './home/home.component';\nimport { HomeModule } from './home/home.module';\nimport { AuthGuard } from './core/services/auth-guard.service';\nimport { RequestDrawingsModule } from './request-drawings/request-drawings.module';\nimport { RequestDrawingsComponent } from './request-drawings/request-drawings.component';\nimport { AppComponent } from './app.component';\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'project/:id',\n    component: DrawingComponent,\n    canActivate: [\n      AuthGuard,\n    ]\n  },\n  {\n    path: 'drawing-requests',\n    component: RequestDrawingsComponent,\n    canActivate: [\n      AuthGuard,\n    ]\n  },\n  {\n    path: 'unauthorized',\n    component: UnauthorizedComponent,\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes), \n    DrawingModule, \n    HomeModule,\n    RequestDrawingsModule\n  ],\n  exports: [RouterModule],\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './core/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'drawing-web';\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n  ) {}\n\n  async ngOnInit() {\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    this.userService.checkUser();\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from './layout/layout.module';\n\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './core/core.module';\nimport { MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { AuthModule } from './auth/auth.module';\nimport { AuthGuard } from './core/services/auth-guard.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { DrawingCategoriesModule } from './drawing-categories/drawing-categories.module';\n// import { ColorPickerModule } from \"ngx-color-picker\";\nimport { ColorSketchModule } from 'ngx-color/sketch';\nimport { SwiperModule, SWIPER_CONFIG, SwiperConfigInterface } from 'ngx-swiper-wrapper';\nimport { SignaturePadModule } from \"angular2-signaturepad\";\n\nconst DEFAULT_SWIPER_CONFIG: SwiperConfigInterface = {\n  direction: 'horizontal',\n  slidesPerView: 'auto'\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    UnauthorizedComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    SweetAlert2Module.forRoot(),\n    DashboardModule,\n    HttpClientModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    CoreModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthModule,\n    FlexLayoutModule,\n    ContentLoaderModule,\n    DrawingCategoriesModule,\n    MatAutocompleteModule,\n    ColorSketchModule,\n    SwiperModule,\n    SignaturePadModule,\n  ],\n  providers: [\n    AuthGuard,\n    {provide: MAT_DATE_LOCALE, useValue: 'en-SG'},\n    {\n      provide: SWIPER_CONFIG,\n      useValue: DEFAULT_SWIPER_CONFIG,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DrawingService } from '../drawing/shared/drawing.service';\nimport { TypeDrawingService } from '../core/services/type-drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-as-built-drawing',\n  templateUrl: './as-built-drawing.component.html',\n  styleUrls: ['./as-built-drawing.component.scss']\n})\nexport class AsBuiltDrawingComponent implements OnInit {\n  asBuiltDrawing;\n\n  get drawingTitle(): string {\n    return this.asBuiltDrawing && this.asBuiltDrawing.drawing_no ? this.asBuiltDrawing.drawing_no : this.asBuiltDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private typeDrawingService: TypeDrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.typeDrawingService.getAsBuiltDrawing(id);\n    })).subscribe(res => {\n      this.asBuiltDrawing = res.data;\n    });\n  }\n\n}\n","<h1 *ngIf='asBuiltDrawing'>As Built Drawing - {{ drawingTitle }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AsBuiltDrawingComponent } from './as-built-drawing.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HistoryModule } from '../history/history.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [AsBuiltDrawingComponent],\n  imports: [\n    LayoutModule,\n    CommonModule,\n    HistoryModule,\n    RouterModule,\n  ]\n})\nexport class AsBuiltDrawingModule { }\n","import { TypeDrawingComponent as TypeDrawingHistoryComponent } from '../history/type-drawing/type-drawing.component';\nimport { AsBuiltDrawingComponent } from './as-built-drawing.component';\n\n\nexport const AS_BUILT_DRAWINGS_ROUTES = {\n  path: 'as-built-drawings',\n  data: {\n    type: 'as-built'\n  },\n  children: [\n    {\n      path: ':drawingId',\n      component: AsBuiltDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TypeDrawingHistoryComponent,\n          data: {\n            type: 'as-built'\n          },\n        }\n      ]\n    }\n  ]\n}\n","import { Routes, RouterModule } from \"@angular/router\";\nimport { AuthComponent } from './auth.component';\nimport { NgModule } from '@angular/core';\nimport { NoAuthGuard } from './no-auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: AuthComponent,\n    canActivate: [NoAuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    NoAuthGuard\n  ]\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  loginForm;\n  loading: Boolean = false\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n  ) { \n    this.loginForm = this.formBuilder.group({\n      username: '',\n      password: '',\n    })\n  }\n\n  ngOnInit(): void {\n    // this.userService.isAuthenticated.subscribe(\n    //   (authenticated) => {\n    //     if(authenticated) {\n    //       this.router.navigateByUrl('/')\n    //     }\n    //   }\n    // )\n  }\n\n  onFormSubmit($event, loginDetails): void {\n    $event.preventDefault();\n  \n    this.loading = true\n\n    this.userService.attemptLogin(loginDetails).subscribe(res => {\n      this.loading = false\n      this.router.navigateByUrl('/')\n    }, err => {\n      this.loading = false\n      console.log(err)\n    });\n  }\n\n}\n","<div class=\"login\">\n  <div class=\"login-form\">\n    <div class=\"login-form__logo\">\n      <img src=\"../../assets/logo.png\" alt=\"SBHE\">\n    </div>\n    <div class=\"login-form__form\">\n      <form [formGroup]='loginForm' (ngSubmit)='onFormSubmit($event, loginForm.value)'>\n        <mat-form-field class='login-form__form-control'>\n          <mat-label>Username</mat-label>\n          <mat-icon matPrefix>person</mat-icon>\n          <input matInput type=\"text\" formControlName='username'>\n        </mat-form-field>\n        <mat-form-field class='login-form__form-control'>\n          <mat-label>Password</mat-label>\n          <mat-icon matPrefix>lock</mat-icon>\n          <input matInput type=\"password\" formControlName='password'>\n        </mat-form-field>\n        <button mat-raised-button color='primary' [disabled]='loading'>\n          Login\n        </button>\n      </form>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './auth.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { UserService } from '../core/services/user.service';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { NoAuthGuard } from './no-auth-guard.service';\n\n\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    UserService,\n    NoAuthGuard,\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from \"@angular/core\";\nimport { \n  CanActivate, \n  ActivatedRouteSnapshot, \n  RouterStateSnapshot, \n  Router \n} from '@angular/router';\nimport { UserService } from '../core/services/user.service';\nimport { take, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class NoAuthGuard implements CanActivate{\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.isAuthenticated.pipe(map(authenticated => {\n      if(!authenticated) return true;\n\n      this.router.navigateByUrl('/');\n      return false;\n     }));\n  }\n}","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-clients-filters',\n  templateUrl: './clients-filters.component.html',\n  styleUrls: ['./clients-filters.component.scss']\n})\nexport class ClientsFiltersComponent implements OnInit {\n  searchTerm: FormControl = new FormControl();\n\n  @Output() onSearchTermChange: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this.searchTerm.valueChanges.pipe(debounceTime(700)).subscribe(value => {\n      this.onSearchTermChange.emit(value);\n    });\n  }\n\n  ngOnInit(): void {}\n\n}\n","<div class=\"requests-table-filters\">\n  <div\n    fxLayout='row'\n    fxLayoutAlign='space-between end'\n  >\n    <div\n      fxFlex='0 0 25%'\n    >\n      <mat-form-field class='request-table-filters__search-term form-control' appearance='outline'>\n        <mat-label>Search</mat-label>\n        <input matInput [formControl]='searchTerm' type='text' name='search_term'/>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { Client } from 'src/app/core/models/client';\n\n@Component({\n  selector: 'app-clients-form',\n  templateUrl: './clients-form.component.html',\n  styleUrls: ['./clients-form.component.scss'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ClientsFormComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => ClientsFormComponent),\n      multi: true\n    }\n  ],\n})\nexport class ClientsFormComponent implements OnInit, ControlValueAccessor {\n  clientForm: FormGroup;\n  _client: Client = {} as Client;\n\n  @Input() set client(client: Client) {\n    this._client = client;\n    if (client) {\n      const value = {\n        refFormat: client.refFormat ? client.refFormat : '',\n        country: client.country ? client.country : '',\n        city: client.city ? client.city : '',\n        zipCode: client.zipCode ? client.zipCode : '',\n        address: client.address ? client.address : ''      \n      }\n\n      this.clientForm.setValue(value)\n    }\n  }\n\n  get client(): Client {\n    return this._client;\n  }\n\n  @Input() loading: boolean;\n\n  get value(): ClientFormValues {\n    return this.clientForm.value;\n  }\n\n  get refFormat(): string {\n    return this.clientForm.get('refFormat').value ? this.clientForm.get('refFormat').value  : '';\n  }\n\n  set value(value: ClientFormValues) {\n    this.clientForm.setValue(value);\n    this.onChange(value);\n    this.onTouched();\n  }\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { \n    this.clientForm = this.formBuilder.group({\n      refFormat: new FormControl(this.extractClientValue(\"refFormat\"), [Validators.required]),\n      city: new FormControl(this.extractClientValue(\"city\"), [Validators.required]),\n      country: new FormControl(this.extractClientValue(\"country\"), [Validators.required]),\n      zipCode: new FormControl(this.extractClientValue(\"zipCode\"), [Validators.required]),\n      address: new FormControl(this.extractClientValue(\"address\"), [Validators.required]),\n    });\n\n    this.clientForm.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n\n    if (value === null) {\n      this.clientForm.reset();\n    }\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if(isDisabled) {\n      this.clientForm.disable();\n    } else {\n      this.clientForm.enable();\n    }\n  }\n\n  validate(_: FormControl) {\n    return this.clientForm.valid ? null : { client: { valid: false, } }\n  }\n\n  extractClientValue(key) {\n    return this.client && this.client[key] ? this.client[key] : '';\n  }\n}\n\nexport interface ClientFormValues {\n  name?: string;\n  address: string;\n  country: string;\n  city: string;\n  zipCode: string;\n  refFormat: string;\n}","<div class='client-form' [formGroup]='clientForm'>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between flex-start'\n  >\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Street Address: </mat-label>\n        <input matInput formControlName='address'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>City: </mat-label>\n        <input matInput formControlName='city'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n  </div>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between flex-start'\n  >\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Country: </mat-label>\n        <input matInput formControlName='country'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n    <div\n      fxFlex='0 0 calc(50% - 8px)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Zip Code: </mat-label>\n        <input matInput formControlName='zipCode'>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n  </div>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between flex-start'\n  >\n  </div>\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n  >\n    <div\n      fxFlex='0 0 calc(50%)'\n    >\n      <mat-form-field class='form-control' *ngIf='!loading'>\n        <mat-label>Reference No. Format: </mat-label>\n        <input matInput formControlName='refFormat'>\n        <mat-hint>Sample Reference No: {{ refFormat ? refFormat + '01' : '-' }}</mat-hint>\n      </mat-form-field>\n      <content-loader [style]='{width: \"100%\"}' height=\"40\" *ngIf='loading'>\n        <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n      </content-loader>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormControl } from '@angular/forms';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { map, switchMap, concatMap } from 'rxjs/operators';\nimport { Project } from '../core/models/project';\nimport { Client } from '../core/models/client';\nimport { ClientsService } from '../core/services/clients.service';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n  project: Project;\n  successMessage: string = '';\n  client: Client;\n  clientForm: FormControl;\n  loading: boolean = false;\n  isSubmitting: boolean = false;\n\n  @ViewChild('successConfirmation') successConfirmation: SwalComponent;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private projectService: ProjectsService,\n    private clientService: ClientsService,\n  ) { \n    this.clientForm = new FormControl();\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.route.paramMap.pipe(\n      concatMap((res: ParamMap) => {\n        const projectId = res.get('id');\n        return this.projectService.getProject(projectId);\n      }),\n      concatMap((project) => {\n        this.project = project;\n        return this.projectService.getClient(project.id);\n      })\n    ).subscribe(client => {\n      this.client = client;\n      this.loading = false;\n    });\n  }\n\n  handleFormSubmit() {\n    const formValue = this.clientForm.value;\n\n    const body = {\n      project_id: this.project.id,\n      ref_format: formValue.refFormat,\n      address: formValue.address,\n      city: formValue.city,\n      country: formValue.country,\n      zip_code: formValue.zipCode,\n    }\n\n    this.isSubmitting = true;\n\n    this.clientService.addClient(body).subscribe(res => {\n      this.isSubmitting = false;\n      this.successConfirmation.fire();\n    });\n  }\n}\n","<div class=\"clients\">\n  <h1 *ngIf='client'>{{ client.name }}</h1>\n  <div class=\"header-loader\" *ngIf='!client'>\n    <content-loader [style]='{width: \"300px\"}' height=\"100\">\n      <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"40px\" />\n    </content-loader>\n  </div>\n  <mat-card>\n    <mat-card-content>\n      <form (submit)='handleFormSubmit()'>\n        <div class=\"clients__form\">\n          <app-clients-form \n            [formControl]='clientForm'\n            [client]='client'\n            [loading]='loading'\n          >\n          </app-clients-form>\n        </div>\n        <button mat-raised-button color='primary' [disabled]='clientForm.invalid || isSubmitting'>Submit</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n>\n</swal>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientsComponent } from './clients.component';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { ClientsService } from '../core/services/clients.service';\nimport { ClientsFiltersComponent } from './clients-filters/clients-filters.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ClientsFormComponent } from './clients-form/clients-form.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { MatMenuModule } from '@angular/material/menu';\n\n\n\n@NgModule({\n  declarations: [ClientsComponent, ClientsFiltersComponent, ClientsFormComponent],\n  imports: [\n    CommonModule,\n    AppLayoutModule,\n    ContentLoaderModule,\n    MatCardModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    SweetAlert2Module,\n    ContentLoaderModule,\n  ],\n  providers: [\n    ClientsService,\n  ],\n})\nexport class ClientsModule { }\n","import { Injectable } from '@angular/core';\nimport { ClientBuilder } from '../builders/client-builder';\nimport { Client } from '../models/client';\n\n// TODO: Add Project Relationship.\n@Injectable()\nexport class ClientAdapter {\n  adapt(request): Client  {\n    const {\n      id,\n      client_name: name,\n      city,\n      address,\n      country,\n      zip_code,\n      ref_format,\n    } = request;\n    \n    const client = new ClientBuilder(id, name)\n      .setAddress(address)\n      .setRefFormat(ref_format)\n      .setCity(city)\n      .setCountry(country)\n      .setZipCode(zip_code)\n      .build();\n\n    return client;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { DrafterRequestsSummary } from '../models/drafter-requests-summary';\n\n@Injectable()\nexport class DrafterRequestsSummaryAdapter {\n  adapt(res): DrafterRequestsSummary {\n    return {\n      assigned: res.assigned,\n      completed: res.completed,\n      rejected: res.rejected,\n      approved: res.approved,\n      total: res.total,\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { Drafter } from '../models/drafter';\n\n@Injectable()\nexport class DrafterAdapter {\n  adapt(request): Drafter {\n    const {\n      first_name,\n      last_name,\n      avatar,\n      id,\n      drawing_requests,\n      status,\n    } = request;\n\n    const drafter = new Drafter({\n      id,\n      avatar,\n      drawingRequests: drawing_requests,\n      firstName: first_name,\n      lastName: last_name,\n      status,\n    });\n\n    return drafter;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { DrawingCategory } from '../models/drawing-category';\n\n@Injectable()\nexport class DrawingCategoryAdapter {\n  adapt(request): DrawingCategory {\n    const {\n      category_name\n    } = request;\n\n    return {\n      id: request.id,\n      name: category_name,\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { Drafter } from '../models/drafter';\nimport { User } from '../services/user.service';\nimport { DrawingRequestBuilder } from '../builders/drawing-request-builder';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { TenderDrawing } from '../models/tender-drawing';\nimport { ProjectDrawingType } from '../models/project-drawing-type';\n\n@Injectable()\nexport class DrawingRequestAdapter {\n  adapt(request) {\n    const {\n      assigned_to: assignedToUser,\n      requested_by: requestedByUser,\n      subject,\n      request_date,\n      target_date,\n      status,\n      drawing_file,\n      completed_drawing_file,\n      drawing,\n      id,\n      comments,\n      drawing_type,\n    } = request;\n\n    const assignedTo = new Drafter({\n      id: assignedToUser.id,\n      firstName: assignedToUser.first_name,\n      lastName: assignedToUser.last_name,\n      status: 'IN',\n      drawingRequests: [],\n      avatar: ''\n    });\n\n    const tenderDrawing: TenderDrawing = {\n      no: drawing ? drawing.drawing_no : '',\n      title: drawing ? drawing.drawing_title : '',\n      targetDate: drawing ? drawing.drawing_target_date : '',\n      titleDate: drawing ? drawing.drawing_title_date : '',\n      drawingFile: drawing ? drawing.drawing_file_upload : '',\n      category: drawing && drawing.category ? drawing.category.category_name : '',\n      projectId: drawing ?  drawing.project_id : '',\n      employeeId: drawing ? drawing.employee_id : '',\n      id: drawing ? drawing.id : '',\n      currentDrawingNo: drawing ? drawing.current_drawing_no : '',\n      projectName: drawing && drawing.project ? drawing.project.title : '',\n    }\n\n    const requestedBy = new User({\n      id: requestedByUser.id,\n      employeeId: requestedByUser.id,\n      avatar: requestedByUser.avatar,\n      roleId: requestedByUser.role_id,\n      companyId: requestedByUser.companyId,\n      firstName: requestedByUser.first_name,\n      lastName: requestedByUser.last_name\n    });\n\n    const drawingType = new ProjectDrawingType(\n      drawing_type ? drawing_type.id : '',\n      drawing_type ? drawing_type.project_id : '',\n      drawing_type ? drawing_type.type : '',\n    ).setColor(drawing_type ? drawing_type.color : '' )\n    .setOrder(drawing_type ? drawing_type.order : '' );\n\n    const drawingRequest = new DrawingRequestBuilder(\n      id,\n      subject,\n      request_date,\n      target_date,\n    )\n    .setAssignedTo(assignedTo)\n    .setStatus(status)\n    .setRequestedBy(requestedBy)\n    .setDrawing(tenderDrawing)\n    .setDrawingFile(drawing_file)\n    .setCompletedDrawingFile(completed_drawing_file)\n    .setComments(comments)\n    .setDrawingType(drawingType)\n    .build();\n\n    return drawingRequest;\n  }\n}\n","export * from './client-adapter'\nexport * from './project-adapter'","import { Injectable } from \"@angular/core\";\nimport { Project } from '../models/project';\n\n@Injectable()\nexport class ProjectAdapter {\n  adapt(request): Project {\n    const {\n      id,\n      title,\n      client_name,\n      client_address,\n      location,\n      status,\n      percentage,\n      manpower,\n      start_date,\n      end_date,\n    } = request;\n\n    const project: Project =  {\n      id,\n      title,\n      location,\n      status,\n      percentage,\n      manpower,\n      startDate: start_date,\n      endDate: end_date,\n      clientName: client_name,\n      clientAddress: client_address,\n    }\n\n    return project;\n  }\n}","import { Injectable } from '@angular/core';\nimport { TenderDrawing } from '../models/tender-drawing';\n\n@Injectable()\nexport class TenderDrawingAdapter {\n  adapt(request) {\n    const {\n      id,\n      drawing_no,\n      drawing_title,\n      current_drawing_no,\n      drawing_target_date,\n      drawing_title_date,\n      drawing_file_upload,\n      employee_id,\n      project_id,\n      category: { category_name },\n      employee,\n      project,\n    } = request;\n\n    const tenderDrawing: TenderDrawing =  {\n      no: drawing_no,\n      title: drawing_title,\n      currentDrawingNo: current_drawing_no,\n      id: id,\n      targetDate: drawing_target_date,\n      titleDate: drawing_title_date,\n      drawingFile: drawing_file_upload,\n      category: category_name,\n      employeeId: employee_id,\n      projectId: project_id,\n      employeeName: employee ? `${employee.first_name} ${employee.last_name}` : '',\n      projectName: project ? project.title : '',\n    }\n\n    return tenderDrawing;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ApiService {\n  constructor(\n    private http: HttpClient\n  ){}\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${environment.api_url}${path}`, { params })\n  }\n\n  post(path: string, body: Object = {}): Observable<any> {\n    const formData = this.createFormData(body);\n\n    return this.http.post(\n      `${environment.api_url}${path}`,\n      formData,\n    )\n  }\n\n  put(path: string, body: Object = {}): Observable<any> {\n    const formData = new FormData()\n\n    Object.keys(body).forEach((value, key) => {\n      formData.append(value, body[value])\n    })\n    \n    return this.http.put(\n      `${environment.api_url}${path}`,\n      formData,\n    )\n  }\n\n  delete(path: string): Observable<any> {\n    return this.http.delete(`${environment.api_url}${path}`)\n  }\n\n  createFormData(object: Object, form?: FormData, namespace?: string): FormData {\n    const formData = form || new FormData();\n\n    for (let property in object) {\n      if (!object.hasOwnProperty(property) && object[property] == null && object[property] === undefined) {\n        continue;\n      }\n      const formKey = namespace ? `${namespace}[${property}]` : property;\n      if (object[property] instanceof Date) {\n        formData.append(formKey, object[property].toISOString());\n      } else if (typeof object[property] === 'object' && !(object[property] instanceof File) && !(object[property] instanceof Blob)) {\n        this.createFormData(object[property], formData, formKey);\n      } else {\n        formData.append(formKey, object[property]);\n      }\n    }\n    return formData;\n  }\n}","import { Client } from '../models/client';\n\nexport class ClientBuilder {\n  private _id: string;\n  private _name: string;\n  private _address: string;\n  private _city: string;\n  private _country: string;\n  private _zipCode: string;\n  private _refFormat: string;\n\n  constructor(\n    id: string,\n    name: string,\n  ) {\n    this._id = id;\n    this._name = name;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  setId(id: string): ClientBuilder {\n    this._id = id;\n\n    return this;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  setName(name: string): ClientBuilder {\n    this._name = name;\n\n    return this;\n  }\n\n  get address(): string {\n    return this._address;\n  }\n\n  setAddress(address: string): ClientBuilder {\n    this._address = address;\n\n    return this;\n  }\n\n  get refFormat(): string {\n    return this._refFormat;\n  }\n\n  setRefFormat(format: string): ClientBuilder {\n    this._refFormat = format;\n\n    return this;\n  }\n\n  get city(): string {\n    return this._city;\n  }\n\n  setCity(city: string): ClientBuilder {\n    this._city = city;\n\n    return this;\n  }\n\n  get country(): string {\n    return this._country;\n  }\n\n  setCountry(country: string): ClientBuilder {\n    this._country = country;\n\n    return this;\n  }\n\n  get zipCode(): string {\n    return this._zipCode;\n  }\n\n  setZipCode(zipCode: string): ClientBuilder {\n    this._zipCode = zipCode;\n\n    return this;\n  }\n\n  build(): Client {\n    return new Client(this);\n  }\n}","import { User } from '../services/user.service';\nimport { DrawingRequest } from '../models/drawing-request';\nimport { Drafter } from '../models/drafter';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { TenderDrawing } from '../models/tender-drawing';\nimport { ProjectDrawingType } from '../models/project-drawing-type';\n\n\nexport class DrawingRequestBuilder {\n  private _id: string;\n  private _subject: string;\n  private _requestDate: string;\n  private _targetDate: string;\n  private _assignedTo: Drafter;\n  private _status: DrawingRequestStatus;\n  private _requestedBy: User;\n  private _drawing: TenderDrawing;\n  private _drawingFile: string;\n  private _completedDrawingFile: string;\n  private _comments: string;\n  private _drawingType: ProjectDrawingType;\n\n  constructor(\n    id: string,\n    subject: string,\n    requestDate: string,\n    targetDate: string,\n  ) {\n    this._id = id;\n    this._subject = subject;\n    this._requestDate = requestDate;\n    this._targetDate = targetDate; \n    this._status = 'Assigned';\n  }\n\n  build() {\n    return new DrawingRequest(this);\n  }\n  \n  get id(): string {\n    return this._id;\n  }\n\n  get subject(): string {\n    return this._subject;\n  }\n\n  get requestDate(): string {\n    return this._requestDate;\n  }\n\n  get targetDate(): string {\n    return this._targetDate;\n  }\n  \n  get assignedTo(): Drafter {\n    return this._assignedTo;\n  }\n\n  get status(): DrawingRequestStatus {\n    return this._status;\n  }\n\n  get requestedBy(): User {\n    return this._requestedBy;\n  }\n\n  get drawingFile(): string {\n    return this._drawingFile;\n  }\n\n  get drawing(): TenderDrawing {\n    return this._drawing;\n  }\n\n  get completedDrawingFile(): string {\n    return this._completedDrawingFile;\n  }\n\n  get comments(): string {\n    return this._comments;\n  }\n\n  get drawingType(): ProjectDrawingType {\n    return this._drawingType;\n  }\n\n  setAssignedTo(drafter: Drafter) {\n    this._assignedTo = drafter;\n    return this;\n  }\n\n  setStatus(status: DrawingRequestStatus) {\n    this._status = status;\n\n    return this;\n  }\n\n  setRequestedBy(user: User) {\n    this._requestedBy = user;\n\n    return this;\n  }\n\n  setDrawingFile(drawingFile: string) {\n    this._drawingFile = drawingFile;\n    return this;\n  }\n\n  setDrawing(drawing: TenderDrawing) {\n    this._drawing = drawing;\n\n    return this;\n  }\n\n  setCompletedDrawingFile(drawingFile: string) {\n    this._completedDrawingFile = drawingFile;\n\n    return this;\n  }\n\n  setComments(comments: string) {\n    this._comments = comments;\n\n    return this;\n  }\n\n  setDrawingType(drawingType: ProjectDrawingType) {\n    this._drawingType = drawingType;\n\n    return this;\n  }\n}\n\nexport type DrawingRequestStatus = \"Completed\" | \"Assigned\";\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpTokenInterceptor, ErrorInterceptor } from './interceptors';\nimport { ApiService } from './api.service';\nimport { ProjectsService } from './services/projects.service';\nimport { JwtService } from './services/jwt.service';\nimport { DrawingRequestAdapter } from './adapters/drawing-request-adapter';\nimport { ClientAdapter } from './adapters/client-adapter';\nimport { TransmittalFormService } from './services/transmittal-form.service';\nimport { TenderDrawingAdapter } from './adapters/tender-drawing-adapter';\nimport { TypeDrawingService } from './services/type-drawing.service';\nimport { ProjectAdapter } from './adapters';\nimport { DrawingCategoryAdapter } from './adapters/drawing-category-adapter';\nimport { DrafterRequestsSummaryAdapter } from './adapters/drafter-requests-summary-adapter';\nimport { DrafterRequestsService } from './services/drafter-requests.service';\nimport { ProjectConfigurationService } from './services/project-configuration.service';\nimport { MenuService } from './services/menu-service';\nimport { DrafterAdapter } from './adapters/drafter.adapter';\nimport { ProjectCategoryService } from './services/project-category.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpTokenInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    ApiService,\n    ProjectsService,\n    TypeDrawingService,\n    TransmittalFormService,\n    DrafterRequestsService,\n    JwtService,\n    MenuService,\n    ProjectConfigurationService,\n    DrawingRequestAdapter,\n    TenderDrawingAdapter,\n    ClientAdapter,\n    ProjectAdapter,\n    DrawingCategoryAdapter,\n    DrafterRequestsSummaryAdapter,\n    DrafterAdapter,\n    ProjectCategoryService,\n  ],\n  declarations: []\n})\nexport class CoreModule {}","export enum DrawingStatus {\n  toSubmit  = 'To Submit',\n  submitted = 'Submitted',\n  resubmit  = 'ReSubmitted',\n  approved  = 'Approved',\n  rejected  = 'Rejected',\n}","export enum TransmittalFormPurposes {\n  'for information' = 0,\n  'for endorsement' = 1,\n  'for action' = 2,\n  'for review' = 3,\n  'for record' = 4,\n  'for approval' = 5,\n  'for distribution' = 6,\n  'other' = 7,\n}","export enum UserTypes {\n  Superadmin = 1,\n  Director = 2,\n  ProjectManager = 3,\n  AssistantProjectManager = 4,\n  Engineer = 5,\n  Supervisor = 6,\n  Worker = 7,\n  Safety = 8,\n  QuantitySurveyor =  9,\n  Coordinator = 10,\n  Logistic = 11,\n  Driver = 12,\n  Procurement = 13,\n  Drafter = 14,\n}\n","export * from './api.service'\nexport * from './core.module'","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { UserService } from '../services/user.service';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private userService: UserService, private router: Router) {}\n  \n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        this.userService.logout();\n        this.router.navigateByUrl('/login', { queryParams: { session_expired: 1 }});\n      }\n\n      return throwError(err);\n    }));\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JwtService } from '../services/jwt.service';\n\n@Injectable()\nexport class HttpTokenInterceptor implements HttpInterceptor {\n  constructor(private jwtService: JwtService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const headersConfig = {\n      // 'Content-Type': 'application/json',\n      'Accept' : 'application/json'\n    }\n\n    const token = this.jwtService.getToken();\n\n    if (token) {\n      headersConfig['Authorization'] = `Bearer ${token}`\n    }\n\n    const request = req.clone({ setHeaders: headersConfig });\n\n    return next.handle(request)\n  }\n}","export * from './http.token.interceptors'\nexport * from './error.interceptor'","import { User } from '../services/user.service';\nimport { formatDate, DatePipe } from '@angular/common';\nimport _ from 'lodash'\n\nexport class AuditTrail {\n  public drawingTitle: string;\n  public drawingNo: string;\n  public date: string;\n  public doneBy: User;\n  public oldValues: any;\n  public newValues: any;\n  public event: AuditEvents;\n\n  constructor(\n    drawingTitle: string,\n    drawingNo: string,\n    date: string,\n    doneBy: User,\n    event: AuditEvents,\n    oldValues: Object | Array<any>,\n    newValues: Object | Array<any>,\n  ) {\n    this.drawingTitle = drawingTitle;\n    this.drawingNo = drawingNo;\n    this.date = date;\n    this.doneBy = doneBy;\n    this.event = event;\n    this.oldValues = oldValues;\n    this.newValues = newValues;\n  }\n\n  public getChangedKeys(): Array<string> {\n    let changedKeys = [];\n\n    if(this.event === AuditEvents.CREATED) {\n      changedKeys = [];\n    } else {\n      changedKeys = Object.keys(this.oldValues)\n    }\n\n    return changedKeys\n  }\n\n  public displayChangedKeys(): string {\n    const changedKeys = this.getChangedKeys().map(key => {\n      return _.startCase(key);\n    });\n\n    return changedKeys.join(', ');\n  }\n}\n\nexport enum AuditEvents {\n  UPDATED = 'updated',\n  CREATED = 'created',\n}","import { ClientBuilder } from '../builders/client-builder';\n\nexport class Client {\n  id: string;\n  name: string;\n  address: string;\n  refFormat: string;\n  city: string;\n  country: string;\n  zipCode: string;\n\n  constructor(\n    private clientBuilder: ClientBuilder\n  ) {\n    this.id = clientBuilder.id;\n    this.name = clientBuilder.name;\n    this.address = clientBuilder.address;\n    this.refFormat = clientBuilder.refFormat;\n    this.zipCode = clientBuilder.zipCode;\n    this.country = clientBuilder.country;\n    this.city = clientBuilder.city;\n  }\n}","import { environment } from 'src/environments/environment';\n\nexport class Drafter {\n  public firstName: string;\n  public lastName: string;\n  public drawingRequests: Array<any>;\n  public status: string;\n  public id: string;\n  public avatar;\n\n  get completedTasks(): Array<any> {\n    return this.drawingRequests.filter(request => {\n      return request.status === 'Completed' || request.status === 'Approved'\n    })\n  }\n\n  get fullname(): string {\n    return `${this.firstName} ${this.lastName}`\n  }\n\n\n  get avatarLink(): string {\n    if(this.avatar) {\n      return `${environment.s3_url}${this.avatar.image}`;\n    }\n\n    return `${environment.s3_url}Employee/Avatar/_1551750608118_1184684_log_in_sign_up_upload_clipart_man_avatar.png`\n  }\n\n\n  constructor(\n    public drafterDetails: DrafterDetails,\n  ) {\n    const {\n      id,\n      firstName,\n      lastName,\n      status,\n      drawingRequests = [],\n      avatar = '',\n    } = drafterDetails;\n\n    this.id = id;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.drawingRequests = drawingRequests;\n    this.status = status;\n    this.avatar = avatar;\n  }\n}\n\ninterface TaskOverview {\n  assigned: number;\n  completed: number;\n}\n\ninterface DrafterDetails {\n  id: string;\n  firstName: string;\n  lastName: string;\n  status: string;\n  drawingRequests: Array<any>;\n  avatar: String;\n}\n","import { User } from '../services/user.service';\nimport { Drafter } from './drafter';\nimport { DrawingRequestBuilder } from '../builders/drawing-request-builder';\nimport { TenderDrawing } from './tender-drawing';\nimport { environment } from 'src/environments/environment';\nimport { ProjectDrawingType } from './project-drawing-type';\n\nexport class DrawingRequest {\n  public id: string;\n  public requestedBy: User;\n  public assignedTo: Drafter;\n  public requestDate: string;\n  public targetDate: string;\n  public subject: string;\n  public status: string;\n  public drawing: TenderDrawing;\n  public drawingFile: string;\n  public completedDrawingFile: string;\n  public comments: string;\n  public drawingType: ProjectDrawingType;\n\n  constructor(\n    drawingRequestBuilder: DrawingRequestBuilder,\n  ) {\n    this.id = drawingRequestBuilder.id;\n    this.subject = drawingRequestBuilder.subject;\n    this.requestDate = drawingRequestBuilder.requestDate;\n    this.targetDate = drawingRequestBuilder.targetDate;\n    this.assignedTo = drawingRequestBuilder.assignedTo;\n    this.status = drawingRequestBuilder.status;\n    this.requestedBy = drawingRequestBuilder.requestedBy;\n    this.drawing = drawingRequestBuilder.drawing;\n    this.drawingFile = drawingRequestBuilder.drawingFile;\n    this.completedDrawingFile = drawingRequestBuilder.completedDrawingFile;\n    this.comments = drawingRequestBuilder.comments;\n    this.drawingType = drawingRequestBuilder.drawingType;\n  }\n\n  get isAssigned() {\n    return this.status === \"Assigned\" || this.status === \"Rejected\";\n  }\n\n  openDrawing() {\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${this.drawingFile}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n\n  openCompletedDrawingFile() {\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${this.completedDrawingFile}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n}\n\nexport type DrawingRequestStatus = \"Completed\" | \"Assigned\" | \"Rejected\";","import { ProjectDrawingType } from './project-drawing-type';\n\nexport class ProjectConfiguration {\n  drawingTypes: Array<ProjectDrawingType> = [];\n\n  constructor(\n    drawingTypes: Array<ProjectDrawingType>,\n  ) {\n    this.drawingTypes = drawingTypes;\n  }\n}","export class ProjectDrawingType {\n  id: String | Number;\n  projectId: String | Number;\n  type: String;\n  color: String = '#ff7c00';\n  order: String | Number = 0;\n\n  constructor(\n    id: String | Number,\n    projectId: String | Number,\n    type: String,\n  ) {\n    this.id = id,\n    this.projectId = projectId;\n    this.type = type;\n  }\n\n  setColor(color: String) {\n    this.color = color;\n\n    return this;\n  }\n  \n  setOrder(order: String | Number) {\n    this.order = order;\n\n    return this;\n  }\n\n  toJson() {\n    return {\n      id: this.id,\n      project_id: this.projectId,\n      color: this.color,\n      type: this.type,\n      order: this.order,\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { \n  CanActivate, \n  ActivatedRouteSnapshot, \n  RouterStateSnapshot, \n  Router \n} from '@angular/router';\nimport { take, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ) {}\n\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.isAuthenticated.pipe(map(authenticated => {\n      if(authenticated) {\n        return true;\n      }\n\n      this.router.navigateByUrl('/login');\n      return false;\n    }));\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ClientAdapter } from '../adapters/client-adapter';\nimport { Client } from '../models/client';\n\n@Injectable()\nexport class ClientsService {\n  constructor(\n    private api: ApiService,\n    private clientAdapter: ClientAdapter,\n  ) {}\n\n  getClients(params: ClientServiceParams = {}):Observable<Client[]> {\n    const url = `/clients?search_term=${params.name ? params.name : ''}`\n\n    return this.api.get(url)\n      .pipe(map(res => {\n        return res.data.map(client => this.clientAdapter.adapt(client))\n      }));\n  }\n\n  addClient(body): Observable<any> {\n    return this.api.post('/clients', body);\n  }\n\n  editClient(id, body): Observable<any> {\n    return this.api.post(`/clients/${id}/update`, body);\n  }\n\n  deleteClient(id): Observable<any> {\n    return this.api.delete(`/clients/${id}/delete`);\n  }\n}\n\nexport interface ClientServiceParams {\n  name?: string;\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { map } from 'rxjs/operators';\nimport { DrafterRequestsSummaryAdapter } from '../adapters/drafter-requests-summary-adapter';\n\n@Injectable()\nexport class DrafterRequestsService {\n  constructor(\n    private api: ApiService,\n    private drafterRequestSummaryAdapter: DrafterRequestsSummaryAdapter,\n  ) {}\n\n  getSummary(drafterId: number | string, projectId: Number | String) {\n    const url = `/drafter/${drafterId}/tasks/summary?project_id=${projectId}`;\n\n    return this.api.get(url).pipe(\n      map(res => this.drafterRequestSummaryAdapter.adapt(res.data))\n    );\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { UserService } from './user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DrawingRequestAdapter } from '../adapters/drawing-request-adapter';\nimport { DrawingRequest } from '../models/drawing-request';\nimport { RequestTableFilters } from 'src/app/drafter/request-table-filters/request-table-filters.component';\n\n@Injectable()\nexport class DrafterService {\n  constructor(\n    private api: ApiService,\n    private user: UserService,\n    private drawingRequestAdapter: DrawingRequestAdapter,\n  ) {}\n\n  getDrafters(withCompletedTasks: Boolean = true, project_id: string | Number = ''): Observable<any> {\n    return this.api.get(`/drafters?completed_tasks=${withCompletedTasks}&project_id=${project_id}`);\n  }\n\n  getDrafter(id): Observable<any> {\n    return this.api.get(`/drafter/${id}`);\n  }\n\n  getDrafterTasks(id, params: DrafterTasksParams = {}): Observable<any> {\n    const projectId = params.projectId ? params.projectId : '';\n    const page = params.page ? params.page : 1;\n    const items = params.items ? params.items : 50;\n    const filters = params.filters;\n\n    const fromDate = filters && filters.fromDate ? filters.fromDate : '';\n    const endDate = filters && filters.endDate ?  filters.endDate : '';\n    const employeeId = filters && filters.employeeId ?  filters.employeeId : '';\n    const searchTerm = filters && filters.searchTerm ? filters.searchTerm : '';\n    const status = filters && filters.status ? filters.status : '';\n\n    const url = `/drafter/${id}/tasks?term=${searchTerm }&project_id=${projectId}&status=${status}&date_from=${fromDate}&date_to=${endDate}&requested_by=${employeeId}&items=${items}&page=${page}`;\n\n    return this.api.get(url)\n      .pipe(map(res => {\n          const drawingRequests = res.data.data.map(request => {\n            return this.drawingRequestAdapter.adapt(request)\n          });\n\n          const data: DrafterTasksData = {\n            data: drawingRequests,\n            total: res.data.total,\n            currentPage: res.data.current_page,\n          }\n\n          return data;\n      }));\n  }\n\n  getDrafterAssignedTasks(id, project_id = '', params: DrafterRequestFilters = {}, pageParams: DrafterTasksParams = {}): Observable<any> {\n    const page = pageParams.page ? pageParams.page : 1;\n    const items = pageParams.items ? pageParams.items : 50;\n    const fromDate = params.fromDate ? params.fromDate : '';\n    const endDate = params.endDate ? params.endDate : '';\n    const employeeId = params.employeeId ? params.employeeId : '';\n\n    const url = `/drafter/${id}/tasks?term=${params.searchTerm ? params.searchTerm  : ''}&project_id=${project_id}&status=${params.status}&date_from=${fromDate}&date_to=${endDate}&requested_by=${employeeId}&items=${items}&page=${page}`;\n\n    return this.api.get(url)\n      .pipe(map(res => {\n        const drawingRequests = res.data.data.map(request => {\n          return this.drawingRequestAdapter.adapt(request)\n        });\n\n        const data: DrafterTasksData = {\n          data: drawingRequests,\n          total: res.data.total,\n          currentPage: res.data.current_page,\n        }\n\n        return data;\n      }));\n  }\n\n  private adaptDrawingRequest(res): void {\n    return res.data.data.map(item => {\n      return this.drawingRequestAdapter.adapt(item);\n    });\n  }\n}\n\ninterface DrafterRequestFilters {\n  searchTerm?: string;\n  status?: string;\n  fromDate?: string;\n  endDate?: string;\n  employeeId?: string | number;\n}\n\nexport interface DrafterTasksParams {\n  projectId?: Number | String;\n  page?: Number;\n  items?: Number;\n  filters?: RequestTableFilters;\n}\n\nexport interface DrafterTasksData {\n  data: Array<DrawingRequest>,\n  total: number,\n  currentPage: number,\n}\n","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { DrawingCategoryAdapter } from '../adapters/drawing-category-adapter';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\nexport class DrawingCategoryService {\n  constructor(\n    private api: ApiService,\n    private drawingCategoryAdapter: DrawingCategoryAdapter,\n  ) {}\n\n  getCategories(): Observable<any> {\n    return this.api.get('/drawing-categories')\n            .pipe(map(res => res.data.map(category => this.drawingCategoryAdapter.adapt(category))));\n  }\n\n  addCategory(body = {}): Observable<any> {\n    return this.api.post('/drawing-category', body);\n  }\n\n  editCategory(id, body): Observable<any> {\n    return this.api.post(`/drawing-category/${id}/update`, body);\n  }\n\n  deleteCategory(id): Observable<any> {\n    return this.api.delete(`/drawing-category/${id}/delete`);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { UserService, User } from './user.service';\nimport { Observable } from 'rxjs';\nimport { DrawingRequest } from '../models/drawing-request';\nimport { map } from 'rxjs/operators';\nimport { Drafter } from '../models/drafter';\nimport { DrawingRequestAdapter } from '../adapters/drawing-request-adapter';\n\n@Injectable()\nexport class DrawingRequestService {\n  private userId;\n\n  constructor(\n    private api: ApiService,\n    private userService: UserService,\n    private drawingRequestAdapter: DrawingRequestAdapter,\n  ) {\n    this.userService.currentUser.subscribe(user => {\n      this.userId = user.employeeId;\n    })\n  }\n\n  createRequest(body): Observable<any> {\n    const postData = {\n      employee_id: this.userId,\n      ...body,\n    }\n    return this.api.post('/drawing-requests', postData);\n  }\n\n  getRequests(project_id: string | Number = '', params: DrawingRequestParams = {}): Observable<any> {\n    return this.api.get(`/drawing-requests?project_id=${project_id}&assigned_by=${params.assignedBy ? params.assignedBy : ''}&status=${params.status ? params.status : ''}`)\n      .pipe(map(res => {\n        return res.data.map(res => {\n          return this.drawingRequestAdapter.adapt(res);\n        });\n      }));\n  }\n\n  assignRequests(body): Observable<any> {\n    const drafter_requests = JSON.stringify(body);\n\n    return this.api.post('/drawing-requests/assign', {\n      drafter_requests: drafter_requests,\n    });\n  }\n\n  editRequest(body, id): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/update`, body);\n  }\n\n  completeRequest(id, body): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/complete`, body);\n  }\n\n  approveDrawing(id, comments): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/approve`, {\n      comments,\n    })\n  }\n\n  rejectDrawing(id, comments): Observable<any> {\n    return this.api.post(`/drawing-request/${id}/reject`, {\n      comments,\n    });\n  }\n}\n\nexport interface DrawingRequestParams {\n  assignedBy?: string | Number;\n  status?: string;\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class JwtService {\n  TOKEN_KEY = 'jwtToken'\n\n\n  getToken(): string {\n    return window.localStorage[this.TOKEN_KEY];\n  }  \n  \n  saveToken(token: string) {\n    window.localStorage.setItem(this.TOKEN_KEY, token)\n  }\n\n  removeToken() {\n    window.localStorage.removeItem(this.TOKEN_KEY)\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable()\nexport class MenuService {\n  MENU_KEY = 'sbheDrawingMenu';\n\n  private menuStatusSubject = new BehaviorSubject<boolean>(false);\n  public menuStatus = this.menuStatusSubject.asObservable().pipe(distinctUntilChanged());\n\n  setMenuStatus(\n    status: boolean\n  ) {\n    this.menuStatusSubject.next(status);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { ProjectCategory } from '../models/project-category';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class ProjectCategoryService {\n  constructor(\n    private api: ApiService\n  ) {}\n\n  addCategory(id, body): Observable<any> {\n    const url = `/projects/${id}/categories`;\n\n    return this.api.post(url, body);\n  }\n\n  getCategories(id) {\n    const url = `/projects/${id}/categories`;\n\n    return this.api.get(url).pipe(\n      map(res => {\n        return res.data.map(category => {\n          const projectCategory: ProjectCategory = {\n            id: category.id,\n            projectId: category.project_id,\n            categoryName: category.category_name,\n          }\n\n          return projectCategory;\n        });\n      })\n    );\n  }\n\n  editCategory(id, categoryId, body): Observable<any> {\n    const url = `/projects/${id}/categories/${categoryId}`;\n\n    return this.api.post(url, body);\n  }\n\n  deleteCategory(id, categoryId): Observable<any> {\n    const url = `/projects/${id}/categories/${categoryId}`;\n\n    return this.api.delete(url);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { map } from 'rxjs/operators';\nimport { ProjectConfiguration } from '../models/project-configuration';\nimport { Observable } from 'rxjs';\nimport { ProjectDrawingType } from '../models/project-drawing-type';\n\n@Injectable()\nexport class ProjectConfigurationService {\n  constructor(\n    private api: ApiService\n  ) {}\n\n  getProjectDrawingTypes(projectId: String | Number): Observable<ProjectConfiguration> {\n    return this.api.get(`/projects/${projectId}/drawing-types`).pipe(map(res => {\n      const types: Array<ProjectDrawingType> = res.data.map(type => {\n        const projectDrawingType = new ProjectDrawingType(type.id, projectId, type.type);\n\n        projectDrawingType.setColor(type.color);\n        projectDrawingType.setOrder(type.order);\n\n        return projectDrawingType;\n      });\n\n      return new ProjectConfiguration(types);\n    }));\n  }\n\n  updateProjectDrawingTypes(projectId: String | Number, drawingTypes: Array<ProjectDrawingType> = []): Observable<ProjectConfiguration> {\n    const types = drawingTypes.map(type => {\n      return type.toJson();\n    });\n\n    return this.api.post(`/projects/${projectId}/drawing-types/update`, {\n      types,\n    }).pipe(map(res => {\n      return new ProjectConfiguration(res.types);\n    }));\n  }\n\n  deleteProjectDrawingType(projectId: String | Number, typeId: String | Number) {\n    return this.api.delete(`/projects/${projectId}/drawing-types/${typeId}`);\n  }\n}","import { Injectable } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ProjectAdapter, ClientAdapter } from '../adapters';\nimport { TransmittalForm } from '../models/transmittal-form';\n\n@Injectable()\nexport class ProjectsService {\n  constructor(\n    private api: ApiService,\n    private projectAdapter: ProjectAdapter,\n    private clientAdapter: ClientAdapter,\n  ) {}\n\n  // TODO: Add projects model\n  getProjects(): Observable<any> {\n    return this.api.get('/projects').pipe(map(res => {\n      return res.data.map(project => {\n        return this.projectAdapter.adapt(project)\n      })\n    }));\n  }\n\n  getProject(id): Observable<any> {\n    return this.api.get(`/projects/${id}`).pipe(map(res => {\n      return this.projectAdapter.adapt(res.data);\n    }));\n  }\n\n  getClient(id): Observable<any> {\n    return this.api.get(`/projects/${id}/client`).pipe(map(res => {\n      if(res.data) {\n        const {\n          client_name,\n          client_address,\n          client = {},\n        } = res.data;\n\n        return this.clientAdapter.adapt({\n          client_name,\n          client_address,\n          ...client,\n        });\n      }\n\n      return;\n    }));\n  }\n\n  getProjectDrawingTypeSummary(id): Observable<any> {\n    return this.api.get(`/type-drawings/summary/${id}`).pipe(map(res => {\n      const keys = Object.keys(res.data);\n      return keys.map((key) => {\n        return {\n          ...res.data[key],\n          type: key\n        }\n      })\n    }));\n  }\n\n  getLatestTransmittalFile(id): Observable<any> {\n    return this.api.get(`/projects/${id}/transmittal-forms/latest`)\n      .pipe()\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TransmittalFormService {\n  constructor(\n    private api: ApiService,\n  ) {}\n\n  createTransmittalForm(body): Observable<any> {\n    return this.api.post('/transmittal-forms', body);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { ApiService } from '../api.service';\nimport { DatePipe } from '@angular/common';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TypeDrawingService {\n  constructor(\n    public api: ApiService,\n    private datePipe: DatePipe,\n  ) {}\n\n  getTypeDrawing(id) {\n    return this.api.get(`/type-drawing/${id}`);\n  }\n\n  getShopDrawing(id) {\n    return this.api.get(`/type-drawing/${id}?type=shop`);\n  }\n\n  getAsBuiltDrawing(id) {\n    return this.api.get(`/type-drawing/${id}?type=as-built`);\n  }\n\n  getHistory(id, type, date = '') {\n    return this.api.get(`/type-drawing/history/${id}`);\n  }\n\n  getHistoryDates(id, type) {\n    return this.api.get(`/type-drawing/history/${id}/dates?type=${type}`).pipe(map(res => {\n      return res.data.map(date => {\n        return this.datePipe.transform(date, 'dd-MM-yyy')\n      });\n    }));;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, ReplaySubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, filter } from 'rxjs/operators';\nimport { ApiService } from '../api.service';\nimport { JwtService } from './jwt.service';\nimport { environment } from 'src/environments/environment';\nimport { UserTypes } from '../enums/usertypes.enum';\n\nexport class User {\n  id: string \n  employeeId: string\n  avatar: string | null\n  roleId: number\n  companyId: string\n  firstName: string\n  lastName: string\n  tokenExpiration: number\n  signature: string;\n\n  get isAdmin(): Boolean {\n    const adminUserTypes: Array<number> = [\n      UserTypes.Superadmin,\n      UserTypes.Director,\n      UserTypes.Engineer,\n      UserTypes.Supervisor,\n      UserTypes.ProjectManager,\n      UserTypes.AssistantProjectManager,\n      UserTypes.Coordinator,\n    ];\n\n    return adminUserTypes.indexOf(this.roleId) !== -1;\n  }\n\n  get isSuperadmin(): Boolean {\n    return this.roleId === UserTypes.Superadmin;\n  }\n\n  get isDrafter(): Boolean {\n    return this.roleId === UserTypes.Drafter;\n  }\n\n  get signatureLink(): string | null {\n    if(this.signature) {\n      return `${environment.s3_url}${this.signature}`;\n    }\n\n    return null;\n  }\n\n  constructor(userDetails) {\n    this.id = userDetails.id\n    this.employeeId = userDetails.employeeId\n    this.avatar = userDetails.avatar ? this.generateAvatarLink(userDetails.avatar) : this.generateDefaultAvatarLink();\n    this.roleId = userDetails.roleId\n    this.companyId = userDetails.companyId\n    this.firstName = userDetails.firstName\n    this.lastName = userDetails.lastName\n    this.tokenExpiration = userDetails.tokenExpiration ? userDetails.tokenExpiration * 1000 : null;\n    this.signature = userDetails.signaturePath;\n  }\n\n  private generateAvatarLink(avatarLink): string {\n    return `${environment.s3_url}${avatarLink}`\n  }\n\n  private generateDefaultAvatarLink(): string {\n    const defaultAvatarPath = 'Employee/Avatar/_1551750608118_1184684_log_in_sign_up_upload_clipart_man_avatar.png'\n\n    return this.generateAvatarLink(defaultAvatarPath)\n  }\n\n  public getUserFullName() {\n    return `${this.firstName} ${this.lastName}`\n  }\n}\n\n@Injectable()\nexport class UserService {\n  private currentUserSubject = new BehaviorSubject<User>(null);\n  public currentUser = this.currentUserSubject.asObservable().pipe(distinctUntilChanged(), filter(user => user !== null));\n\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\n\n  constructor(\n    private api: ApiService,\n    private tokenService: JwtService,\n  ) {}\n\n  async checkUser(){\n    const token = this.tokenService.getToken()\n\n    if(token) {\n      this.api.get('/check-token').subscribe(\n        res => {\n          const user = this.generateUserDetails({\n            ...res.data.user,\n            token_expiration: res.data.token_expiration,\n          });\n\n          this.setAuth(user, token);\n        },\n        err => {this.purgeAuth()}\n      );\n    } else {\n      this.purgeAuth();\n    }\n  }\n\n  generateUserDetails(userData): User {\n    const userDetails = {\n      id: userData.id,\n      employeeId: userData.employee_id,\n      avatar: userData.employee.avatar ? userData.employee.avatar.image : '',\n      roleId: userData.employee.role.id,\n      companyId: userData.employee.company.id,\n      firstName: userData.employee.first_name,\n      lastName: userData.employee.last_name,\n      tokenExpiration: userData.token_expiration,\n      signaturePath: userData.employee.signature_path,\n    }\n\n    const user = new User(userDetails);\n\n    return user\n  }\n\n  attemptLogin(credentials): Observable<User> {\n    return this.api.post('/login', {...credentials})\n      .pipe(\n        map(\n          data => {\n            // This is too long\n            const userData = data.data.user\n            const token = data.data.token\n            const tokenExpiration = data.data.token_expiration\n\n            const userDetails = {\n              id: userData.id,\n              employeeId: userData.employee_id,\n              avatar: userData.employee.avatar ? userData.employee.avatar.image : null,\n              roleId: userData.employee.role.id,\n              companyId: userData.employee.company.id,\n              firstName: userData.employee.first_name,\n              lastName: userData.employee.last_name,\n              signaturePath: userData.employee.signature_path,\n              tokenExpiration,\n            }\n            const user = new User(userDetails)\n\n            this.setAuth(user, token)\n            return data\n          }\n        )\n      )\n  }\n\n  setAuth(user: User, token: string, tokenExpiration = null) {\n    this.currentUserSubject.next(user)\n    this.tokenService.saveToken(token)\n    this.isAuthenticatedSubject.next(true)\n  }\n\n  logout() {\n    this.purgeAuth();\n  }\n\n  purgeAuth() {\n    this.tokenService.removeToken();\n    this.currentUserSubject.next(null as User);\n    this.isAuthenticatedSubject.next(false);\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.currentUser.pipe(map(user => {\n      return !!user.isAdmin\n    }))\n  }\n}","import { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from './dashboard.component';\nimport { NgModule } from '@angular/core';\nimport { HomeModule } from '../home/home.module';\nimport { HomeComponent } from '../home/home.component';\nimport { DrafterModule } from '../drafter/drafter.module';\nimport { DrafterComponent } from '../drafter/drafter.component';\nimport { AdminGuard } from './admin-guard.service';\nimport { DrafterGuard } from './drafter-guard.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { DrawingComponent } from '../drawing/drawing.component';\nimport { RequestDrawingsModule } from '../request-drawings/request-drawings.module';\nimport { RequestDrawingsComponent } from '../request-drawings/request-drawings.component';\nimport { ClientsComponent } from '../clients/clients.component';\nimport { ClientsModule } from '../clients/clients.module';\nimport { TRANSMITTAL_FORMS_ROUTES } from '../transmittal-forms/transmittal-forms.routes';\nimport { TENDER_DRAWING_ROUTES } from '../tender-drawing/tender-drawing-routes';\nimport { TenderDrawingModule } from '../tender-drawing/tender-drawing.module';\nimport { SHOP_DRAWING_ROUTES } from '../shop-drawing/shop-drawing.routes';\nimport { AS_BUILT_DRAWINGS_ROUTES } from '../as-built-drawing/as-built.routes';\nimport { TYPE_DRAWING_ROUTES } from '../type-drawing/type-drawing.routes';\nimport { LayoutModule } from '../layout/layout.module';\nimport { ProjectsModule } from '../projects/projects.module';\nimport { ProjectsComponent } from '../projects/projects.component';\n\n//  TODO: Optimize routes.\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    canActivate: [AuthGuard],\n    component: DashboardComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n      },\n      {\n        path: 'requests',\n        canActivate: [DrafterGuard],\n        component: DrafterComponent\n      },\n      {\n        path: 'projects',\n        children: [\n          {\n            path: '',\n            component: ProjectsComponent,\n          },\n          {\n            path: ':id',\n            children: [\n              {\n                path: '',\n                component: DrawingComponent,\n              },\n              {\n                path: 'requests',\n                component: DrafterComponent,\n                canActivate: [DrafterGuard],\n              },\n              {\n                path: 'clients',\n                children: [\n                  {\n                    path: '',\n                    component: ClientsComponent,\n                  },\n                ]\n              },\n              TRANSMITTAL_FORMS_ROUTES,\n            ]\n          },\n        ]\n      },\n      TENDER_DRAWING_ROUTES,\n      SHOP_DRAWING_ROUTES,\n      AS_BUILT_DRAWINGS_ROUTES, \n      TYPE_DRAWING_ROUTES,\n    ]\n  },\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    ProjectsModule,\n    HomeModule,\n    DrafterModule,\n    ClientsModule,\n    RequestDrawingsModule,\n  ],\n  exports: [RouterModule],\n})\n\nexport class DashboardRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { UserService, User } from '../core/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.currentUser.subscribe(user => {\n      this.user = user;\n    });\n  }\n}\n","<app-main-layout>\n  <div class=\"main-actions\">\n    <!-- <a [routerLink]='\"/dashboard/requests\"' mat-stroked-button color='primary' *ngIf='user && user.isDrafter'>My Drawing Requests</a> -->\n  </div>\n  <router-outlet></router-outlet>\n</app-main-layout>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DrafterGuard } from './drafter-guard.service';\nimport { AdminGuard } from './admin-guard.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { TenderDrawingModule } from '../tender-drawing/tender-drawing.module';\nimport { HistoryModule } from '../history/history.module';\nimport { ShopDrawingModule } from '../shop-drawing/shop-drawing.module';\nimport { AsBuiltDrawingModule } from '../as-built-drawing/as-built-drawing.module';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DashboardComponent } from './dashboard.component';\nimport { DrawingCategoriesModule } from '../drawing-categories/drawing-categories.module';\nimport { TypeDrawingModule } from '../type-drawing/type-drawing.module';\n\n\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    RouterModule,\n    TenderDrawingModule,\n    HistoryModule,\n    TypeDrawingModule,\n    ShopDrawingModule,\n    AsBuiltDrawingModule,\n    DrawingCategoriesModule,\n    AppLayoutModule,\n    MatButtonModule,\n  ],\n  providers: [\n    DrafterGuard,\n    AdminGuard,\n    AuthGuard,\n  ],\n})\nexport class DashboardModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class DrafterGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.userService.currentUser.pipe(map(user => {\n      if(user.isDrafter) {\n        return true;\n      }\n\n      this.router.navigateByUrl('/unauthorized');\n      return false;\n    }));\n  }\n}","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\n\n@Component({\n  selector: 'app-complete-drawing-request',\n  templateUrl: './complete-drawing-request.component.html',\n  styleUrls: ['./complete-drawing-request.component.scss']\n})\nexport class CompleteDrawingRequestComponent implements OnInit {\n  public completeDrawingForm: FormGroup;\n  loading: Boolean = false;\n\n  \n  @Output() onCompleteSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data:CompleteDrawingDialogData,\n    private dialogRef: MatDialogRef<CompleteDrawingRequestComponent>,\n    private formBuilder: FormBuilder,\n    private drawingRequestService: DrawingRequestService,\n  ) { \n    this.completeDrawingForm = this.formBuilder.group({\n      completed_drawing_file: new FormControl(null, [Validators.required]),\n      comments: new FormControl(''),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onFormSubmit() {\n    const body = this.completeDrawingForm.value;\n\n    this.loading = true;\n\n    this.drawingRequestService.completeRequest(this.data.drawingRequestId, body).subscribe(res => {\n      this.closeDialog();\n      this.onCompleteSuccess.emit();\n\n      this.loading = false;\n    });\n  }\n\n}\n\nexport interface CompleteDrawingDialogData {\n  drawingRequestId: number | string;\n}\n","<div class=\"complete-drawing-request\">\n  <form [formGroup]=\"completeDrawingForm\" (submit)='onFormSubmit(); $event.preventDefault()'>\n    <h1 mat-dialog-title>Complete Drawing Request</h1>\n    <div mat-dialog-content>\n      <p>Add a comment and upload a drawing file to complete the drawing file.</p>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n        <textarea matInput cols=\"30\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Upload Drawing File:</mat-label>\n        <upload-input formControlName='completed_drawing_file'></upload-input>\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-raised-button (click)='closeDialog()' type='button' color='warn'>Cancel</button>\n      <button mat-raised-button type='submit' color='primary' [disabled]='completeDrawingForm.invalid || loading'>Submit</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { UserService } from '../core/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RequestDrawingComponent } from '../request-drawings/request-drawing/request-drawing.component';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { RequestsTableComponent } from './requests-table/requests-table.component';\nimport { RequestSummaryComponent } from './request-summary/request-summary.component';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-drafter',\n  templateUrl: './drafter.component.html',\n  styleUrls: ['./drafter.component.scss']\n})\nexport class DrafterComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent;\n  @ViewChild('requestsTable') private requestsTable: RequestsTableComponent;\n  @ViewChild('summary') private summary: RequestSummaryComponent;\n\n  employeeId;\n  projectId;\n\n  constructor(\n    private userService: UserService,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      switchMap(params => {\n        this.projectId = params.get('id');\n\n        return this.userService.currentUser;\n      })\n    ).subscribe(user => {\n      this.employeeId = user.employeeId;\n    })\n  }\n  \n  handleOnCompleteSuccess() {\n    this.successConfirmation.swalOptions = {\n      text: 'Drawing marked completed.'\n    }\n\n    this.summary.getData();\n\n    this.successConfirmation.fire();\n  }\n\n  showNewRequestDrawing() {\n    const newRequestDrawingDialog = this.dialog.open(RequestDrawingComponent, {\n      width: '720px',\n      data: {\n        drafterId: this.employeeId,\n        isDrafter: true,\n        projectId: this.projectId,\n      }\n    });\n\n    newRequestDrawingDialog.componentInstance.onRequestSaved.subscribe(() => {\n      this.requestsTable.getData();\n      this.successConfirmation.swalOptions = {\n        text: 'Drawing request created.'\n      }\n      this.summary.getData();\n\n      this.successConfirmation.fire();\n    });\n  }\n}\n","<div class=\"header\">\n  <div \n    fxLayout='row'\n    fxLayoutAlign='space-between space-between'\n  >\n    <div class=\"title\">\n      <h1>Your Drawing Requests</h1>\n    </div>\n    <div class=\"actions\">\n      <a [routerLink]=\"['/dashboard/projects']\" mat-raised-button color='primary'>View All Projects</a>\n    </div>\n  </div>\n  <div \n    fxLayout='row'\n    fxLayoutAlign='space-between flex-start'\n  >\n    <div class=\"header__left\">\n      <button mat-stroked-button color='primary' [disabled]='!employeeId' (click)='showNewRequestDrawing()'>\n        <mat-icon>add</mat-icon>\n        New Task\n      </button>\n    </div>\n    <div \n      class=\"header__right\"\n      fxFlex='0 0 20%'\n    >\n      <h4 class='summary-title'><mat-icon>list_alt</mat-icon>Summary</h4>\n      <mat-card>\n        <app-request-summary \n          #summary \n          *ngIf='employeeId && projectId'\n          [projectId]='projectId'\n          [drafterId]='employeeId'>\n        </app-request-summary>\n      </mat-card>\n    </div>\n  </div>\n</div>\n<mat-card class='drafter'>\n  <div mat-card-content>\n    <app-requests-table \n      #requestsTable\n      (onCompleteSuccess)='handleOnCompleteSuccess()' \n      [employeeId]='employeeId' \n      [projectId]='projectId'\n      *ngIf='employeeId && projectId'>\n    </app-requests-table>\n  </div>\n</mat-card>\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n>\n</swal>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrafterComponent } from './drafter.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatTableModule } from '@angular/material/table';\nimport { RequestsTableComponent } from './requests-table/requests-table.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CompleteDrawingRequestComponent } from './complete-drawing-request/complete-drawing-request.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { RequestTableFiltersComponent } from './request-table-filters/request-table-filters.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { RequestSummaryComponent } from './request-summary/request-summary.component';\nimport { RouterModule } from '@angular/router';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\n\n\n@NgModule({\n  declarations: [DrafterComponent, RequestsTableComponent, CompleteDrawingRequestComponent, RequestTableFiltersComponent, RequestSummaryComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    MatCardModule,\n    MatTableModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ContentLoaderModule,\n    SharedModule,\n    FlexLayoutModule,\n    SweetAlert2Module,\n    MatPaginatorModule,\n    RouterModule,\n  ],\n})\nexport class DrafterModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DrafterRequestsService } from 'src/app/core/services/drafter-requests.service';\nimport { DrafterRequestsSummary } from 'src/app/core/models/drafter-requests-summary';\n\n@Component({\n  selector: 'app-request-summary',\n  templateUrl: './request-summary.component.html',\n  styleUrls: ['./request-summary.component.scss']\n})\nexport class RequestSummaryComponent implements OnInit {\n  loading: boolean = false;\n  summary: DrafterRequestsSummary;\n\n  @Input()\n  set drafterId(id: number) {\n    this._drafterId = id;\n\n    this.getData();\n  }\n\n  get drafterId(): number {\n    return this._drafterId;\n  }\n\n  private _drafterId: number;\n\n  @Input()\n  set projectId(id: Number) {\n    this._projectId = id; \n\n    this.getData();\n  }\n\n  get projectId(): Number {\n    return this._projectId;\n  }\n\n  private _projectId: Number;\n\n\n  constructor(\n    private drafterRequest: DrafterRequestsService,\n  ) {}\n\n  ngOnInit(): void {}\n\n  getData() {\n    this.loading = true;\n\n    if(this.projectId && this.drafterId) {\n      this.drafterRequest.getSummary(this.drafterId, this.projectId).subscribe(res => {\n        this.summary = res;\n  \n        this.loading = false;\n      });\n    }\n  }\n}\n","<div class=\"request-summary\">\n  <p>\n    <span class='label'>Assigned:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.assigned : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>Completed:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.completed : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>Approved:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.approved : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>Rejected:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.rejected : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n  <p>\n    <span class='label'>TOTAL:</span> \n    <span *ngIf='!loading'>{{ summary ? summary.total : \"-\" }}</span>\n    <content-loader [style]='{width: \"200px\"}' height=\"10\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"0\" width=\"100%\" height=\"10\" />\n    </content-loader>\n  </p>\n</div>","import { Component, OnInit, Output, EventEmitter, Input, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DatePipe } from '@angular/common';\nimport { DrawingService } from 'src/app/drawing/shared/drawing.service';\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-request-table-filters',\n  templateUrl: './request-table-filters.component.html',\n  styleUrls: ['./request-table-filters.component.scss']\n})\nexport class RequestTableFiltersComponent implements OnInit {\n  @Output() onFilterChange: EventEmitter<any> = new EventEmitter();\n  @Input() defaultStatus: string = '';\n  @Input() defaultTerm: string = '';\n\n  searchTerm: FormControl;\n  status: FormControl;\n  _filters: RequestTableFilters;\n  filterForm: FormGroup;\n  approvers;\n  minDate: Date;\n\n  set filters(value: RequestTableFilters) {\n    this._filters = value;\n\n    this.onFilterChange.emit(this.filters);\n  }\n\n  get filters(): RequestTableFilters {\n    return this._filters;\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<RequestTableFiltersComponent>,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private drawingService: DrawingService,\n    @Inject(MAT_DIALOG_DATA) public data: RequestTableFiltersDialogData, \n  ) { \n    const searchTerm = this.data.filters.searchTerm ? this.data.filters.searchTerm : '';\n    const status = this.data.filters.status ? this.data.filters.status : '';\n    const employeeId = this.data.filters.employeeId ? this.data.filters.employeeId : '';\n    const fromDate = this.data.filters.fromDate ? this.datePipe.transform(this.data.filters.fromDate, 'dd-MM-yyyy') : '';\n    const endDate = this.data.filters.endDate ? this.datePipe.transform(this.data.filters.endDate, 'dd-MM-yyyy') : '';\n\n    const fromDateFormatted = fromDate ? moment(fromDate, 'DD-MM-YYYY').toDate() : '';\n    const endDateFormatted = endDate ? moment(endDate, 'DD-MM-YYYY').toDate() : '';\n\n    this.filterForm = this.formBuilder.group({\n      searchTerm: new FormControl(searchTerm),\n      status: new FormControl(status), \n      fromDate: new FormControl(fromDateFormatted),\n      endDate: new FormControl(endDateFormatted),\n      employeeId: new FormControl(employeeId),\n    });\n\n    if(!fromDate) {\n      this.filterForm.controls['endDate'].disable();\n    }\n\n    this.filterForm.controls['fromDate'].valueChanges.subscribe(res => {\n      if(res) {\n        this.minDate = res;\n        this.filterForm.controls['endDate'].enable();\n      } else {\n        this.filterForm.controls['endDate'].disable();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.approvers = this.drawingService.getApprovers('shop', this.data.projectId).pipe(\n      map(res => res.data)\n    );\n  }\n\n  private setFilters(key, value): void {\n    this.filters = {\n      ...this.filters,\n      [key]: value ? value : '',\n    }\n  }\n\n  onSubmit() {\n    const {\n      searchTerm,\n      status,\n      fromDate,\n      endDate,\n      employeeId,\n    } = this.filterForm.value;\n\n    const filters: RequestTableFilters = {\n      searchTerm,\n      status,\n      endDate: endDate ? this.datePipe.transform(endDate, 'yyyy-MM-dd') : '',\n      fromDate: fromDate ? this.datePipe.transform(fromDate, 'yyyy-MM-dd') : '',\n      employeeId,\n    }\n\n    this.onFilterChange.emit(filters);\n    this.dialogRef.close();\n  }\n\n  resetForm() {\n    const defaultStatus = this.data.defaultStatus === 'All' ? '' : 'Assigned';\n\n    const initialValues = {\n      searchTerm: '',\n      status: defaultStatus,\n      fromDate: '',\n      endDate: '',\n      employeeId: '',\n    }\n\n    this.filterForm.reset(initialValues);\n  }\n}\n\nexport interface RequestTableFiltersDialogData {\n  filters: RequestTableFilters;\n  projectId?: number | string;\n  defaultStatus?: number | string;\n}\nexport interface RequestTableFilters {\n  searchTerm?: string;\n  status?: string;\n  fromDate?: string;\n  endDate?: string;\n  employeeId?: string | number;\n}\n","<h1 mat-dialog-title>Filter Requests</h1>\n<form [formGroup]='filterForm' (ngSubmit)='onSubmit()'>\n  <div mat-dialog-content>\n    <div class=\"requests-table-filters\">\n      <div class=\"requests-table-filters__section\">\n        <mat-form-field class='request-table-filters__search-term form-control'>\n          <mat-label>Search Term</mat-label>\n          <input matInput formControlName='searchTerm' type='text' name='search_term'/>\n        </mat-form-field>\n      </div>\n      <div class=\"requests-table-filters__section\">\n        <mat-form-field class='form-control' >\n          <mat-label>Status:</mat-label>\n          <mat-select formControlName='status'>\n            <mat-option value=''>All Status</mat-option>\n            <mat-option value='Assigned'>Assigned</mat-option>\n            <mat-option value='Completed'>Completed</mat-option>\n            <mat-option value='Approved'>Approved</mat-option>\n            <mat-option value='Rejected'>Rejected</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div \n        class=\"requests-table-filters__section\"\n        fxLayout='row'\n        fxLayoutAlign='space-between end'\n        fxLayoutGap='16px'\n      >\n        <div\n          fxFlex='0 0 calc(50% - 8px)'\n        >  \n          <mat-form-field class='form-control' >\n            <mat-label>Request Date From:</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName='fromDate'>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div\n          fxFlex='0 0 calc(50% - 8px)'\n        >  \n          <mat-form-field class='form-control'>\n            <mat-label>Request Date To:</mat-label>\n            <input matInput [matDatepicker]=\"endDatePicker\" formControlName='endDate' [min]='minDate'>\n            <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n            <mat-datepicker #endDatePicker></mat-datepicker>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"requests-table-filters__section\">\n        <mat-form-field class='form-control'>\n          <mat-label>Assigned By:</mat-label>\n          <mat-select formControlName='employeeId'>\n            <mat-option *ngFor='let approver of approvers | async' [value]='approver.id'>{{ approver.first_name }} {{ approver.last_name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <div \n      class=\"request-table-filters__actions\"\n    >\n      <button mat-raised-button mat-dialog-close cdkFocusInitial type='button'>Close</button>\n      <button mat-raised-button color='warn' (click)='resetForm()' cdkFocusInitial type='button'>Reset</button>\n      <button mat-raised-button color='primary' type='submit'>Search</button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { DrafterService, DrafterTasksData } from 'src/app/core/services/drafter.service';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CompleteDrawingRequestComponent } from '../complete-drawing-request/complete-drawing-request.component';\nimport { RequestTableFilters, RequestTableFiltersComponent, RequestTableFiltersDialogData } from '../request-table-filters/request-table-filters.component';\nimport { DrawingRequestComponent, DrawingRequestDialogData } from 'src/app/request-drawings/drawing-request/drawing-request.component';\nimport _ from 'lodash';\n\n@Component({\n  selector: 'app-requests-table',\n  templateUrl: './requests-table.component.html',\n  styleUrls: ['./requests-table.component.scss']\n})\nexport class RequestsTableComponent implements OnInit {\n  @Input() employeeId;\n  @Output() onCompleteSuccess: EventEmitter<any> = new EventEmitter();\n\n  public drawingRequests: DrawingRequest[] = [];\n  public isLoading: Boolean = false;\n  public columnsToDisplay: Array<string> = [\n    'no', 'subject', 'drawing_no', 'drawingType', 'category', 'requestedBy', 'requestDate', \n    'targetDate', 'status', 'actions'\n  ];\n\n  get pageSizes(): Array<number> {\n    let defaultPageSizes = [\n      50,\n      100,\n      150\n    ];\n\n    if(this.tableData.total < 50) {\n      defaultPageSizes.unshift(this.tableData.total);\n    }\n\n    if(this.tableData.total > 150) {\n      defaultPageSizes.push(this.tableData.total);\n    }\n\n    return defaultPageSizes;\n  }\n\n  public tableData: DrafterTasksData = {\n    data: [],\n    total: 0,\n    currentPage: 1,\n  }\n\n  set pageNumber(pageNumber: number) {\n    this._pageNumber = pageNumber;\n\n    this.getData();\n  }\n\n  get pageNumber(): number {\n    return this._pageNumber;\n  }\n\n  private _pageNumber: number = 1;\n\n  _filters: RequestTableFilters = {\n    searchTerm: '',\n    status: 'Assigned',\n    fromDate: '',\n    endDate: '',\n    employeeId: '',\n  }\n\n  set filters(filters: RequestTableFilters) {\n    this._filters = filters;\n\n    this.getData();\n  }\n\n  get filters(): RequestTableFilters {\n    return this._filters;\n  }\n\n  @Input() set projectId(id) {\n    this._projectId = id;\n\n    this.getData();\n  } \n\n  get projectId() {\n    return this._projectId;\n  }\n\n  _projectId;\n\n  constructor(\n    private drafterService: DrafterService,\n    private userService: UserService,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {}\n\n  getData() {\n    this.isLoading = true;\n    this.tableData.data = [];\n\n    this.drafterService.getDrafterAssignedTasks(this.employeeId, this.projectId, {\n      searchTerm: this.filters.searchTerm,\n      status: this.filters.status,\n      endDate: this.filters.endDate,\n      fromDate: this.filters.fromDate,\n      employeeId: this.filters.employeeId,\n    }, {\n      page: this.pageNumber,\n    }).subscribe(res => {\n      this.tableData = res;\n\n      this.isLoading = false;\n    });\n  }\n\n  completeDrawingRequest(drawingRequest: DrawingRequest) {\n    const completeDrawingRequest = this.dialog.open(CompleteDrawingRequestComponent, {\n      width: '700px',\n      data: {\n        drawingRequestId: drawingRequest.id,\n      }\n    });\n\n    completeDrawingRequest.componentInstance.onCompleteSuccess.subscribe(() => {\n      this.getData();\n      this.onCompleteSuccess.emit();\n    });\n  }\n\n  viewDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      projectId: drawingRequest.drawing.projectId,\n      type: 'view',\n      isDrafter: true,\n      drawingRequest\n    }\n\n    const drawingRequestDialog = this.dialog.open(DrawingRequestComponent, {\n      width: '700px',\n      data: dialogData,\n    });\n  }\n\n  editDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      type: 'edit',\n      isDrafter: true,\n      drawingRequest\n      // projectId: this.projectId,\n    }\n\n    const drawingRequestDialog = this.dialog.open(DrawingRequestComponent, {\n      width: '700px',\n      data: dialogData,\n    });\n  }\n\n  filter(filters: RequestTableFilters) {\n    this.filters = filters;\n  }\n\n  generateStatusClass(status: String) {\n    const statusTransformed = _.kebabCase(status);\n\n    return `requests-table__status--${statusTransformed}`;\n  }\n\n  handlePaginatorChange($event) {\n    this.pageNumber = $event.pageIndex + 1;\n  }\n\n  openFilters() {\n    const filters = this.filters;\n\n    const data: RequestTableFiltersDialogData = {\n      filters,\n      projectId: this.projectId,\n    }\n\n    const dialog = this.dialog.open(RequestTableFiltersComponent, {\n      width: '700px',\n      data,\n    });\n\n    dialog.componentInstance.onFilterChange.subscribe(res => {\n      this.filter(res);\n    });\n  }\n}\n","<div class=\"request-table\">\n  <!-- <app-request-table-filters (onFilterChange)='filter($event)' defaultStatus='Assigned'></app-request-table-filters> -->\n  <div class=\"requests-table__actions\">\n    <button mat-stroked-button (click)='openFilters()'>\n      <mat-icon>filter_list</mat-icon>\n      Filter Requests\n    </button>\n  </div>\n  <table mat-table [dataSource]='tableData.data' class='requests-table full-width'>\n    <ng-container matColumnDef='no'>\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ i + 1 }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='requestedBy'>\n      <th mat-header-cell *matHeaderCellDef>Requester</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestedBy.getUserFullName() }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='subject'>\n      <th mat-header-cell *matHeaderCellDef>Subject</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.subject }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='drawing_no'>\n      <th mat-header-cell *matHeaderCellDef>For Drawing No.</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ task.drawing.currentDrawingNo }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='drawingType'>\n      <th mat-header-cell *matHeaderCellDef>Type</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ task.drawingType.type }} Drawing</td>\n    </ng-container>\n\n    <ng-container matColumnDef='category'>\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ task.drawing.category }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='requestDate'>\n      <th mat-header-cell *matHeaderCellDef>Request Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='targetDate'>\n      <th mat-header-cell *matHeaderCellDef>Target Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.targetDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n    \n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef='let task;'><span [class]='generateStatusClass(task.status)'>{{ task.status }}</span></td>\n    </ng-container>\n    \n    <ng-container matColumnDef='actions'>\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef='let drawingRequest;'>\n        <button mat-button [matMenuTriggerFor]='buildDrawingMenu'>\n          <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n        </button>\n        <mat-menu #buildDrawingMenu xPosition='before'>\n          <button mat-menu-item (click)='viewDrawingRequest(drawingRequest)'>View</button>\n          <button mat-menu-item (click)='editDrawingRequest(drawingRequest)'>Edit</button>\n          <button mat-menu-item (click)='completeDrawingRequest(drawingRequest)' *ngIf='drawingRequest.isAssigned'>Complete</button>\n        </mat-menu>\n      </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n  </table>\n  \n  <div \n    fxLayout='row'\n    fxLayoutAlign='center'\n    class=\"drafter__tasks-no-data\"\n    *ngIf='!isLoading && tableData.data.length === 0'\n  >\n    <p>No tasks found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"75\" *ngIf='isLoading'>\n    <svg:rect x=\"0\" y=\"5\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"20\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"35\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"50\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"65\" width=\"100%\" height=\"5\" />\n  </content-loader>\n\n  \n  <mat-paginator \n    [length]='tableData.total'\n    [pageSize]='tableData.data.length'\n    [pageSizeOptions]=\"pageSizes\"\n    (page)='handlePaginatorChange($event)'\n  ></mat-paginator>\n</div>\n\n","import { Component, OnInit, OnDestroy, ViewChild, Output, EventEmitter, ElementRef, Input } from '@angular/core';\nimport { DrawingCategoryService } from 'src/app/core/services/drawing-category.service';\nimport { DrawingCategory } from 'src/app/core/models/drawing-category';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { MatTable } from '@angular/material/table';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\nimport { ProjectCategory } from 'src/app/core/models/project-category';\n\n@Component({\n  selector: 'app-drawing-categories-table',\n  templateUrl: './drawing-categories-table.component.html',\n  styleUrls: ['./drawing-categories-table.component.scss']\n})\nexport class DrawingCategoriesTableComponent implements OnInit, OnDestroy {\n  @ViewChild('deleteConfirmation') deleteConfirmation: SwalComponent;\n  @ViewChild('table') table: MatTable<any>;\n\n  _projectId;\n  @Input() set projectId(id) {\n    this._projectId = id;\n\n    this.getProjectCategories();\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  loading: boolean = false;\n  isDataSubmitting: boolean = false;\n  categories: DrawingCategory[] = [];\n  columnsToDisplay: string[] = ['name', 'actions'];\n  selectedDeleteCategory: ProjectCategory;\n  selectedEditCategory: ProjectCategory;\n  editCategoryName: String;\n  \n  projectCategories: ProjectCategory[] = [];\n\n  @Output() onDeleteSuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onEditSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private drawingCategoryService: DrawingCategoryService,\n    private projectCategoryService: ProjectCategoryService,\n    private elementRef: ElementRef<HTMLElement>,\n  ) { }\n\n  ngOnInit(): void {\n    this.getProjectCategories();\n  }\n\n  ngOnDestroy() {}\n\n  getProjectCategories() {\n    this.loading = true;\n\n    this.projectCategoryService.getCategories(this.projectId).subscribe(res => {\n      this.projectCategories = res;  \n\n      this.loading = false;\n    });\n  }\n\n  getCategories() {\n    this.loading = true;\n\n    this.drawingCategoryService.getCategories().subscribe(res => {\n      this.categories = res;\n      this.loading = false;\n    });\n  }\n\n  confirmDelete(category: ProjectCategory) {\n    this.deleteConfirmation.fire();\n\n    this.selectedDeleteCategory = category;\n  }\n\n  deleteCategory() {\n    this.projectCategoryService.deleteCategory(this.projectId, this.selectedDeleteCategory.id).subscribe(res => {\n      this.selectedDeleteCategory = null;\n\n      this.onDeleteSuccess.emit();\n    });\n  }\n\n  editCategory(category: ProjectCategory) {\n    this.editCategoryName = category.categoryName;\n    this.selectedEditCategory = category;\n\n    setTimeout(() => {\n      this.elementRef.nativeElement.querySelector(`#table-row-${category.id}`).querySelector('input').focus();\n    }, 100)\n  }\n\n  isBeingEdited(category): boolean {\n    return this.selectedEditCategory && this.selectedEditCategory.id === category.id;\n  }\n\n  saveCategory() {\n    this.isDataSubmitting = true;\n\n    const body = {\n      category_name: this.editCategoryName\n    };\n\n    this.projectCategoryService.editCategory(this.projectId, this.selectedEditCategory.id, body).subscribe(res => {\n      this.isDataSubmitting = false;\n\n      this.onEditSuccess.emit();\n    });\n  }\n\n  resetEdit() {\n    this.selectedEditCategory = null;\n  }\n}\n","<table mat-table [dataSource]=\"projectCategories\" class='drawing-categories-table full-width' #table>\n  <ng-container matColumnDef='name'>\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let category; let i = index;\" >\n      <span *ngIf='!isBeingEdited(category)'>{{ category.categoryName }}</span>\n      <mat-form-field *ngIf='isBeingEdited(category)'>\n        <input matInput type=\"text\" [(ngModel)]='editCategoryName'>\n      </mat-form-field>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef='actions'>\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let category; let i = index;\" class='drawing-categories-table__actions'>\n      <div class=\"drawing-categories-table__actions--default\" *ngIf='!selectedEditCategory || !isBeingEdited(category)'>\n        <button mat-icon-button color='accent' (click)='editCategory(category)'>\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-icon-button color='warn' (click)='confirmDelete(category)'>\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n      <div class=\"drawing-categories-table__actions--actions\" *ngIf='isBeingEdited(category)'>\n        <div class=\"drawing-categories-table__progress-container\" *ngIf='isDataSubmitting'>\n          <mat-spinner diameter='20' class='drawing-categories-table__progress'></mat-spinner>\n        </div>\n        <button mat-icon-button color='accent' (click)='saveCategory()' [disabled]='isDataSubmitting' *ngIf='!isDataSubmitting'>\n          <mat-icon>check</mat-icon>\n        </button>\n        <button mat-icon-button color='warn' (click)='resetEdit()' [disabled]='isDataSubmitting' *ngIf='!isDataSubmitting'>\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n    </td>\n  </ng-container>\n  \n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let category; columns: columnsToDisplay;\" [id]='\"table-row-\" + category.id'></tr>\n</table> \n\n<div *ngIf='!projectCategories.length && !loading'>\n  <p class='text-center'>\n    <strong>No categories for this project.</strong>\n  </p>\n</div>\n\n<swal\n  #deleteConfirmation\n  icon='warning'\n  text=\"Are you sure you want to delete this category?\"\n  showCancelButton='true'\n  (confirm)='deleteCategory()'\n></swal>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrawingCategoriesTableComponent } from './drawing-categories-table/drawing-categories-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n\n@NgModule({\n  declarations: [DrawingCategoriesTableComponent],\n  imports: [\n    CommonModule,\n    ContentLoaderModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    SweetAlert2Module,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n  ],\n  exports: [\n    DrawingCategoriesTableComponent,\n  ]\n})\nexport class DrawingCategoriesModule { }\n","import { Component, OnInit, Output, EventEmitter, ViewChild, Input, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DrawingCategoryService } from 'src/app/core/services/drawing-category.service';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.scss']\n})\nexport class AddCategoryComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent;\n  isDataSubmitting: Boolean;\n  categoryForm: FormGroup;\n  errors = {\n    category_name: '',\n  };\n\n  @Output() formSubmitted: EventEmitter<any> = new EventEmitter();\n  @Output() onDeleteSuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onEditSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<AddCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AddCategoryData,\n    private formBuilder: FormBuilder,\n    private categoryService: DrawingCategoryService,\n    private projectCategoryService: ProjectCategoryService,\n  ) { \n    this.categoryForm = this.formBuilder.group({\n      category_name: '',\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  closeDialog($event = null): void {\n    if ($event) $event.preventDefault()\n\n    this.dialogRef.close()\n  }\n\n  onFormSubmit($event) {\n    $event.preventDefault()\n\n    this.isDataSubmitting = true\n\n    this.projectCategoryService.addCategory(this.data.projectId, this.categoryForm.value)\n      .pipe(\n        catchError((err: HttpErrorResponse) => {\n          const keys = Object.keys(err.error.data);\n\n          keys.forEach(key => {\n            switch(key) {\n              case 'category_name':\n                this.categoryForm.controls['category_name'].setErrors({\n                  invalid: true,\n                });\n\n                this.errors['category_name'] = err.error.data[key][0];\n\n                break;\n            }\n          });\n\n          this.isDataSubmitting = false;\n          \n          return throwError(err)\n        })\n      )\n      .subscribe(res => {\n        console.log(res)\n        this.isDataSubmitting = false\n        this.successConfirmation.fire()\n      }, (err) => {\n        console.log(err.data)\n      })\n  }\n\n  handleFormSubmit() {\n    this.closeDialog()\n    this.formSubmitted.emit() \n  }\n\n  handleOnDeleteSuccess() {\n    this.closeDialog();\n    this.onDeleteSuccess.emit();\n  }\n\n  handleOnEditSuccess() {\n    this.closeDialog();\n    this.onEditSuccess.emit();\n  }\n}\n\ninterface AddCategoryData {\n  projectId: String | Number;\n}\n","<h2 mat-dialog-title>Categories</h2>\n<div mat-dialog-content class='add-category-form'>\n  <p><strong>Add New Category</strong></p>\n  <form [formGroup]=\"categoryForm\" (submit)=\"onFormSubmit($event)\">\n    <mat-grid-list rowHeight='80px' cols='2' gutterSize='16px'>\n      <mat-grid-tile class='add-category-form__col'>\n        <p>\n          <mat-form-field class='add-category-form__form-group'>\n            <mat-label>Category Name: </mat-label>\n            <input type=\"text\" matInput formControlName=\"category_name\">\n            <mat-error *ngIf='errors.category_name'>\n              {{errors.category_name}}\n            </mat-error>\n          </mat-form-field>\n          <small></small>\n        </p>\n      </mat-grid-tile>\n      <mat-grid-tile class='add-category-form__col'>\n        <p>\n          <button mat-raised-button color='primary' type='submit' [disabled]=\"isDataSubmitting\">\n            Save\n          </button>\n        </p>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </form>\n  <p class='mb-0'><strong>Categories:</strong></p>\n  <app-drawing-categories-table \n    (onDeleteSuccess)='handleOnDeleteSuccess()'\n    [projectId]='data.projectId'\n    (onEditSuccess)='handleOnEditSuccess()'>\n  </app-drawing-categories-table>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color='warn' (click)='closeDialog($event)'>\n    Close\n  </button>\n  &nbsp; &nbsp;\n</div>\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n  text=\"Category successfully added!\"\n  (close)='handleFormSubmit()'\n>\n</swal>","import { Component, OnInit, ViewChild, Inject, Input, EventEmitter, Output } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { DrawingService } from '../shared/drawing.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport moment from 'moment'\nimport { DatePipe } from '@angular/common';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\n\ninterface DialogData {\n  projectId: number | string,\n  type?: ProjectDrawingType,\n}\n@Component({\n  selector: 'app-add-drawing',\n  templateUrl: './add-drawing.component.html',\n  styleUrls: ['./add-drawing.component.scss']\n})\nexport class AddDrawingComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent\n  @ViewChild('drawingFile') private uploadFile\n\n  drawingForm;\n  projectId;\n  categories$: Observable<any>;\n  addedDrawing;\n  file;\n  isDataSubmitting: Boolean;\n  test;\n  useCurrentDrawingNo: false;\n  subscription: any;\n\n  @Output() formSubmitted: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    public dialogRef: MatDialogRef<AddDrawingComponent>,\n    private formBuilder: FormBuilder, \n    private drawingService: DrawingService,\n    private projectCategoryService: ProjectCategoryService,\n    private date: DatePipe,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) { \n    this.drawingForm = this.formBuilder.group({\n      drawing_title: new FormControl('', [Validators.required]),\n      drawing_title_date: new FormControl(new Date(), [Validators.required]),\n      drawing_no: new FormControl('', [Validators.required]),\n      drawing_category_id: new FormControl(null, [Validators.required]),\n      drawing_file: new FormControl(null, [Validators.required]),\n      drawing_target_date: new FormControl(new Date(), [Validators.required]),\n      current_drawing_no: new FormControl('', [Validators.required]),\n    })\n\n    this.test = new FormControl(null);\n    this.projectId = this.data.projectId;\n  }\n\n  ngOnInit() {\n    this.categories$ = this.projectCategoryService.getCategories(this.projectId)\n  }\n\n  closeDrawing($event = null) {\n    if($event) $event.preventDefault()\n\n    this.dialogRef.close()\n  }\n\n  addDrawing() {\n    this.isDataSubmitting = true\n    let data = this.drawingForm.getRawValue()\n\n    const drawing_title_date = this.date.transform(data.drawing_title_date, \"yyyy-MM-dd\")\n    const drawing_target_date = this.date.transform(data.drawing_target_date, \"yyyy-MM-dd\")\n\n    data = {\n      ...data,\n      drawing_title_date,\n      drawing_target_date,\n      project_id: this.projectId,\n    }\n    debugger\n    this.drawingService.addDrawing(data)\n      .subscribe(res => {\n        this.addedDrawing = res.data;\n        this.isDataSubmitting = false\n        this.successConfirmation.fire()\n      })\n  }\n\n  triggerUploadFile() {\n    this.uploadFile.open()\n  }\n\n  handleFormSubmit() {\n    this.closeDrawing()\n    this.formSubmitted.emit(this.addedDrawing)\n  }\n\n  // TODO: Do this better\n  onUseCurrentDrawingNoToggle(value) {\n    if (value) {\n      this.drawingForm.get('current_drawing_no').disable();\n      this.drawingForm.get('current_drawing_no').setValue(this.drawingForm.get('drawing_no').value);\n      this.subscription = this.drawingForm.get('drawing_no').valueChanges.subscribe(res => {\n        this.drawingForm.get('current_drawing_no').setValue(res);\n      });\n    } else {\n      this.drawingForm.get('current_drawing_no').enable();\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<h2 mat-dialog-title>Add Tender Drawing</h2>\n<mat-dialog-content>\n  <div class=\"add-drawing-form\">\n    <form [formGroup]='drawingForm' enctype=\"multipart/form-data\">\n            <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px'>\n                <mat-grid-tile class=\"add-drawing-form__col\">\n                    <p>\n                        <mat-form-field class='add-drawing-form__form-group'>\n                            <mat-label>Date:</mat-label>\n                            <input matInput [matDatepicker]=\"drawingDate\" formControlName='drawing_title_date'>\n                            <mat-datepicker-toggle matSuffix [for]=\"drawingDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #drawingDate></mat-datepicker>\n                        </mat-form-field>\n                    </p>\n                </mat-grid-tile>\n                <mat-grid-tile class=\"add-drawing-form__col add-drawing-form__col--category\">\n                  <p>\n                      <mat-form-field class='add-drawing-form__form-group'>\n                          <mat-label>Category:</mat-label>\n                          <mat-select formControlName='drawing_category_id'>\n                              <mat-option *ngFor='let category of categories$ | async' [value]='category.id'>{{ category.categoryName }}</mat-option>\n                          </mat-select>\n                      </mat-form-field>\n                  </p>\n              </mat-grid-tile>\n            </mat-grid-list>\n            <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px'>\n                <mat-grid-tile class=\"add-drawing-form__col\">\n                    <p>\n                        <mat-form-field class='add-drawing-form__form-group'>\n                            <mat-label>Drawing Title:</mat-label>\n                            <input matInput formControlName='drawing_title'>\n                        </mat-form-field>\n                    </p>   \n                </mat-grid-tile>\n                <mat-grid-tile class=\"add-drawing-form__col\">\n                    <p>\n                        <mat-form-field class='add-drawing-form__form-group'>\n                            <mat-label>Tender Drawing No:</mat-label>\n                            <input matInput formControlName='drawing_no'>\n                        </mat-form-field>\n                    </p>   \n                </mat-grid-tile>\n            </mat-grid-list>\n            <div\n              fxLayout='row'\n              fxLayoutGap='16px'\n              fxLayoutAlign='space-between center'>\n              <div fxFlex='0 0 calc(50% - 8px)'>\n                <mat-form-field class='add-drawing-form__form-group'>\n                  <mat-label>Current Drawing No:</mat-label>\n                  <input matInput formControlName='current_drawing_no'>\n                </mat-form-field>\n                <mat-checkbox [(ngModel)]='useCurrentDrawingNo' [ngModelOptions]=\"{standalone: true}\" (ngModelChange)='onUseCurrentDrawingNoToggle($event)'>Use Tender Drawing No.</mat-checkbox>\n              </div>\n            </div>\n\n            <div\n              fxLayout='row'\n              fxLayoutGap='16px'\n              fxLayoutAlign='space-between center'\n            >\n              <div fxFlex='0 0 calc(50% - 8px)'>\n                <mat-form-field class='add-drawing-form__form-group file-input-field'>\n                  <mat-label>Drawing File:</mat-label>\n                  <upload-input formControlName='drawing_file'></upload-input>\n                </mat-form-field>\n              </div>\n            </div>\n           \n            <!-- <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px'>\n              <mat-grid-tile>\n              </mat-grid-tile>\n              <mat-grid-tile>\n                <mat-form-field class='add-drawing-form__form-group file-input-field'>\n                  <mat-label>Drawing File:</mat-label>\n                  <upload-input formControlName='drawing_file'></upload-input>\n                </mat-form-field>\n              </mat-grid-tile>\n            </mat-grid-list> -->\n            <div class=\"add-drawing-form__shop-drawing-container\" *ngIf='data.type'>\n                <mat-grid-list cols='2' rowHeight='150px'>\n                    <mat-grid-tile>\n                        <div class=\"shop-drawing\">\n                            <p class=\"shop-drawing__title\">{{ data.type.type }} Drawing</p>\n                            <p>\n                                <mat-form-field class='add-drawing-form__form-group'>\n                                    <mat-label>{{ data.type.type }} Drawing Target Date:</mat-label>\n                                    <input matInput [matDatepicker]=\"drawingTargetDate\" formControlName='drawing_target_date'>\n                                    <mat-datepicker-toggle matSuffix [for]=\"drawingTargetDate\"></mat-datepicker-toggle>\n                                    <mat-datepicker #drawingTargetDate></mat-datepicker>\n                                </mat-form-field>\n                            </p>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n            </div>\n        </form>\n      </div>\n    </mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-raised-button color='warn' (click)='closeDrawing($event)'>Cancel</button>&nbsp;\n    <button mat-raised-button color='primary' type='submit' (click)='addDrawing()' [disabled]='!drawingForm.valid || isDataSubmitting'>Add</button>\n</mat-dialog-actions>\n\n<swal \n    #successConfirmation\n    title=\"Success\"\n    icon='success'\n    text=\"Drawing successfully added!\"\n    (close)='handleFormSubmit()'\n>\n</swal>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DrawingService } from '../shared/drawing.service';\nimport { map } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\nimport { AuditTrail, AuditEvents } from 'src/app/core/models/audit-trail';\nimport { User } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-audit-trail',\n  templateUrl: './audit-trail.component.html',\n  styleUrls: ['./audit-trail.component.scss']\n})\nexport class AuditTrailComponent implements OnInit {\n  isDataLoading: Boolean = false\n  history: Array<any> = [];\n  displayedColumns = ['id', 'event', 'keysUpdated', 'date', 'time', 'user']\n  drawing;\n\n  constructor(\n    public dialogRef: MatDialogRef<AuditTrailComponent>,\n    private datePipe: DatePipe,\n    private drawingService: DrawingService,\n    @Inject(MAT_DIALOG_DATA) public data: AuditTrailDialogData,\n  ) { \n    this.drawing = data.drawing\n  }\n\n  ngOnInit(): void {\n    this.getData()\n  }\n\n  getData(): void {\n    this.isDataLoading = true\n\n    this.drawingService.getHistory(this.data.drawing.id, this.data.type)\n      .subscribe(\n        res => {\n          this.history = res.data.map(audit => {\n            const { \n              user ,\n              drawing_no,\n              drawing_title,\n              created_at,\n              old_values,\n              new_values\n            } = audit\n\n            const changedBy = new User({\n              id: user.id,\n              employeeId: user.employee.id,\n              avatar: user.employee.avatar ? user.employee.avatar : '',\n              roleId: user.employee.role_id,\n              companyId: user.employee.company_id,\n              firstName: user.employee.first_name,\n              lastName: user.employee.last_name\n            });\n            const event = AuditEvents[audit.event.toUpperCase()];\n\n            return new AuditTrail(\n              drawing_no,\n              drawing_title,\n              created_at,\n              changedBy,\n              event,\n              old_values,\n              new_values,\n            );\n          });\n\n          this.isDataLoading = false\n        },\n        err => {\n          console.log(err)\n          this.isDataLoading = false\n        }\n      )\n  }\n\n  closeDialog() {\n    this.dialogRef.close()\n  }\n}\n\ninterface AuditTrailDialogData {\n  drawing: {\n    id: string;\n    drawing_title: string;\n    drawing_no: string,\n  },\n  type: string | null,\n}\n","<h2 mat-dialog-title>History</h2>\n<div class='audit-trail' mat-dialog-content>\n  <div class=\"audit-trail__loader\" *ngIf='isDataLoading'>\n    <mat-progress-spinner\n      mode='indeterminate'\n      diameter='40'\n    ></mat-progress-spinner>\n  </div>\n  <div class=\"audit-trail__content\" *ngIf='!isDataLoading'>\n    <div class=\"audit-trail__header\">\n      <mat-grid-list cols='4' rowHeight='70px' gutterSize='16px'>\n        <mat-grid-tile class='audit-trail__col'>\n          <p>\n            <mat-form-field>\n              <mat-label>Drawing Title: </mat-label>\n              <input type=\"text\" disabled matInput readonly [value]='drawing.drawing_title'>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class='audit-trail__col'>\n          <p>\n            <mat-form-field>\n              <mat-label>Drawing No: </mat-label>\n              <input type=\"text\" disabled matInput readonly [value]='drawing.drawing_no'>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n    <table mat-table [dataSource]=\"history\" class='audit-trail__table'>\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>No.</th>\n        <td mat-cell *matCellDef=\"let data; let i = index\">{{i + 1}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"event\">\n        <th mat-header-cell *matHeaderCellDef>Action </th>\n        <td mat-cell *matCellDef=\"let data\">{{data.event | titlecase}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"keysUpdated\">\n        <th mat-header-cell *matHeaderCellDef>Updated Values </th>\n        <td mat-cell *matCellDef=\"let data\">{{ data.displayChangedKeys().length ? data.displayChangedKeys() : '-' }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef>Date</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.date | date:'dd-MM-yyyy'}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"time\">\n        <th mat-header-cell *matHeaderCellDef>Time</th>\n        <td mat-cell *matCellDef=\"let data\">{{data.date | date:'shortTime'}}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"user\">\n        <th mat-header-cell *matHeaderCellDef>Done By</th>\n        <td mat-cell *matCellDef=\"let data\">{{ data.doneBy.getUserFullName() }}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns; let i = index;\"></tr>\n    </table>\n    <button mat-raised-button color='warn' (click)='closeDialog()'>Close</button>\n  </div>\n</div>","import { Component, OnInit, Input, OnDestroy, HostBinding, Self, Optional, ElementRef } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { DrawingService } from '../shared/drawing.service';\nimport { map } from 'rxjs/operators';\nimport { FormControl, NgControl, ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ProjectCategoryService } from 'src/app/core/services/project-category.service';\n\n@Component({\n  selector: 'app-category-select',\n  templateUrl: './category-select.component.html',\n  styleUrls: ['./category-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: CategorySelectComponent}]\n})\nexport class CategorySelectComponent implements MatFormFieldControl<string>, OnInit, OnDestroy {\n  static nextId = 0;\n\n  @HostBinding() id = `category-select-${CategorySelectComponent.nextId++}`;\n  categories$: Observable<any>;\n  form;\n  category = new FormControl(null);\n  stateChanges = new Subject<void>();\n  focused = false\n  errorState = false\n  controlType = 'category-select'\n  touched = false;\n  _projectId;\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() set projectId(id) {\n    this._projectId = id;\n\n    this.getProjectCategories();\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  @Input() shouldShowAllOption: boolean = false\n\n  @Input()\n  get value(): string | null {\n    return this.category.value\n  }\n\n  set value(categoryId: string) {\n    this.category.setValue(categoryId)\n    this.stateChanges.next()\n  }\n\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this.category.disable() : this.category.enable();\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  get empty() {\n    return !this.category.value\n  }\n\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  constructor(\n    private drawingService: DrawingService,\n    private projectDrawingService: ProjectCategoryService,\n    @Optional() @Self() public ngControl: NgControl,\n    private fm: FocusMonitor,\n    private elRef: ElementRef<HTMLElement>\n  ) { \n    this.category = new FormControl(null);\n\n    // Replace the provider from above with this.\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      console.log(origin)\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit(): void {\n    this.categories$ = this.projectDrawingService.getCategories(this.projectId)\n  }\n\n  ngOnDestroy(): void {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n  }\n\n  onContainerClick(event: MouseEvent) {\n    this.focused = true\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this.elRef.nativeElement.querySelector('div').focus();\n    }\n  }\n\n  onChange = (delta: any) => {};\n  \n  onTouched = () => {\n    console.log('touched')\n    this.touched = true;\n  };\n\n  getProjectCategories() {\n    this.categories$ = this.projectDrawingService.getCategories(this.projectId)\n  }\n\n  writeValue(delta: any): void {\n    this.category.setValue(delta);\n    this.stateChanges.next()\n  }\n\n  registerOnChange(fn: (v: any) => void): void {\n    this.category.valueChanges.pipe().subscribe(fn)\n  }\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n","<div class='category-select'>\n  <mat-select [formControl]='category'>\n    <!-- Handle \"All\" option better -->\n    <mat-option *ngIf='shouldShowAllOption'>All</mat-option>\n    <mat-option *ngFor='let category of categories$ | async' [value]='category.id'>{{ category.categoryName }}</mat-option>\n  </mat-select>\n</div>","import { Component, OnDestroy, OnInit, Input, Optional, Self, ElementRef, forwardRef } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators'\nimport { DrawingService } from '../shared/drawing.service';\nimport { FormBuilder, FormControl, NgControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n\nclass DrawingCategory {\n  constructor(public categoryId: number, categoryName: string) { }\n}\n\n@Component({\n  selector: 'app-drawing-category-select',\n  templateUrl: './drawing-category-select.component.html',\n  styleUrls: ['./drawing-category-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: DrawingCategorySelectInput, \n  }],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class DrawingCategorySelectInput implements MatFormFieldControl<number>, OnInit, ControlValueAccessor{\n  static nextId = 0;\n\n  stateChanges = new Subject<void>()\n  categories$: Array<any> = []\n  focused = false\n  id = `drawing-category-select-${DrawingCategorySelectInput.nextId++}`;\n  selectedId\n  errorState = false\n  describedBy = ''\n  isLoading = false\n  myControl = new FormControl()\n  filteredOptions: Observable<Object[]>\n  onChange: (_: any) => void = (_: any) => {};\n  onTouched: () => void = () => {};\n\n\n  get empty() {\n    return !this.selectedId\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  public _placeholder: string;\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  @Input()\n  get value(): number | null {\n    if (this.selectedId) {\n      return this.selectedId\n    }\n\n    return null\n  }\n\n  set value(category: number | null) {\n    // const { categoryId } = category || new DrawingCategory(0)\n    this.selectedId = category\n  }\n\n  constructor(\n    private drawingService: DrawingService,\n    @Optional() @Self() public ngControl: NgControl,\n    private _elementRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor\n  ) {\n    this.selectedId = new FormControl(0)\n    fm.monitor(_elementRef, true).subscribe(origin => {\n      this.focused = !!origin\n      console.log(this.shouldLabelFloat)\n      this.stateChanges.next()\n    })\n\n    // Replace the provider from above with this.\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.isLoading = true\n    this.drawingService.getCategories().subscribe(res => {\n      this.categories$ = res.data\n      this.filteredOptions = this.myControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => this._filter(value))\n        );\n      this.isLoading = false\n    })\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  _filter(value: String): Object[] {\n    const filterValue  = value.toLowerCase()\n\n    const categories = this.categories$.filter(category => category.category_name.toLowerCase().includes(filterValue))\n\n    return categories\n  }\n  \n\n  writeValue(value: number) {\n    this.selectedId = value\n    this.stateChanges.next()\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","<div class=\"drawing-category-select\">\n    <input type=\"text\" [formControl]='myControl' matInput [matAutocomplete]=\"category\" placeholder='Start typing to search for a category...'>\n    <mat-autocomplete #category=\"matAutocomplete\">\n      <mat-option *ngFor='let category of filteredOptions | async' [value]='category.category_name'>{{ category.category_name }}</mat-option>\n    </mat-autocomplete>\n</div>","import { Component, OnInit, Output, EventEmitter, Inject, Input } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { DrawingFilters } from 'src/app/core/models/drawing-filters';\nimport _ from 'lodash';\nimport { ProjectCategory } from 'src/app/core/models/project-category';\n\n@Component({\n  selector: 'app-drawing-filters',\n  templateUrl: './drawing-filters.component.html',\n  styleUrls: ['./drawing-filters.component.scss']\n})\nexport class DrawingFiltersComponent implements OnInit {\n  filters: FormGroup;\n  @Output() onFormSubmit: EventEmitter<DrawingFilters> = new EventEmitter;\n\n  constructor(\n    private dialogRef: MatDialogRef<DrawingFiltersComponent>,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: DrawingFiltersDialogData,\n  ) {\n    this.filters = this.formBuilder.group({\n      searchQuery: new FormControl(this._extractFilterValues('searchQuery')),\n      category: new FormControl(this._extractFilterValues('category')),\n      uploadedBy: new FormControl(this._extractFilterValues('uploadedBy')),\n    });\n\n    this.data.filters.typeDrawingStatus.forEach((filter) => {\n      const formControlName = this.generateFormControlName(filter.type);\n      this.filters.addControl(formControlName, new FormControl(filter.value));\n    });\n  }\n\n  ngOnInit(): void {}\n\n  resetFilters() {\n    this.filters.reset();\n  }\n\n  handleFormSubmit() {\n    const filterFormValue = this.filters.value;\n\n    const {\n      category,\n      uploadedBy,\n      searchQuery,\n    } = filterFormValue;\n\n    const typeDrawingStatus = this.data.filters.typeDrawingStatus.map((value, key) => {\n      const formKey = this.generateFormControlName(value.type);\n\n      return {\n        type: value.type,\n        label: value.label,\n        value: filterFormValue[formKey]\n      }\n    });\n\n    this.onFormSubmit.emit({\n      category,\n      uploadedBy,\n      searchQuery,\n      typeDrawingStatus,\n    });\n\n    this.dialogRef.close();\n  }\n\n  // Make this a filter\n  toCamelCase(string) {\n    return _.camelCase(string);\n  }\n\n  capitalize(string) {\n    return _.startCase(string)\n  }\n\n  private _extractFilterValues(key) {\n    return this.data && this.data.filters ? this.data.filters[key] : '';\n  }\n\n  generateFormControlName(typeId) {\n    return `status_${typeId}`;\n  }\n}\n\nexport interface DrawingFiltersDialogData {\n  filters: DrawingFilters;\n  categories: ProjectCategory[];\n}\n","<div class=\"drawing-filters\">\n  <form [formGroup]='filters' (submit)='handleFormSubmit()'>\n    <div mat-dialog-header>\n      <h1 mat-dialog-title>Filter Drawings</h1>\n    </div>\n    <div mat-dialog-content>\n      <div\n        fxLayout='row'\n        fxLayoutGap='16px'\n        fxLayoutAlign='space-between flex-start'\n      >\n        <mat-form-field class='form-control'>\n          <mat-label>Search Term</mat-label>\n          <input matInput formControlName='searchQuery' placeholder='Search for a drawing number or title'/>\n        </mat-form-field>\n      </div>\n      <div\n        fxLayout='row'\n        fxLayoutGap='16px'\n        fxLayoutAlign='space-between flex-start'\n      >\n        <div fxFlex='0 0 calc(50% - 16px)'>\n          <mat-form-field class='form-control'>\n            <mat-label>Category</mat-label>\n            <mat-select  formControlName='category'>\n              <mat-option value=''>\n                All\n              </mat-option>\n              <mat-option *ngFor='let category of data.categories' [value]='category.id'>\n                {{ category.categoryName }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div fxFlex='0 0 calc(50% - 16px)'>\n          <mat-form-field class='form-control'>\n            <mat-label>Uploaded By</mat-label>\n            <input matInput formControlName='uploadedBy'/>\n          </mat-form-field>\n        </div>\n      </div>\n      <div\n        fxLayout='row wrap'\n        fxLayoutGap='16px'\n        fxLayoutAlign='space-between flex-start'\n      >\n        <div \n          *ngFor='let filter of data.filters.typeDrawingStatus'\n          class='drawing-filters__type-drawing-filter'\n          fxFlex='0 0 calc(50% - 16px)'\n        >\n          <mat-form-field class='form-control'>\n            <mat-label>{{ capitalize(filter.label) }} Drawing Status</mat-label>\n            <mat-select [formControlName]='generateFormControlName(filter.type)'>\n              <mat-option value=''>All</mat-option>\n              <mat-option value='Submitted'>Submitted</mat-option>\n              <mat-option value='ReSubmitted'>ReSubmit</mat-option>\n              <mat-option value='Approved'>Approved</mat-option>\n              <mat-option value='Rejected'>Rejected</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <!-- <div fxFlex='0 0 calc(50% - 16px)'>\n          <mat-form-field class='form-control'>\n            <mat-label>As Built Drawing Status</mat-label>\n            <mat-select formControlName='asBuiltDrawingStatus'>\n              <mat-option value=''>All</mat-option>\n              <mat-option value='Submitted'>Submitted</mat-option>\n              <mat-option value='ReSubmitted'>ReSubmit</mat-option>\n              <mat-option value='Approved'>Approved</mat-option>\n              <mat-option value='Rejected'>Rejected</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div> -->\n      </div>\n    </div>\n    <div mat-dialog-actions class='drawing-filters__actions'>\n      <button mat-raised-button color='primary' type='submit'>Apply Filters</button>\n      <button mat-raised-button color='warn' type='button' (click)='resetFilters()'>Reset Filters</button>\n      <button mat-raised-button mat-dialog-close type='button'>Cancel</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ProjectConfiguration } from 'src/app/core/models/project-configuration';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { SwiperConfigInterface } from 'ngx-swiper-wrapper';\n\n@Component({\n  selector: 'app-drawing-summary-list',\n  templateUrl: './drawing-summary-list.component.html',\n  styleUrls: ['./drawing-summary-list.component.scss']\n})\nexport class DrawingSummaryListComponent implements OnInit {\n  @Input() projectId: String | Number;\n\n  public loading: boolean = false;\n  public drawingTypeSummaries: Array<any> = [];\n  public swiperConfig: SwiperConfigInterface = {\n    slidesPerView: 3,\n    slidesOffsetAfter: 30,\n    slidesOffsetBefore: 30,\n    navigation: true,\n    loop: true,\n  } \n\n  constructor(\n    private projectService: ProjectsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n\n    this.projectService.getProjectDrawingTypeSummary(this.projectId).subscribe(res => {\n      this.drawingTypeSummaries = res;\n      this.loading = false;\n    });\n  }\n}\n","<swiper \n  [config]=\"swiperConfig\"\n  class=\"drawing-summary-list\"\n>\n  <div \n    class=\"drawing-summary-list__col\"\n    *ngFor='let summary of drawingTypeSummaries'\n  >\n    <app-drawing-summary\n      [summary]='summary'\n      [title]='summary.type'\n      class='drawing-summary-list__summary'\n    ></app-drawing-summary>\n  </div>\n</swiper>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-drawing-summary',\n  templateUrl: './drawing-summary.component.html',\n  styleUrls: ['./drawing-summary.component.scss']\n})\nexport class DrawingSummaryComponent {\n  private _title: string;\n\n  @Input() summary: SummaryInterface;\n  @Input()\n  get title() {\n    return this._title;\n  }\n\n  set title(value: string) {\n    this._title = value.replace(/-/g, \" \");\n  }\n\n  constructor() { }\n}\n\ninterface SummaryInterface {\n  approved: string | number;\n  for_approval: string | number;\n  re_submit: string | number;\n  rejected: string | number;\n  submitted: string | number;\n  total_drawings: string | number;\n  total_submitted: string | number;\n  type?: string;\n}","<h4 class='summary-title'><mat-icon>list_alt</mat-icon>{{ title | titlecase }} Summary</h4>\n<mat-card class='summary-card'>\n  <mat-card-content>\n    <div class=\"summary\">\n      <p><span>For approval:</span> {{ summary ? summary.for_approval : '-' }} </p>\n      <p><span>Total Drawings:</span> {{ summary ? summary.total_drawings : '-' }} </p>\n      <p><span>Submitted:</span> {{ summary ? summary.submitted : '-' }}</p>\n      <p><span>Resubmit:</span> {{ summary ? summary.re_submit : '-' }}</p>\n      <p><span>Approved:</span> {{ summary ? summary.approved : '-' }}</p>\n      <p><span>Rejected:</span> {{ summary ? summary.rejected : '-' }}</p>\n      <p><span>Total Submitted:</span> {{ summary ? summary.total_submitted : '-' }}</p>\n    </div>\n  </mat-card-content>\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { DrawingService } from '../shared/drawing.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\n\n@Component({\n  selector: 'app-drawing-table-drawing-target-date',\n  templateUrl: './drawing-table-drawing-target-date.component.html',\n  styleUrls: ['./drawing-table-drawing-target-date.component.scss']\n})\nexport class DrawingTableDrawingTargetDateComponent implements OnInit {\n  targetDate: String | Number;\n  loading: Boolean = true;\n\n  @Input() drawing;\n  @Input() type: ProjectDrawingType;\n\n  constructor(\n    private drawingService: DrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getTypeDrawingTargetDate();\n  }\n\n  getTypeDrawingTargetDate() {\n    this.loading = true;\n    this.drawingService.getTypeDrawingTargetDate(this.drawing.id, this.type.id).subscribe(res => {\n      this.targetDate = res ? res.target_date : '';\n      this.loading = false;\n    });\n  }\n\n}\n","<div class=\"target-date\">\n  <div class=\"target-date__content\" *ngIf='!loading'>\n    <ng-container>\n      <p *ngIf='targetDate'>{{ targetDate | date:'dd-MM-yyyy' }}</p>\n      <p *ngIf='!targetDate && drawing.drawing_target_date'>{{ drawing.drawing_target_date | date:'dd-MM-yyyy' }}</p>\n      <p *ngIf='!targetDate && !drawing.drawing_target_date'>-</p>\n    </ng-container>\n  </div>\n  <div class=\"target-date__loader\" *ngIf='loading'>\n    <content-loader [style]='{width: \"100%\"}' height=\"50\" *ngIf='loading'>\n      <svg:rect x=\"0\" y=\"10\" width=\"100%\" height=\"15\" />\n    </content-loader>\n  </div>\n</div>\n","import { Component, OnInit, Inject, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\nimport { DrafterAdapter } from 'src/app/core/adapters/drafter.adapter';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DatePipe } from '@angular/common';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-drawing-table-request-drawing',\n  templateUrl: './drawing-table-request-drawing.component.html',\n  styleUrls: ['./drawing-table-request-drawing.component.scss']\n})\nexport class DrawingTableRequestDrawingComponent implements OnInit {\n  loading: Boolean = false;\n  isSubmitting: Boolean = false;\n  drafters: Array<Drafter> = [];\n  requestDrawingForm: FormGroup;\n  onRequestSaved: EventEmitter<any> = new EventEmitter();\n  \n\n  constructor(\n    public dialogRef: MatDialogRef<DrawingTableRequestDrawingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DrawingTableRequestDrawingData,\n    private formBuilder: FormBuilder,\n    private drafterService: DrafterService,\n    private drafterAdapter: DrafterAdapter,\n    private drawingRequestService: DrawingRequestService,\n    private userService: UserService,\n    private datePipe: DatePipe,\n  ) { \n    this.requestDrawingForm = this.formBuilder.group({\n      subject: new FormControl('', [Validators.required]),\n      targetDate: new FormControl(new Date(), [Validators.required]),\n      drawingFile: new FormControl('', [Validators.required]),\n      comments: new FormControl(''),\n      drafter: new FormControl(null, [Validators.required])\n    });\n  }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n\n    this.drafterService.getDrafters().subscribe(res => {\n      this.drafters = res.data.map(drafter => {\n        return this.drafterAdapter.adapt(drafter);\n      });\n\n      this.loading = false;\n    });\n  }\n\n  processForm() {\n    this.isSubmitting = true;\n\n    this.userService.currentUser\n      .pipe(\n        switchMap(res => {\n          const {\n            subject,\n            targetDate,\n            drawingFile,\n            comments,\n            drafter\n          } = this.requestDrawingForm.value;\n      \n          const body = {\n            subject,\n            target_date: this.datePipe.transform(targetDate, \"yyyy-MM-dd\"),\n            request_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\n            drafter_id: drafter,\n            project_id: this.data.projectId,\n            drawing_id: this.data.drawingId,\n            drawing_file: drawingFile,\n            type_id: this.data.typeId,\n            employee_id: res.employeeId,\n            comments\n          }\n\n          return this.submitData(body);\n      }))\n      .subscribe(res => {\n        this.isSubmitting = false;\n        this.dialogRef.close();\n        this.onRequestSaved.emit();\n      });\n  }\n\n  submitData(body) {\n    return this.drawingRequestService.createRequest(body);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n\nexport interface DrawingTableRequestDrawingData {\n  drawingId: string | Number;\n  typeId: String | Number;\n  projectId: string | Number;\n}\n","<h1 mat-dialog-title>Request Drawing</h1> \n<form [formGroup]=\"requestDrawingForm\">\n  <mat-dialog-content>\n    <div class=\"new-drawing-request\">\n      <mat-form-field class='form-control'>\n        <mat-label>Subject: </mat-label>\n        <input matInput type=\"text\" formControlName='subject'>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Target Date:</mat-label>\n        <input matInput [matDatepicker]=\"targetDate\" formControlName='targetDate'>\n        <mat-datepicker-toggle matSuffix [for]=\"targetDate\"></mat-datepicker-toggle>\n        <mat-datepicker #targetDate></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Drafter: </mat-label>\n        <mat-select formControlName='drafter'>\n          <mat-option\n            *ngFor='let drafter of drafters'\n            [value]='drafter.id'\n          >\n            {{ drafter.fullname }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Original Drawing File:</mat-label>\n        <upload-input formControlName='drawingFile'></upload-input>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n      <textarea matInput id=\"\" cols=\"20\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-raised-button color='warn' type='button' (click)='closeDialog()'>Close</button>\n    <button mat-raised-button color='primary' type='button' [disabled]='!requestDrawingForm.valid || isSubmitting' (click)='processForm(); $event.preventDefault()'>Save</button>\n  </mat-dialog-actions>\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AddDrawingComponent } from 'src/app/drawing/add-drawing/add-drawing.component';\nimport { EditDrawingComponent } from 'src/app/drawing/edit-drawing/edit-drawing.component';\nimport { SubmitShopDrawingComponent } from 'src/app/drawing/submit-shop-drawing/submit-shop-drawing.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuditTrailComponent } from '../audit-trail/audit-trail.component';\nimport { DrawingService } from '../shared/drawing.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport _ from 'lodash';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { DrawingTableRequestDrawingComponent, DrawingTableRequestDrawingData } from '../drawing-table-request-drawing/drawing-table-request-drawing.component';\n\nexport interface Drawing {\n  id: string | Number,\n  title: string,\n  tenderDrawingNo: string,\n  targetDate: string,\n  drawingNumber: string,\n  revision: string,\n  actualSubmissionDate: string,\n  returnedDate: string,\n  approvedBy: string,\n  comments: string,\n  drawingFile: string,\n  transmittalFile: string,\n  current: Object,\n}\n\n@Component({\n  selector: 'app-drawing-drawing-table',\n  templateUrl: './drawing-table.component.html',\n  styleUrls: ['./drawing-table.component.scss']\n})\nexport class DrawingTableComponent implements OnInit {\n  @Input() loading: boolean = false;\n  @Input() drawings: Array<any> = []\n  @Input() projectId: string | number;\n  @Input() drawingTypes: Array<ProjectDrawingType> = [];\n\n  public isGettingConfig: boolean = false;\n\n  @Output() onFormsSubmit: EventEmitter<any> = new EventEmitter();\n\n  get loadingColSpan() {\n    return 2 + this.drawingTypes.length;\n  }\n\n  constructor(\n    public dialog: MatDialog,\n    private drawingService: DrawingService,\n    private projectConfigService: ProjectConfigurationService,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {}\n\n  showAddDrawing(): void {\n    const dialogRef = this.dialog.open(AddDrawingComponent, {\n      width: '700px',\n    })\n  }\n\n  showEditDrawing(drawing, view = false): void {\n    const type = this.drawingTypes[0];\n\n    const editDrawingRef = this.dialog.open(EditDrawingComponent, {\n      width: '700px',\n      data: {\n        drawing,\n        view,\n        type,\n      }\n    })\n    \n    editDrawingRef.componentInstance.formSubmitted.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'edit',\n      })\n    })\n  }\n\n  viewTenderDrawing(drawing) {\n    const type = this.drawingTypes[0];\n\n    const editDrawingRef = this.dialog.open(EditDrawingComponent, {\n      width: '700px',\n      data: {\n        drawing,\n        view: true,\n        type,\n      }\n    })\n  }\n\n  viewDrawing(drawing): void {\n    this.drawingService.openDrawing(drawing.drawing_file_upload)\n  }\n\n  showSubmitDrawing(drawing: any, type): void {\n    const nextDrawingType = this.getNextTypeDrawing(type);\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id: type.id,\n        drawing_type: type,\n        action: 'submit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    submitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'submit',\n      })\n    })\n  }\n\n  getNextTypeDrawing(type) {\n    let nextDrawingType = null;\n\n    const index = this.drawingTypes.indexOf(type);\n\n    if(index !== -1) {\n      nextDrawingType = this.drawingTypes[index + 1];\n    }\n\n    return nextDrawingType;\n  }\n\n  showReSubmitDrawing(drawing, type_id): void {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const resubmitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'resubmit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    resubmitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'resubmit',\n      })\n    })\n  }\n\n  showApprovedDrawing(drawing, type_id): void {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const dialog = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'approve',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    dialog.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'approved',\n      })\n    })\n  }\n  \n  showRejectedDrawing(drawing, type_id): void {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const dialog = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'reject',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    dialog.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'reject',\n      })\n    })\n  }\n\n  showSubmitTypeDrawing(drawing, type):void {\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type: type,\n        action: 'submit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    submitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'shop',\n        action: 'submit',\n      })\n    })\n  }\n\n  showDrawing(drawing, type_id) {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'view',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n  }\n\n  showEditTypeDrawing(drawing, type_id) {\n    const type = this.drawingTypes.find(type => type.id === type_id);\n    const nextDrawingType = this.getNextTypeDrawing(type);\n\n    const submitDrawingRef = this.dialog.open(SubmitShopDrawingComponent, {\n      width: '1000px',\n      data: {\n        ...drawing,\n        type_id,\n        action: 'edit',\n        projectId: this.projectId,\n        nextDrawingType,\n      }\n    })\n\n    submitDrawingRef.componentInstance.onFormSubmit.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type_id,\n        action: 'edit',\n      })\n    })\n  }\n\n  showTypeDrawing(drawing, type) {\n    this.showDrawing(drawing, type)\n  }\n\n  showHistory(drawing, type=null) {\n    this.dialog.open(AuditTrailComponent, {\n      width: '1000px',\n      data: {\n        drawing: drawing,\n        type,\n      }\n    })\n  }\n\n  getReturnedDate(drawing): string | null {\n    const type = drawing.status;\n\n    if(type === 'Submitted' || !drawing) return;\n    \n    switch(type) {\n      case 'Approved':\n        return drawing.drawing_approved_date;\n      case 'Rejected':\n        return drawing.drawing_rejected_date;\n      default:\n        return drawing.drawing_resubmission_date;\n    }\n  }\n\n  drawingHasMissingFields(drawing) {\n    return !drawing.drawing_no && !drawing.drawing_as_built_target_date && !drawing.drawing_revision_no;\n  }\n\n  goToHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/type-drawing/${drawing.id}/history`)\n  }\n\n  goToTenderDrawingHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/tender-drawing/${drawing.id}/history`)\n  }\n\n  goToShopDrawingHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/shop-drawing/${drawing.id}/history`)\n  }\n\n  goToAsBuiltDrawingHistory(drawing) {\n    this.router.navigateByUrl(`/dashboard/as-built-drawings/${drawing.id}/history`)\n  }\n\n  extractTypeDrawing(drawing, type) {\n    const typeDrawing =  drawing.type_drawings.find(typeDrawing => {\n      return typeDrawing.type_id === type;\n    });\n    return typeDrawing;\n  }\n\n  extractTypeDrawingTargetDate(drawing, type) {\n    const typeDrawingTargetDate = drawing.type_drawing_target_dates.find(targetDate => targetDate.project_drawing_type_id === type);\n\n    if(!typeDrawingTargetDate) {\n\n    }\n\n    return typeDrawingTargetDate ? \n            typeDrawingTargetDate.target_date: \n            (drawing.drawing_target_date ? drawing.drawing_target_date : '-');\n  }\n\n  generateDrawingTableHeaderClass(type) {\n    return `tender-drawing__heading tender-drawing__heading--${type}`;\n  }\n\n  generateDrawingTitle(type) {\n    return type.replace(/-/g, \" \");\n  }\n\n  generateStatusClass(status) {\n    const statusClass = _.kebabCase(status);\n    return `drawing-table__status drawing-table__status--${statusClass}`;\n  }\n\n  \n  showRequestDrawing(\n    drawing, \n    drawingType: ProjectDrawingType\n  ) {\n    console.log(drawing)\n    const dialogData: DrawingTableRequestDrawingData = {\n      drawingId: drawing.id,\n      typeId: drawingType.id,\n      projectId: this.projectId,\n    }\n\n    const dialog = this.dialog.open(DrawingTableRequestDrawingComponent, {\n      width: '720px', \n      data: dialogData,\n    });\n\n    dialog.componentInstance.onRequestSaved.subscribe(res => {\n      this.onFormsSubmit.emit({\n        type: 'request-drawing',\n        action: 'create',\n      })\n    });\n  }\n\n  extractTypeStatus(drawing, type) {\n    const condition =  drawing.drawing_requests.find(request => {\n      return request.type_id === type && request.status === 'Assigned';\n    });\n    \n    return condition ? 'Requested' : '';\n  }\n}\n","<div class=\"drawing-table-container\">\n  <table class='drawing-table' *ngIf='drawingTypes'>\n    <thead class='headings'>\n      <tr>\n        <th class='tender-drawing__heading tender-drawing__heading--tender' style='min-width: 450px;'>Tender Drawing</th>\n        <th class='tender-drawing__heading tender-drawing__heading--current' style='min-width: 170px'>Current</th>\n        <ng-container *ngFor='let drawingType of drawingTypes'>\n          <th style='min-width: 680px' [style.backgroundColor]='drawingType.color'>{{ generateDrawingTitle(drawingType.type) | titlecase }} Drawing</th>\n        </ng-container>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style='min-width: 550px;'>\n          <table class='tender-drawing-table'>\n            <thead>\n              <tr>\n                <th style='width: 10%'>No</th>\n                <th style='width: 30%'>Drawing Title</th>\n                <th style='width: 30%'>Drawing No</th>\n                <th style='width: 20%'>Tender <br/> Drawing Date</th>\n                <th style='width: 10%'></th>\n              </tr>\n            </thead>\n          </table>\n        </td>\n        <td style='min-width: 180px'>\n          <table class='tender-drawing-table'>\n            <thead>\n              <tr>\n                <th>Drawing No.</th>\n              </tr>\n            </thead>\n          </table>\n        </td>\n        <td *ngFor='let drawingType of drawingTypes'>\n          <table class='tender-drawing-table'>\n            <thead>\n              <tr>\n                <th style='width: 15%'>Target <br />Sub. Date</th>\n                <th style='width: 15%'>SBHE <br />Transmittal No.</th>\n                <th style='width: 15%'>Actual <br />Sub. Date</th>\n                <th style='width: 15%'>Returned <br />Date</th>\n                <th style='width: 15%'>Client <br /> Transmittal No.</th>\n                <th style='width: 15%'>Status</th>\n                <th></th>\n              </tr>\n            </thead>\n          </table>\n        </td>\n      </tr>\n      <tr *ngIf='loading'>\n        <td [colSpan]='loadingColSpan'>\n          <mat-progress-spinner\n            class='drawing-table__loader'\n            mode='indeterminate'\n            diameter='40'\n          ></mat-progress-spinner>\n        </td>\n      </tr>\n      <tr *ngFor=\"let drawing of drawings; index as i;\">\n        <td *ngIf='!loading' style='min-width: 450px;'>\n          <table class='tender-drawing-table'>\n            <tbody>\n              <tr>\n                <td class='cell-centered' style='width: 10%'>{{ i + 1 }}</td>\n                <td class='cell-centered' style='width: 30%'>{{ drawing.drawing_title }}</td>\n                <td class='cell-centered' style='width: 30%'>{{ drawing.drawing_no }}</td>\n                <td class='cell-centered' style='width: 20%'>{{ drawing.drawing_title_date | date:'dd-MM-yyyy' }}</td>\n                <td class='cell-centered see-more-cell' style='width: 10%'>\n                  <button mat-button [matMenuTriggerFor]='tenderDrawingMenu'>\n                    <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                  </button>\n                  <mat-menu #tenderDrawingMenu xPosition='before'>\n                    <button mat-menu-item (click)='viewTenderDrawing(drawing)'>View</button>\n                    <button mat-menu-item (click)='showEditDrawing(drawing)'>Edit</button>\n                    <button mat-menu-item (click)='goToTenderDrawingHistory(drawing)'>History</button>\n                  </mat-menu>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </td>\n        <td *ngIf='!loading'>\n          <table class='current-drawing-table tender-drawing-table'>\n              <tbody>\n                <tr>\n                  <td>{{ drawing.current_drawing_no }}</td>\n                </tr>\n              </tbody>\n          </table>\n        </td>\n        <ng-container *ngIf='!loading'>\n          <ng-container *ngFor='let drawingType of drawingTypes; let i = index;'>\n            <td>\n              <table class='shop-drawing-table tender-drawing-table' *ngIf='drawing.type_drawings && extractTypeDrawing(drawing, drawingType.id)'>\n                <tbody>\n                  <tr *ngIf='extractTypeDrawing(drawing, drawingType.id)'>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      {{ extractTypeDrawingTargetDate(drawing, drawingType.id) | date:'dd-MM-yyyy'}}\n                    </td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id) && extractTypeDrawing(drawing, drawingType.id).transmittal_form ? extractTypeDrawing(drawing, drawingType.id).transmittal_form.ref_no : '' }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id).drawing_submission_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id).drawing_returned_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">{{ extractTypeDrawing(drawing, drawingType.id).drawing_client_transmittal_no }}</td>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      <span [class]='generateStatusClass(extractTypeDrawing(drawing, drawingType.id).status)'>{{ extractTypeDrawing(drawing, drawingType.id).status }}</span> \n                    </td>\n                    <ng-container *ngIf='extractTypeDrawing(drawing, drawingType.id).status !== \"To Submit\"'>\n                      <td class='cell-centered see-more-cell'>\n                        <div class=\"tender-drawing-table__actions\">\n                          <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                            <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                          </button>\n                          <div \n                            class=\"tender-drawing-table__info-container\"\n                            *ngIf='drawingHasMissingFields(extractTypeDrawing(drawing, drawingType.id))'\n                          >\n                            <mat-icon matTooltip=\"Drawing not yet completely filled.\" [matTooltipPosition]=\"'below'\" class='tender-drawing-table__info'>info</mat-icon>\n                            \n                          </div>\n                        </div>\n                        <mat-menu #shopDrawingMenu xPosition='before'>\n                          <button mat-menu-item (click)='showReSubmitDrawing(drawing, drawingType.id)'>Re Submit</button>\n                          <button mat-menu-item (click)='showApprovedDrawing(drawing, drawingType.id)'>Approved</button>\n                          <button mat-menu-item (click)='showRejectedDrawing(drawing, drawingType.id)'>Rejected</button>\n                          <button mat-menu-item (click)='showTypeDrawing(drawing, drawingType.id)'>View</button>\n                          <button mat-menu-item (click)='showEditTypeDrawing(drawing, drawingType.id)'>Edit</button>\n                          <button mat-menu-item (click)='showRequestDrawing(drawing, drawingType)'>Request Drawing</button>\n                          <button mat-menu-item (click)='goToHistory(extractTypeDrawing(drawing, drawingType.id))'>History</button>\n                        </mat-menu>\n                      </td>\n                    </ng-container>\n                    <ng-container *ngIf='extractTypeDrawing(drawing, drawingType.id).status === \"To Submit\"'>\n                      <td class='cell-centered see-more-cell'>\n                        <div class=\"tender-drawing-table__actions\">\n                          <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                            <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                          </button>\n                          <div \n                            class=\"tender-drawing-table__info-container\"\n                            *ngIf='drawingHasMissingFields(extractTypeDrawing(drawing, drawingType.id))'\n                          >\n                            <mat-icon matTooltip=\"Drawing not yet completely filled.\" [matTooltipPosition]=\"'below'\" class='tender-drawing-table__info'>info</mat-icon>\n                            \n                          </div>\n                        </div>\n                        <mat-menu #shopDrawingMenu xPosition='before'>\n                          <button mat-menu-item (click)='showSubmitDrawing(drawing, drawingType)'>Submit</button>\n                          <button mat-menu-item (click)='showRequestDrawing(drawing, drawingType)'>Request Drawing</button>\n                          <button mat-menu-item (click)='showTypeDrawing(drawing, drawingType.id)'>View</button>\n                        </mat-menu>\n                      </td>\n                    </ng-container>\n                  </tr>\n                </tbody>\n              </table>\n              <table class='shop-drawing-table tender-drawing-table' *ngIf='drawing.type_drawings && !extractTypeDrawing(drawing, drawingType.id)'>\n                <tbody>\n                  <tr>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      {{ extractTypeDrawingTargetDate(drawing, drawingType.id) | date:'dd-MM-yyyy' }}\n                    </td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\"></td>\n                    <td class='cell-centered' style=\"width: 15%\">\n                      <span [class]='generateStatusClass(extractTypeStatus(drawing, drawingType.id))'>\n                        {{ extractTypeStatus(drawing, drawingType.id) }}\n                      </span>\n                    </td>\n                    <td class='cell-centered see-more-cell'>\n                      <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                      </button>\n                      <mat-menu #shopDrawingMenu xPosition='before'>\n                        <button mat-menu-item (click)='showRequestDrawing(drawing, drawingType)'>Request Drawing</button>\n                        <button mat-menu-item (click)='showSubmitDrawing(drawing, drawingType)'>Submit</button>\n                      </mat-menu>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </td>\n            <!-- <td *ngIf='drawingType !== \"shop\"'>\n              <table class='shop-drawing-table tender-drawing-table'>\n                <tbody>\n                  <tr *ngIf='extractTypeDrawing(drawing, drawingType)'>\n                    <td class='cell-centered' style=\"width: 22%\">{{ drawing.drawing_target_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\">{{ extractTypeDrawing(drawing, drawingType).drawing_submission_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\">{{ getReturnedDate(extractTypeDrawing(drawing, drawingType)) | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\">{{ extractTypeDrawing(drawing, drawingType).status }}</td>\n                    <td class='cell-centered see-more-cell'>\n                      <button mat-button [matMenuTriggerFor]='buildDrawingMenu'>\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                      </button>\n                      <mat-menu #buildDrawingMenu xPosition='before'>\n                        <button mat-menu-item (click)='showReSubmitDrawing(drawing, drawingType)'>Re Submit</button>\n                        <button mat-menu-item (click)='showApprovedDrawing(drawing, drawingType)'>Approved</button>\n                        <button mat-menu-item (click)='showRejectedDrawing(drawing, drawingType)'>Rejected</button>\n                        <button mat-menu-item (click)='showTypeDrawing(drawing, drawingType)'>View</button>\n                        <button mat-menu-item (click)='showEditTypeDrawing(drawing, drawingType)'>Edit</button>\n                        <button mat-menu-item (click)='goToAsBuiltDrawingHistory(extractTypeDrawing(drawing, drawingType))'>History</button>\n                      </mat-menu>\n                    </td>\n                  </tr>\n                  <tr *ngIf='!extractTypeDrawing(drawing, drawingType)'>\n                    <td class='cell-centered' style=\"width: 22%\">{{ drawing.shop_drawing && drawing.shop_drawing.drawing_as_built_target_date | date:'dd-MM-yyyy' }}</td>\n                    <td class='cell-centered' style=\"width: 22%\"></td>\n                    <td class='cell-centered' style=\"width: 22%\"></td>\n                    <td class='cell-centered' style=\"width: 22%\"></td>\n                    <td class='cell-centered see-more-cell'>\n                      <button mat-button [matMenuTriggerFor]='shopDrawingMenu'>\n                        <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n                      </button>\n                      <mat-menu #shopDrawingMenu xPosition='before'>\n                        <button mat-menu-item (click)='showSubmitTypeDrawing(drawing, drawingType)'>Submit</button>\n                      </mat-menu>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </td> -->\n          </ng-container>\n        </ng-container>\n      </tr>\n      <tr *ngIf='drawings.length === 0 && !loading'>\n        <td colspan=4>\n          <p class='text-center'><strong>No drawings found...</strong></p>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\nimport { AddDrawingComponent } from './add-drawing/add-drawing.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DrawingService, DrawingParams } from './shared/drawing.service';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { Router, ParamMap, Route, ActivatedRoute } from '@angular/router';\nimport { mergeMap, switchMap, map } from 'rxjs/operators';\nimport { forkJoin, Observable } from 'rxjs';\nimport { UserService } from '../core/services/user.service';\nimport { AddCategoryComponent } from './add-category/add-category.component';\nimport { FormBuilder } from '@angular/forms';\nimport { CreateTransmittalFormComponent } from '../transmittal-forms/create-transmittal-form/create-transmittal-form.component';\nimport { DrawingFiltersComponent, DrawingFiltersDialogData } from './drawing-filters/drawing-filters.component';\nimport { DrawingFilters } from '../core/models/drawing-filters';\nimport { Breadcrumb } from '../layout/breadcrumbs/breadcrumbs.component';\nimport { Project } from '../core/models/project';\nimport { Client } from '../core/models/client';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { ProjectConfigurationComponent, ProjectConfigurationDialogData } from './project-configuration/project-configuration.component';\nimport { DrawingSummaryListComponent } from './drawing-summary-list/drawing-summary-list.component';\nimport { ProjectConfigurationService } from '../core/services/project-configuration.service';\nimport { ProjectConfiguration } from '../core/models/project-configuration';\nimport { Drawing } from './drawing-table/drawing-table.component';\nimport { ProjectDrawingType } from '../core/models/project-drawing-type';\nimport { ProjectCategory } from '../core/models/project-category';\nimport { ProjectCategoryService } from '../core/services/project-category.service';\n\n@Component({\n  selector: 'app-drawing',\n  templateUrl: './drawing.component.html',\n  styleUrls: ['./drawing.component.scss']\n})\nexport class DrawingComponent implements OnInit {\n  @ViewChild('success') successDialog: SwalComponent;\n  @ViewChild('drawingSummary') drawingSummary: DrawingSummaryListComponent;\n\n  drawings;\n  projectConfig: ProjectConfiguration;\n  projectCategories: ProjectCategory[];\n  isTableLoading: boolean = false\n  isDataLoading: boolean = false\n  project: Project;\n  isAuthenticated: boolean;\n  summary = {\n    shopDrawing: null,\n    asBuilt: null,\n  };\n  user = null;\n  client: Client = null;\n\n  _filters: DrawingFilters = {\n    drawingNo: '',\n    category: '',\n    uploadedBy: '',\n    typeDrawingStatus: [],\n  }\n\n  _drawingTableOptions: DrawingTableOptions = {\n    perPage: 50,\n    currentPage: 1,\n  }\n\n  get drawingTableOptions(): DrawingTableOptions {\n    return this._drawingTableOptions;\n  }\n\n  set drawingTableOptions(options: DrawingTableOptions) {\n    this.isTableLoading = true;\n    this._drawingTableOptions = options;\n\n    this.getDrawings(this.project.id, options.currentPage, options.perPage)\n      .subscribe(res => {\n        this.drawings = res.data;\n        this.isTableLoading = false;\n      });\n  }\n\n  get filters(): DrawingFilters {\n    return this._filters;\n  }\n\n  set filters(filters: DrawingFilters) {\n    this._filters = filters;\n    this.searchDrawings();\n  }\n\n  get pageSizeOptions() {\n    const defaultPageSizes = [\n      50,\n      100,\n      150,\n    ];\n\n    if(this.drawings.total > 150) {\n      defaultPageSizes.push(this.drawings.total);\n    }\n\n    return defaultPageSizes;\n  }\n\n\n  constructor(\n    public dialog: MatDialog,\n    public service: DrawingService,\n    public projectService: ProjectsService,\n    public projectConfigService: ProjectConfigurationService,\n    public projectCategoryService: ProjectCategoryService,\n    private userService: UserService,\n    private zone: NgZone,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeData();\n\n    this.userService.currentUser.subscribe((user) => {\n      this.user = user; \n    });\n  }\n\n  initializeData(): void {\n    this.isDataLoading = true;\n    this.isTableLoading = true;\n    this.route.paramMap.pipe(\n      mergeMap(\n        (params: ParamMap) => {\n          const projectId = params.get('id')\n          // TODO: Should I make this as one request?\n          const project = this.projectService.getProject(params.get('id'));\n          const drawings = this.getDrawings(projectId, this.drawingTableOptions.currentPage, this.drawingTableOptions.perPage);\n          const shopDrawingSummary = this.service.getSummary('shop', projectId);\n          const asBuiltDrawingSummary = this.service.getSummary('as-built', projectId);\n          const client = this.projectService.getClient(projectId);\n          const projectConfig = this.projectConfigService.getProjectDrawingTypes(projectId);\n          const projectCategories = this.projectCategoryService.getCategories(projectId);\n\n          return forkJoin([project, drawings, shopDrawingSummary, asBuiltDrawingSummary, client, projectConfig, projectCategories]);\n        },\n      ),\n    ).subscribe(([project, drawing, shopDrawingSummary, asBuiltDrawingSummary, client, projectConfig, projectCategories]) => {\n      this.project = project;\n      this.drawings = drawing.data\n      this.summary = {\n        shopDrawing: shopDrawingSummary.data,\n        asBuilt: asBuiltDrawingSummary.data,\n      }\n      this.projectCategories = projectCategories;\n\n      this.client = client;\n      this.projectConfig = projectConfig;\n      this.filters.typeDrawingStatus = this.projectConfig.drawingTypes.map(type => {\n        return {\n          type: type.id,\n          label: type.type,\n          value: '',\n        }\n      });\n      this.isTableLoading = false;\n      this.isDataLoading = false;\n      debugger\n    });\n  }\n\n  getDrawings(project, page, perPage, params = {}): Observable<any> {\n    return this.service.getDrawings(project, {\n      page,\n      items: perPage,\n    });\n  }\n\n  showAddDrawing(): void {\n    const dialogRef = this.dialog.open(AddDrawingComponent, {\n      width: '700px',\n      data: {\n        projectId: this.project.id,\n        type: this.projectConfig.drawingTypes[0],\n      }\n    })\n\n    dialogRef.componentInstance.formSubmitted.subscribe(res => {\n      this.refreshData()\n    })\n  }\n\n  refreshData(): void {\n    this.initializeData()\n    this.drawingSummary.getData();\n  }\n\n  showAddCategory() {\n    const addCategory = this.dialog.open(AddCategoryComponent, {\n      width: '700px',\n      data: {\n        projectId: this.project.id,\n      }\n    })\n\n    addCategory.componentInstance.formSubmitted.subscribe(res => {\n      this.initializeData()\n    });\n\n    addCategory.componentInstance.onDeleteSuccess.subscribe(res => {\n      this.successDialog.swalOptions = {\n        text: 'Category successfuly deleted.'\n      }\n\n      this.successDialog.fire();\n      this.initializeData();\n    });\n\n    addCategory.componentInstance.onEditSuccess.subscribe(res => {\n      this.successDialog.swalOptions = {\n        text: 'Category successfuly edited.'\n      }\n\n      this.successDialog.fire();\n      this.initializeData();\n    });\n  }\n\n  searchDrawings() {\n    this.isTableLoading = true;\n\n    const {\n      category,\n      uploadedBy,\n      searchQuery,\n      typeDrawingStatus,\n    } = this.filters;\n\n    const params: DrawingParams = {\n      category,\n      type_drawing_status: typeDrawingStatus,\n      uploaded_by: uploadedBy,\n      query: searchQuery,\n      page: this.drawingTableOptions.currentPage,\n      items: this.drawingTableOptions.perPage\n    }\n\n    this.service.getDrawings(this.project.id, params).subscribe(res => {\n      this.drawings = res.data\n\n      this.isTableLoading = false;\n    });\n  }\n\n  goToDrawingRequests():void {\n    const currentUrl = this.router.url;\n\n    this.router.navigateByUrl(`${currentUrl}/requests`);\n  }\n\n  goToClients(): void {\n    const currentUrl = this.router.url;\n\n    this.router.navigateByUrl(`${currentUrl}/clients`)\n  }\n\n  showNewTransmittalForm() {\n    this.dialog.open(CreateTransmittalFormComponent, {\n      width: '1000px',\n    });\n  }\n\n  pageEvent($event) {\n    this.drawingTableOptions = {\n      perPage: $event.pageSize,\n      currentPage: $event.pageIndex + 1,\n    }\n  }\n\n  openFilters() {\n    const data: DrawingFiltersDialogData = {\n      filters: this.filters,\n      categories: this.projectCategories,\n    }\n\n    const drawingFiltersDialog = this.dialog.open(DrawingFiltersComponent, {\n      width: '700px',\n      data,\n    });\n\n    drawingFiltersDialog.componentInstance.onFormSubmit.subscribe(filters => {\n      this.filters = filters;\n    });\n  }\n\n  openProjectSettings() {\n    const data: ProjectConfigurationDialogData = {\n      projectId: this.project.id,\n    }\n\n    const projectSettingsDialog =  this.dialog.open(ProjectConfigurationComponent, {\n      width: '700px',\n      data,\n    });\n\n    projectSettingsDialog.componentInstance.onSaveSuccess.subscribe(() => {\n      this.successDialog.swalOptions = {\n        text: 'Project settings successfuly updated.'\n      }\n\n      this.successDialog.fire();\n      this.initializeData();\n    });\n  }\n\n  handleFormSubmit($event) {\n    const {\n      type,\n      action,\n    } = $event;\n\n    if(type === 'request-drawing') {\n      this.successDialog.swalOptions = {\n        text: 'Drawing request successfuly created.'\n      }\n\n      this.successDialog.fire();\n    }\n\n    this.refreshData();\n  }\n}\n\n\ninterface DrawingTableOptions {\n  perPage: Number;\n  currentPage: Number;\n}\n","\n<!-- <app-breadcrumbs></app-breadcrumbs> -->\n<div class=\"summary-row\" *ngIf='!isDataLoading && project && drawings'>\n  <div class=\"header\">\n    <div \n      fxLayout='row'\n      fxLayoutAlign='space-between center'\n    >\n      <h1>{{ project.title }}</h1>\n      <div class=\"actions\">\n        <a [routerLink]=\"['requests']\" mat-stroked-button color='primary' *ngIf='user && user.isDrafter'>My Drawing Requests</a>&nbsp;\n        <a [routerLink]=\"['/dashboard/projects']\" mat-raised-button color='primary'>View All Projects</a>\n      </div>\n    </div>\n  </div>\n</div>\n<div \n  class=\"drawing-body\"\n  fxLayout='row'\n  fxLayoutAlign='space-between start'\n  *ngIf='!isDataLoading && project && drawings'\n>\n  <div \n    class=\"actions\"\n    fxLayout='row'\n    fxLayoutGap='16px'\n  >\n    <div \n      class=\"actions__buttons\"\n      fxLayout='column'\n      fxLayoutGap='8px'\n      *ngIf='project'\n    >\n      <button \n        mat-stroked-button \n        class='actions__button' \n        color='primary' \n        (click)='openProjectSettings()'\n        *ngIf='user.isSuperadmin'\n      >\n          <mat-icon>settings</mat-icon>\n          Project Settings\n      </button>\n      <button mat-stroked-button class='actions__button' color='primary' (click)='goToClients()'><mat-icon>business</mat-icon>Manage Client</button>\n      <button mat-stroked-button class='actions__button' color='primary' (click)='showAddDrawing()' *ngIf='projectConfig.drawingTypes.length && projectCategories.length'><mat-icon>add</mat-icon>New Tender Drawing</button>\n      <button mat-stroked-button class='actions__button' color='primary' (click)='showAddCategory()' *ngIf='project'><mat-icon>category</mat-icon>Categories</button>\n      <button\n          [routerLink]='[\"/dashboard/projects\", project.id, \"transmittal-forms\", \"create\"]' \n          target=\"_blank\" \n          mat-stroked-button class='actions__button' color='primary' \n          *ngIf='projectConfig.drawingTypes.length'\n          [disabled]='!client'>\n          <mat-icon>insert_drive_file</mat-icon>\n          New Transmittal File\n        </button>\n    </div>\n    <div class='actions__latest-transmittal-form'>\n      <app-latest-transmittal-form\n        *ngIf='project && projectConfig.drawingTypes.length'\n        [projectId]='project.id'\n        class='header-latest-transmittal-form'\n      ></app-latest-transmittal-form>\n    </div>\n  </div>\n  <div class=\"drawing__summary\">\n    <app-drawing-summary-list\n      *ngIf='project && projectConfig.drawingTypes.length'\n      [projectId]='project.id'\n      #drawingSummary\n    ></app-drawing-summary-list>\n  </div>\n</div>\n\n<div class=\"drawing-table-card\">  \n  <h4>Tender Drawings</h4>\n  <mat-card class='drawing-table'>\n    <div mat-card-content>\n      <div \n        class=\"drawing-table__filters\"\n        *ngIf='projectConfig && projectConfig.drawingTypes.length && projectCategories.length'\n      >\n        <button mat-stroked-button (click)='openFilters()'>\n          <mat-icon>filter_list</mat-icon>\n          Filter Drawings\n        </button>\n      </div>\n      <div class=\"drawing-main-table\" *ngIf='project'>\n        <ng-container *ngIf='projectConfig && projectConfig.drawingTypes.length  && projectCategories.length'>\n          <app-drawing-drawing-table \n            [loading]=\"isTableLoading\" \n            [drawings]=\"drawings.data\" \n            [projectId]='project.id' \n            [drawingTypes]='projectConfig.drawingTypes'\n            (onFormsSubmit)='handleFormSubmit($event)'\n            class='drawing-table'\n            #appDrawingTable\n            >\n          </app-drawing-drawing-table>\n          <mat-paginator \n            *ngIf='drawings'\n            [length]=\"drawings.total\"\n            [pageSize]=\"drawingTableOptions.perPage\"\n            [pageSizeOptions]=\"pageSizeOptions\"\n            (page)='pageEvent($event)'\n          >\n          </mat-paginator>\n        </ng-container>\n        <div \n          class=\"drawing-main-table__no-settings\"\n          *ngIf='!projectConfig || !projectConfig.drawingTypes.length || !projectCategories || !projectCategories.length && !isDataLoading'\n        >\n          <div class=\"text-center\">\n            <img src=\"../../assets/configure.png\" alt=\"Configure Icon\" class='drawing-main-table__configure-icon'>\n            <p>The project is not properly configured. Below are the items need to be configured for the project: </p>\n          </div>\n          <div class='drawing-main-table__problems'>\n            <ul>\n              <li *ngIf='!projectConfig || !projectConfig.drawingTypes.length'><strong>Project Settings</strong>. Configure drawing types in the Project Settings by clicking the button the \"Project Settings\" button on the top left.</li>\n              <li *ngIf='!projectCategories || !projectCategories.length'><strong>Project Categories</strong>. Configure project categories in the Project Settings by clicking the button the \"Categories\" button on the top left.</li>\n            </ul>\n            <!-- Please configure drawing types in the Project Settings by clicking the button the \"Project Settings\" button on the top left. -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-card>\n</div>\n\n<swal\n  #success\n  text='Drawing request successfuly created'\n  icon='success'\n></swal>\n<swal\n  #requestDrawingSuccess\n  text='Drawing request successfuly created'\n  icon='success'\n></swal>","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe, TitleCasePipe } from '@angular/common';\nimport { AddDrawingComponent } from './add-drawing/add-drawing.component';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { EditDrawingComponent } from './edit-drawing/edit-drawing.component';\nimport { SubmitShopDrawingComponent } from './submit-shop-drawing/submit-shop-drawing.component';\nimport { SweetAlert2Module, SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { DrawingTableComponent } from './drawing-table/drawing-table.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DrawingComponent } from './drawing.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { DrawingService } from './shared/drawing.service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DrawingCategorySelectInput } from './drawing-category-select/drawing-category-select.component';\nimport { RouterModule } from '@angular/router';\nimport { MatSelectModule } from '@angular/material/select';\nimport { AuditTrailComponent } from './audit-trail/audit-trail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { AddCategoryComponent } from './add-category/add-category.component';\nimport { DrawingCategoryService } from '../core/services/drawing-category.service';\nimport { CategorySelectComponent } from './category-select/category-select.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TransmittalFormsModule } from '../transmittal-forms/transmittal-forms.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { DrawingFiltersComponent } from './drawing-filters/drawing-filters.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DrawingCategoriesModule } from '../drawing-categories/drawing-categories.module';\nimport { ProjectConfigurationComponent } from './project-configuration/project-configuration.component';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { ProjectConfigurationItemComponent } from './project-configuration/project-configuration-item/project-configuration-item.component';\nimport { DrawingSummaryListComponent } from './drawing-summary-list/drawing-summary-list.component';\nimport { DrawingSummaryComponent } from './drawing-summary/drawing-summary.component';\nimport { ProjectDrawingTypeItemComponent } from './project-configuration/project-drawing-type-item/project-drawing-type-item.component';\nimport { ColorSketchModule } from 'ngx-color/sketch';\nimport { SwiperModule } from 'ngx-swiper-wrapper';\nimport { LatestTransmittalFormComponent } from './latest-transmittal-form/latest-transmittal-form.component';\nimport { RequestDrawingsModule } from '../request-drawings/request-drawings.module';\nimport { DrawingTableRequestDrawingComponent } from './drawing-table-request-drawing/drawing-table-request-drawing.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { DrawingTableDrawingTargetDateComponent } from './drawing-table-drawing-target-date/drawing-table-drawing-target-date.component';\n\n\n@NgModule({\n  declarations: [\n    AddDrawingComponent, \n    EditDrawingComponent, \n    DrawingTableComponent, \n    DrawingComponent,\n    SubmitShopDrawingComponent,\n    DrawingCategorySelectInput,\n    AuditTrailComponent,\n    AddCategoryComponent,\n    CategorySelectComponent,\n    DrawingFiltersComponent,\n    ProjectConfigurationComponent,\n    ProjectConfigurationItemComponent,\n    DrawingSummaryListComponent,\n    DrawingSummaryComponent,\n    ProjectDrawingTypeItemComponent,\n    LatestTransmittalFormComponent,\n    DrawingTableRequestDrawingComponent,\n    DrawingTableDrawingTargetDateComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatGridListModule,\n    MaterialFileInputModule,\n    MatButtonModule,\n    SweetAlert2Module,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    LayoutModule,\n    NgSelectModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    SharedModule,\n    DragDropModule,\n    FlexLayoutModule,\n    TransmittalFormsModule,\n    DrawingCategoriesModule,\n    ContentLoaderModule,\n    ColorSketchModule,\n    SwiperModule,\n    RequestDrawingsModule,\n  ],\n  exports: [\n    AddDrawingComponent,\n    DrawingTableComponent,\n  ],\n  providers: [\n    DrawingService,\n    DrawingCategoryService,\n    DatePipe,\n    TitleCasePipe,\n  ]\n})\nexport class DrawingModule { }\n","import { Component, OnInit, ViewChild, Inject, ɵCompiler_compileModuleSync__POST_R3__, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { DrawingService } from '../shared/drawing.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\n\ninterface DialogData {\n  drawing: object,\n  view: boolean,\n  type?: ProjectDrawingType,\n}\n\n@Component({\n  selector: 'app-edit-drawing',\n  templateUrl: './edit-drawing.component.html',\n  styleUrls: ['./edit-drawing.component.scss']\n})\nexport class EditDrawingComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent\n  @ViewChild('deleteConfirmation') private deleteConfirmation: SwalComponent\n  @ViewChild('deleteSuccess') private deleteSuccess: SwalComponent\n  @ViewChild('drawingFile') private drawingFile\n\n  public drawing\n  public view\n  private title\n  public drawingForm: FormGroup;\n  public isDataSubmitting: boolean = false\n  public updatedDrawing\n  public file = new FormControl(null)\n  public loading: Boolean = true;\n  subscription: Subscription;\n  useCurrentDrawingNo: false;\n\n\n  @Output() formSubmitted: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    public dialogRef: MatDialogRef<EditDrawingComponent>,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private drawingService: DrawingService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) { \n    this.drawing = data.drawing;\n    this.view = data.view\n    this.drawingForm = this.formBuilder.group({\n      drawing_title_date: this._generateFormControl(this.drawing.drawing_title_date, [Validators.required]),\n      drawing_no: this._generateFormControl(this.drawing.drawing_no, [Validators.required]),\n      drawing_title: this._generateFormControl(this.drawing.drawing_title, [Validators.required]),\n      drawing_category_id: this._generateFormControl(this.drawing.drawing_category_id, [Validators.required]),\n      drawing_target_date: this._generateFormControl('', [Validators.required]),\n      current_drawing_no: this._generateFormControl(this.drawing.current_drawing_no, [Validators.required]),\n    });\n\n    this.title = data.view ? \"View Drawing\" : \"Edit Drawing\";\n  }\n\n  ngOnInit() {\n    this.getDrawingData();\n  }\n\n  getDrawingData() {\n    this.loading = true;\n\n    // this.loading = false;\n\n    if(this.data.type) {\n      this.drawingService.getTypeDrawingTargetDate(this.drawing.id, this.data.type.id).subscribe(res => {\n        this.drawingForm.patchValue({\n          drawing_target_date: res ? res.target_date : (this.drawing.drawing_target_date ? this.drawing.drawing_target_date : '')\n        });\n        \n        this.loading = false;\n      });\n    }\n  }\n\n  closeDialog($event = null) {\n    if($event) $event.preventDefault()\n    this.dialogRef.close();\n  }\n\n  deleteDrawing($event = null) {\n    if($event) $event.preventDefault()\n\n    this.deleteConfirmation.fire()\n  }\n\n  handleDrawingDelete() {\n    this.isDataSubmitting = true\n\n    this.drawingService.deleteDrawing(this.drawing.id).subscribe(res => {\n      this.isDataSubmitting = false\n\n      this.deleteConfirmation.dismiss()\n      this.deleteSuccess.fire()\n      this.closeDialog()\n      this.formSubmitted.emit()\n    });\n  }\n  \n  onFormSubmit(event) {\n    this.isDataSubmitting = true\n\n    event.preventDefault()\n    let data = this.drawingForm.value\n\n    const drawing_title_date = this.datePipe.transform(data.drawing_title_date, \"yyyy-MM-dd\")\n    const drawing_target_date = this.datePipe.transform(data.drawing_target_date, \"yyyy-MM-dd\");\n    // const drawing_file = this.file\n\n    const form = {\n      ...this.drawingForm.value,\n      id: this.drawing.id,\n      project_id: this.drawing.project_id,\n      drawing_title_date,\n      drawing_target_date,\n    }\n\n    if(this.file.value) form['drawing_file'] = this.file.value\n\n    this.drawingService.updateDrawing(this.drawing.id, form)\n      .subscribe(res => {\n        this.isDataSubmitting = false\n        this.updatedDrawing = res.data;\n        this.successConfirmation.fire()\n      })\n  }\n\n  handleFormSubmit() {\n    this.closeDialog()\n    this.formSubmitted.emit(this.updatedDrawing)\n  }\n  \n  viewDrawing() {\n    this.drawingService.openDrawing(this.drawing.drawing_file_upload);\n  }\n\n  // TODO: Do this better\n  onUseCurrentDrawingNoToggle(value) {\n    if (value) {\n      this.drawingForm.get('current_drawing_no').disable();\n      this.drawingForm.get('current_drawing_no').setValue(this.drawingForm.get('drawing_no').value);\n      this.subscription = this.drawingForm.get('drawing_no').valueChanges.subscribe(res => {\n        this.drawingForm.get('current_drawing_no').setValue(res);\n      });\n    } else {\n      this.drawingForm.get('current_drawing_no').enable();\n      this.subscription.unsubscribe();\n    }\n  }\n\n  _generateFormControl(value, validators = []) {\n    return new FormControl({value, disabled: this.view }, [...validators])\n  }\n}\n","<h2 mat-dialog-title>{{ view ? drawing.drawing_title : \"Edit Drawing Title\" }}</h2>\n<form [formGroup]='drawingForm' enctype=\"multipart/form-data\" (submit)='onFormSubmit($event)'>\n  <mat-dialog-content>\n    <div class=\"form-main\" *ngIf='!loading'>\n      <div class=\"add-drawing-form\">\n        <div\n          fxLayout='row'\n          fxLayoutGap='16px'\n        >\n          <div fxFlex='1 0 0'>\n            <mat-form-field class='add-drawing-form__form-group'>\n              <mat-label>Date:</mat-label>\n              <input matInput [matDatepicker]=\"drawingDate\" [value]='drawing.drawing_title_date' formControlName='drawing_title_date'>\n              <mat-datepicker-toggle matSuffix [for]=\"drawingDate\"></mat-datepicker-toggle>\n              <mat-datepicker #drawingDate></mat-datepicker>\n            </mat-form-field>\n          </div>\n          <div fxFlex='1 0 0'>\n            <mat-form-field class='add-drawing-form__form-group'>\n              <mat-label>Uploaded By:</mat-label>\n              <input matInput disabled [value]='drawing.employee.first_name + \" \" + drawing.employee.last_name'>\n            </mat-form-field>\n          </div>\n        </div>\n        <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px' *ngIf='view'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Category:</mat-label>\n                <input matInput [value]='drawing.category ? drawing.category.category_name : \"\"' [disabled]='view'>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Drawing Title:</mat-label>\n                <input matInput [value]='drawing.drawing_title' formControlName='drawing_title'>\n              </mat-form-field>\n            </p>   \n          </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px' *ngIf='!view'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Category:</mat-label>\n                <app-category-select \n                  [projectId]='drawing.project_id'\n                  formControlName=\"drawing_category_id\">\n                </app-category-select>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Drawing Title:</mat-label>\n                <input matInput [value]='drawing.drawing_title' formControlName='drawing_title'>\n              </mat-form-field>\n            </p>   \n          </mat-grid-tile>\n        </mat-grid-list>\n        <div fxLayout='row' fxFlexLayoutGap='16px' fxLayoutAlign='space-between flex-start'>\n          <div \n            fxFlex='0 0 calc(50% - 8px)'  \n            class=\"add-drawing-form__col\"\n          >\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Tender Drawing No:</mat-label>\n                <input matInput [value]='drawing.drawing_no' formControlName='drawing_no'>\n              </mat-form-field>\n            </p>   \n          </div>\n          <div \n            fxFlex='0 0 calc(50% - 8px)'  \n            class=\"add-drawing-form__col\"\n          >\n            <p>\n              <mat-form-field class='add-drawing-form__form-group'>\n                <mat-label>Current Drawing No:</mat-label>\n                <input matInput formControlName='current_drawing_no'>\n              </mat-form-field>\n              <mat-checkbox *ngIf='!view' [(ngModel)]='useCurrentDrawingNo' [ngModelOptions]=\"{standalone: true}\" (ngModelChange)='onUseCurrentDrawingNoToggle($event)'>Use Current Tender Drawing No.</mat-checkbox>\n            </p>   \n          </div>\n        </div>\n        <mat-grid-list cols='2' rowHeight='70px' gutterSize='16px' *ngIf='!view'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <p>\n              <mat-form-field class='add-drawing-form__form-group file-input-field'>\n                <mat-label>Upload Drawing:</mat-label>\n                <upload-input [formControl]='file'></upload-input>\n              </mat-form-field>\n            </p>   \n          </mat-grid-tile>\n        </mat-grid-list>\n        <div\n          *ngIf='view'\n        >\n          <button mat-raised-button color='primary' (click)='viewDrawing()' type='button'>View Drawing</button>\n        </div>\n        <mat-grid-list cols='2' rowHeight='150px' *ngIf='data.type'>\n          <mat-grid-tile class=\"add-drawing-form__col\">\n            <div class=\"add-drawing-form__shop-drawing\">\n              <p class=\"add-drawing-form__shop-drawing-title\">{{ data.type.type }} Drawing</p>\n              <p>\n                <mat-form-field class='add-drawing-form__form-group'>\n                  <mat-label>{{ data.type.type }} Drawing Target Date:</mat-label>\n                  <input matInput [matDatepicker]=\"drawingTargetDate\" formControlName='drawing_target_date'>\n                  <mat-datepicker-toggle matSuffix [for]=\"drawingTargetDate\"></mat-datepicker-toggle>\n                  <mat-datepicker #drawingTargetDate></mat-datepicker>\n                </mat-form-field>\n            </p>\n            </div>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n    </div>\n    <div class=\"form-loading\" *ngIf='loading'>\n      <mat-progress-spinner\n        mode='indeterminate'\n        diameter='40'\n      ></mat-progress-spinner>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions\n    fxLayout='row'\n    fxLayoutGap='16px'\n    fxLayoutAlign='space-between center'\n  >\n    <div class=\"mat-dialog-actions__buttons-left\">\n      <button mat-raised-button color='warn' (click)='closeDialog($event)'>Cancel</button>&nbsp;\n      <button mat-raised-button color='primary' type='submit' *ngIf='!view' [disabled]='isDataSubmitting || loading'>Save</button>&nbsp;\n    </div>\n    <div class=\"mat-dialog-actions__buttons-right\">\n      <button mat-raised-button color='accent' (click)='deleteDrawing($event)' [disabled]='loading' type='submit' *ngIf='!view'>Delete</button>\n    </div>\n  </mat-dialog-actions>\n</form>\n\n<swal\n  #successConfirmation\n  title='Success'\n  text='Drawing has been updated!'\n  icon='success'\n  (confirm)='handleFormSubmit()'\n></swal>\n\n<swal\n  #deleteConfirmation\n  title='Are you sure?'\n  text=\"This action is irreversible\"\n  icon='warning'\n  (confirm)='handleDrawingDelete()'\n  showCancelButton='true'\n>\n</swal>\n\n<swal\n  #deleteSuccess\n  title='Success'\n  text=\"Drawing successfully deleted\"\n  icon='success'\n>\n</swal>","import { Component, OnInit, Input } from '@angular/core';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { switchMap, switchMapTo } from 'rxjs/operators';\nimport { Client } from 'src/app/core/models/client';\n\n@Component({\n  selector: 'app-latest-transmittal-form',\n  templateUrl: './latest-transmittal-form.component.html',\n  styleUrls: ['./latest-transmittal-form.component.scss']\n})\nexport class LatestTransmittalFormComponent implements OnInit {\n  private _projectId;\n  loading: boolean = false;\n  latestTransmittalForm;\n  client: Client;\n\n  @Input()\n  set projectId(value) {\n    if(value) {\n      this._projectId = value;\n      this.getData();\n    }\n  }\n\n  get projectId() {\n    return this._projectId;\n  }\n\n  get latestTransmittalFormNumber() {\n    const clientRefFormat = this.client ? this.client.refFormat : '';\n    \n    if(this.latestTransmittalForm) {\n      return this.latestTransmittalForm.ref_no.replace(clientRefFormat, '');\n    } else {\n      return '-';\n    }\n  }\n\n  constructor(\n    private projectService: ProjectsService,\n  ) {}\n\n  ngOnInit(): void {}\n\n  getData() {\n    this.loading = true;\n\n    this.projectService.getClient(this.projectId)\n      .pipe(switchMap((client: Client) => {\n        this.client = client;\n        return this.projectService.getLatestTransmittalFile(this.projectId)\n      })).subscribe(res => {\n        this.latestTransmittalForm = res.data;\n      })\n  }\n}\n","<mat-card class=\"latest-transmittal-form\">\n  <p>\n    Latest Transmittal Form No:\n  </p>\n  <p class='latest-transmittal-form__number'>{{ latestTransmittalFormNumber }}</p>\n</mat-card>\n","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TitleCasePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-project-configuration-item',\n  templateUrl: './project-configuration-item.component.html',\n  styleUrls: ['./project-configuration-item.component.scss']\n})\nexport class ProjectConfigurationItemComponent implements OnInit {\n  @ViewChild('editInput') editInput: ElementRef;\n\n  isEditing: boolean;\n  _itemValue: string;\n  itemFormControl: FormControl = new FormControl();\n\n  @Output() onSubmit: EventEmitter<any> = new EventEmitter;\n  @Output() onDelete: EventEmitter<any> = new EventEmitter;\n\n  @Input() index;\n\n  @Input()\n  get itemValue(): string {\n    return this._itemValue;\n  }\n\n  set itemValue(value: string) {\n    let parsedValue = value.replace(/-/g, \" \");\n    const titleCaseVal = this.titleCasePipe.transform(parsedValue);\n    this._itemValue = titleCaseVal;\n    this.itemFormControl.setValue(titleCaseVal);\n  }\n\n  @Input()\n  get edit(): boolean {\n    return this.isEditing;\n  }\n\n  set edit(value: boolean) {\n    this.isEditing = value ? true : false;\n  }\n\n  constructor(\n    private titleCasePipe: TitleCasePipe,\n  ) {\n    this.itemFormControl = new FormControl();\n  }\n\n  ngOnInit(): void {}\n\n  editValue() {\n    this.isEditing = true;\n\n    setTimeout(() => {\n      this.editInput.nativeElement.focus();\n    });\n  }\n\n  delete() {\n    this.onDelete.emit({\n      index: this.index,\n    });\n  }\n\n  cancelEdit() {\n    this.isEditing = false;\n  }\n\n  submit() {\n    setTimeout(() => {\n      this.cancelEdit();\n    })\n\n    this.onSubmit.emit({\n      value: this.itemFormControl.value,\n      index: this.index,\n    });\n  }\n}\n","<div class=\"project-configuration-item\">\n  <div class=\"project-configuration-item__value\" *ngIf='!isEditing'>\n    {{ itemValue }}\n  </div>\n  <div class=\"project-configuration-item__input\" *ngIf='isEditing'>\n    <mat-form-field>\n      <input type=\"text\" matInput [formControl]='itemFormControl' #editInput>\n    </mat-form-field>\n  </div>\n  <div class=\"project-configuration-item__action\" *ngIf='!isEditing'>\n    <button mat-icon-button color='primary' (click)='editValue()'>\n      <mat-icon>edit</mat-icon>\n    </button>\n    <button mat-icon-button color='warn' (click)='delete()'>\n      <mat-icon>delete</mat-icon>\n    </button>\n  </div>\n  <div class=\"project-configuration-item__edit-action\" *ngIf='isEditing'>\n    <button mat-icon-button color='primary' (click)='submit()'>\n      <mat-icon>done</mat-icon>\n    </button>\n    <button mat-icon-button color='warn' (click)='cancelEdit()'>\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ProjectConfiguration } from 'src/app/core/models/project-configuration';\nimport { CdkDragDrop, transferArrayItem, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport _ from 'lodash';\n\n@Component({\n  selector: 'app-project-configuration',\n  templateUrl: './project-configuration.component.html',\n  styleUrls: ['./project-configuration.component.scss']\n})\nexport class ProjectConfigurationComponent implements OnInit {\n  projectConfiguration: ProjectConfiguration;\n  loading: boolean = false;\n  isSubmitting: boolean = false;\n  newDrawingTypes: Array<ProjectDrawingType> = [];\n  isDeleting: boolean = false;\n\n  @Output() onSaveSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialogRef<ProjectConfigurationComponent>,\n    private projectConfigService: ProjectConfigurationService,\n    @Inject(MAT_DIALOG_DATA) public data: ProjectConfigurationDialogData,\n  ) {}\n\n  ngOnInit(): void {\n    this.getProjectConfig();\n  }\n  \n  getProjectConfig() {\n    const { projectId } = this.data;\n    this.loading = true;\n\n    this.projectConfigService.getProjectDrawingTypes(projectId).subscribe(config => {\n      this.projectConfiguration = config;\n\n      this.loading = false;\n    });\n  }\n\n  handleDrawingTypeItemSave($event) {\n    const {\n      id,\n      color,\n      label,\n    } = $event;\n\n    this.projectConfiguration.drawingTypes = this.projectConfiguration.drawingTypes.map(drawingType => {\n      if(drawingType.id == id) {\n        const type = new ProjectDrawingType(\n          id,\n          drawingType.projectId,\n          label,\n        );\n\n        type.setColor(color);\n\n        return type;\n      }\n\n      return drawingType;\n    });\n  }\n\n  onDrawingTypeEditSubmit($event) {\n    const { value, index } = $event;\n\n    this.projectConfiguration.drawingTypes[index] = value;\n  }\n\n  onNewEditDrawingTypeSubmit($event, index) {\n    const { id,  label, color } = $event;\n\n    const type = new ProjectDrawingType(\n      id,\n      this.data.projectId,\n      label,\n    );\n\n    type.setColor(color);\n\n    this.projectConfiguration.drawingTypes.push(type);\n    this.newDrawingTypes.splice(index, 1);\n  }\n\n  removeDrawingType({ id }) {\n    this.isDeleting = true;\n\n    this.projectConfigService.deleteProjectDrawingType(this.data.projectId, id).subscribe(res => {\n      this.dialog.close();\n\n      this.onSaveSuccess.emit();\n    });\n  }\n\n  onDeleteNewDrawingTypeSubmit($event) {\n    const { index } = $event;\n\n    this.newDrawingTypes.splice(index, 1);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  addNewDrawingTypeItem()  {\n    const id = this.generateUniqueId();\n    const newItem = new ProjectDrawingType(id, this.data.projectId, '');\n    this.newDrawingTypes.push(newItem);\n  }\n\n  generateUniqueId() {\n    const ids = this.projectConfiguration.drawingTypes.map(drawingType => drawingType.id);\n\n    return _.max(ids) + 1;\n  }\n\n  saveConfiguration() {\n    const drawingTypes = this.projectConfiguration.drawingTypes.map((drawingType, index) => {\n      const type = new ProjectDrawingType(\n        drawingType.id,\n        drawingType.projectId,\n        drawingType.type,\n      ).setColor(drawingType.color)\n      .setOrder(index);\n\n      return type;\n    })\n    this.projectConfigService.updateProjectDrawingTypes(this.data.projectId, drawingTypes).subscribe(res => {\n      this.dialog.close();\n\n      this.onSaveSuccess.emit();\n    });\n  }\n}\n\nexport interface ProjectConfigurationDialogData {\n  projectId: String | Number;\n}\n","<h2 mat-dialog-title>Project Settings</h2>\n<mat-dialog-content>\n  <strong>Drawing Types:</strong>\n  <div \n    class=\"drawing-types\" \n    *ngIf='!loading'\n    cdkDropList\n    [cdkDropListData]=\"projectConfiguration.drawingTypes\"\n    (cdkDropListDropped)=\"drop($event)\">\n      <app-project-drawing-type-item\n        *ngFor='let drawingType of projectConfiguration.drawingTypes'\n        [drawingType]='drawingType'\n        (onDrawingTypeItemSave)='handleDrawingTypeItemSave($event)'\n        (onDrawingTypeDelete)='removeDrawingType($event)'\n      ></app-project-drawing-type-item>\n      <app-project-drawing-type-item\n        *ngFor='let drawingType of newDrawingTypes, let i = index'\n        [drawingType]='drawingType'\n        (onDrawingTypeItemSave)='onNewEditDrawingTypeSubmit($event, i)'\n        (onDrawingTypeDelete)='removeDrawingType($event)'\n        [edit]='true'\n      ></app-project-drawing-type-item>\n  </div>\n  <button mat-stroked-button class='new-item' (click)='addNewDrawingTypeItem()'>\n    <mat-icon>add</mat-icon>\n    New Item\n  </button>\n  <div class=\"loader\" *ngIf='loading'>\n    <content-loader [style]='{width: \"100%\"}' height=\"60\">\n      <svg:rect x=\"0\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n      <svg:rect x=\"0\" y=\"28\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n      <svg:rect x=\"0\" y=\"48\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    </content-loader>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"start\">\n  <button mat-raised-button color='warn' mat-dialog-close>Cancel</button>\n  <button mat-raised-button color='primary' (click)='saveConfiguration()' [disabled]='isSubmitting || isDeleting'>Update</button>\n</mat-dialog-actions>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { FormControl } from '@angular/forms';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-project-drawing-type-item',\n  templateUrl: './project-drawing-type-item.component.html',\n  styleUrls: ['./project-drawing-type-item.component.scss']\n})\nexport class ProjectDrawingTypeItemComponent implements OnInit {\n  private _drawingType: ProjectDrawingType;\n  color: String;\n\n  @Input()\n  set drawingType(value: ProjectDrawingType) {\n    this._drawingType = value;\n\n    this.color = value.color;\n    this.itemFormControl.setValue(value.type);\n  }\n\n  get drawingType(): ProjectDrawingType {\n    return this._drawingType;\n  }\n\n  @Input()\n  get edit(): boolean {\n    return this.isEditing;\n  }\n\n  set edit(value: boolean) {\n    this.isEditing = value ? true : false;\n  }\n\n  @Output()\n  onDrawingTypeItemSave: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  onDrawingTypeDelete: EventEmitter<any> = new EventEmitter();\n\n  isEditing: boolean = false;\n  itemFormControl: FormControl = new FormControl();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  editValue() {\n    this.isEditing = true;\n  }\n\n  delete() {\n    this.onDrawingTypeDelete.emit({\n      id: this.drawingType.id,\n    });\n  }\n\n  submit() {\n    this.onDrawingTypeItemSave.emit({\n      id: this.drawingType.id,\n      color: this.color,\n      label: this.itemFormControl.value,\n    });\n\n    this.cancelEdit();\n  }\n\n  cancelEdit() {\n    this.isEditing = false;\n  }\n\n  handleColorChange({ color }) {\n    this.color = color.hex;\n  }\n}\n","<div \n  cdkDrag\n  [cdkDragDisabled]='isEditing'\n  class=\"project-drawing-type-item\"\n>\n  <div class=\"project-drawing-type-item__header\">\n    <div class=\"project-drawing-type-item__value\" *ngIf='drawingType.type'>\n      <span [style.color]='drawingType.color'><strong>{{ drawingType.type }}</strong></span>\n    </div>\n    <div class=\"project-drawing-type-item__value\" *ngIf='edit'>\n      <strong>New Item</strong>\n    </div>\n    <div class=\"project-drawing-type-item__action\" *ngIf='!isEditing'>\n      <button mat-icon-button color='primary' (click)='editValue()'>\n        <mat-icon>edit</mat-icon>\n      </button>\n      <button mat-icon-button color='warn' (click)='delete()'>\n        <mat-icon>delete</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"project-drawing-type-item__body\" *ngIf='isEditing'>\n    <div class=\"project-drawing-type-item__fields\">\n      <div class=\"project-drawing-type-item__field\">\n        <mat-form-field\n          class='form-control'\n        >\n          <mat-label>Label:</mat-label>\n          <input type=\"text\" matInput [formControl]='itemFormControl'>\n        </mat-form-field>\n      </div>\n      <div class=\"project-drawing-type-item__field\">\n        <div class=\"color-picker\">\n          <p class=''>Color:</p>\n          <color-sketch \n            [color]=\"drawingType.color\"\n            [disableAlpha]='true'\n            (onChange)='handleColorChange($event)'\n          >\n          </color-sketch>\n        </div>\n      </div>\n    </div>\n    <div class=\"project-drawing-type-item__edit-action\">\n      <button mat-raised-button color='warn' (click)='cancelEdit()'>\n        Cancel\n      </button>&nbsp;\n      <button mat-raised-button color='primary' (click)='submit()'>\n        Save\n      </button>\n    </div>\n  </div>\n  <!-- <div class=\"project-drawing-type-item__edit-action\" *ngIf='isEditing'>\n    <button mat-icon-button color='primary' (click)='submit()'>\n      <mat-icon>done</mat-icon>\n    </button>\n    <button mat-icon-button color='warn' (click)='cancelEdit()'>\n      <mat-icon>close</mat-icon>\n    </button>\n  </div> -->\n</div>","import { Injectable } from \"@angular/core\";\nimport { ApiService } from 'src/app/core/api.service';\nimport { environment } from 'src/environments/environment';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { map } from 'rxjs/operators';\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\nimport { isNullOrUndefined } from 'util';\nimport { DatePipe } from '@angular/common';\nimport { TenderDrawingAdapter } from 'src/app/core/adapters/tender-drawing-adapter';\nimport { DrawingFilters, TypeDrawingStatusFilter } from 'src/app/core/models/drawing-filters';\nimport _ from 'lodash';\n\n@Injectable()\nexport class DrawingService {\n  user: User;\n  constructor(\n      private api: ApiService,\n      private userService: UserService,\n      private datePipe: DatePipe,\n      private tenderDrawingAdapter: TenderDrawingAdapter,\n  ) { \n    this.userService.currentUser.subscribe(res => {\n      this.user = res\n    })\n  }\n\n  // TODO: Replace DrawingParams to Drawing Filters\n  getDrawings(id = null, params: DrawingParams = {}) {\n    let url = `/drawings?project_id=${id}&drawing_category_id=${params.category || ''}&drawing_no=${params.drawing_no || ''}&uploaded_by=${params.uploaded_by || ''}&query=${params.query || ''}&items=${params.items ? params.items : 50}&page=${params.page ? params.page : 1}`\n\n    if(params.type_drawing_status) {\n      params.type_drawing_status.forEach((status) => {\n        if(status.value) {\n          url = url + `&status_${status.type}=${status.value}`\n        }\n      });\n    }\n\n    return this.api.get(url);\n  }\n\n  getTenderDrawings(id = null, params: DrawingParams = {}) {\n    const url = `/drawings?project_id=${id || ''}&drawing_category_id=${params.category || ''}&drawing_no=${params.drawing_no || ''}`\n    return this.api.get(url).pipe(map(res => {\n      return res.data.data.map(drawing => {\n        const tenderDrawing: TenderDrawing = {\n          no: drawing.drawing_no,\n          title: drawing.drawing_title,\n          targetDate: drawing.drawing_target_date,\n          titleDate: drawing.drawing_title_date,\n          drawingFile: drawing.drawing_file_upload,\n          category: drawing && drawing.category ? drawing.category.category_name : '',\n          projectId: drawing.project_id,\n          employeeId: drawing.employee_id,\n          id: drawing.id,\n          currentDrawingNo: drawing.current_drawing_no,\n        }\n\n        return tenderDrawing;\n      });\n    }));\n  }\n\n  addDrawing(body: any) {\n    const postData = {\n      ...body,\n      employee_id: this.user.employeeId\n    }\n    return this.api.post('/drawing', postData)\n  }\n\n  updateDrawing(id, body: any) {\n    return this.api.post(`/drawing/${id}/update`, body)\n  }\n\n  deleteDrawing(id) {\n    return this.api.delete(`/drawing/${id}/delete`)\n  }\n\n  getCategories() {\n    return this.api.get('/drawing-categories')\n  }\n\n  getApprovers(type, projectId) {\n    return this.api.get(`/type-drawings/approvers?project_id=${projectId}&type=${type}`)\n  }\n\n  submitTypeDrawing(type, body) {\n    const postData = {\n      ...body,\n      employee_id: this.user.employeeId,\n    }\n    return this.api.post(`/type-drawing/save`, postData)\n  }\n\n  getDrawing(id) {\n    return this.api.get(`/drawing/${id}`).pipe(map(res => {\n      return this.tenderDrawingAdapter.adapt(res.data);\n    }));\n  }\n\n  getHistory(drawingId, date='', type=null) {\n    if(type) {\n      return this.api.get(`/${type}-drawing/history/${drawingId}`)\n    }\n\n    return this.api.get(`/drawing/history/${drawingId}?date=${date ? date : ''}`)\n      .pipe(map(res => {\n        return {\n          tenderDrawing: this.tenderDrawingAdapter.adapt(res.data),\n          audits: res.data.audits,\n        }\n      }));\n  }\n\n  \n  getTypeDrawingTargetDate(id, type) {\n    const url = `/drawing/${id}/type/${type}`\n\n    return this.api.get(url)\n      .pipe(map(res => res.data));\n  }\n\n\n  getHistoryDates(drawingId) {\n    return this.api.get(`/drawing/history/${drawingId}/dates`).pipe(map(res => {\n      return res.data.map(date => {\n        return this.datePipe.transform(date, 'dd-MM-yyy')\n      });\n    }));\n  }\n\n  getSummary(type='shop', projectId) {\n    const url = `/type-drawings/summary/${projectId}?type=${type}`\n\n    return this.api.get(url).pipe()\n  }\n\n  openDrawing(path) {\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${path}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n}\n\nexport interface DrawingParams {\n  category?: string;\n  drawing_no?: string;\n  query?: string;\n  client_drawings?: boolean;\n  sbhe_drawings?: boolean;\n  uploaded_by?: string;\n  type_drawing_status?: Array<any>,\n  items?: string | Number;\n  page?: string | Number;\n}","import { Component, OnInit, Inject, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\nimport { DrawingService } from '../shared/drawing.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DatePipe } from '@angular/common';\nimport { valueNotEqualTo } from 'src/app/shared/forms/value-not-equal-to.directive';\nimport { DrawingStatus } from 'src/app/core/enums/drawing-status.enum';\nimport { DrawingRequestStatus } from 'src/app/core/enums/drawing-request-status.enum';\n\n// TODO: Change file name for this file so that it encompasses both the shop and\n// as-built drawings\n@Component({\n  selector: 'app-submit-shop-drawing',\n  templateUrl: './submit-shop-drawing.component.html',\n  styleUrls: ['./submit-shop-drawing.component.scss']\n})\nexport class SubmitShopDrawingComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent\n  @ViewChild('drawingFile') private drawingFile\n  @ViewChild('transmittalFile') private transmittalFile\n  drawingForm: FormGroup;\n  approvers: Observable<any>\n  previousStatus: string;\n  isDataSubmitting: Boolean;\n  drawingRef;\n  loading: Boolean = true;\n\n  get forClient(): boolean {\n    if (this.drawingRef) {\n      if(this.data.action !== 'edit') {\n        const status = ['submit', 'resubmit'];\n        const drawingStatus = ['Submitted', 'ReSubmitted'];\n  \n        return status.indexOf(this.data.action) === -1 || drawingStatus.indexOf(this.drawingRef.status) === -1;\n      } else {\n        const drawingStatus = ['Submitted', 'ReSubmitted'];\n\n        return drawingStatus.indexOf(this.drawingRef.status) !== -1;\n      }\n    }\n\n    return false;\n  }\n\n  @Output() onFormSubmit: EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    public dialogRef: MatDialogRef<SubmitShopDrawingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ShowDrawingDialogData,\n    private formBuilder: FormBuilder,\n    private drawingService: DrawingService,\n    private datePipe: DatePipe\n  ) { \n\n    this.drawingRef = this.data.type_drawings.find(typeDrawing => {\n      return typeDrawing.type_id === this.data.type_id;\n    });\n\n\n    const isView = this.data.action === 'view';\n\n    const drawingRevisionValue = this.data.action === 'resubmit' ? '' : (this.drawingRef ? this.drawingRef.drawing_revision_no : '') \n    const drawingRevisionValidators = this.data.action === 'resubmit' ? [valueNotEqualTo(this.drawingRef.drawing_revision_no)] : []\n    const drawing_revision_no = new FormControl(drawingRevisionValue, [\n      ...drawingRevisionValidators,\n      Validators.required,\n    ])\n\n    const editValidators = this.data.action === 'edit' ? [] : [Validators.required];\n    const drawingTransmittalNo= this.data.action !== 'approve' && this.drawingRef ? this.drawingRef.drawing_client_transmittal_no : '';\n    const fileInputValidators = this.data.action == 'edit' ? [] : [Validators.required]\n\n    // TODO: Find a better way of doing this.\n    this.drawingForm = this.formBuilder.group({\n      drawing_no: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_no ?  this.drawingRef.drawing_no : this.data.current_drawing_no, [], isView),\n      drawing_title: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_title ? this.drawingRef.drawing_title : '', [], isView),\n      drawing_target_date: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_target_date ? this.datePipe.transform(this.drawingRef.drawing_target_date, 'dd-MM-yyyy') : this.datePipe.transform(new Date(), 'dd-MM-yyyy'), [], isView),\n      drawing_title_date: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_title_date ? this.drawingRef.drawing_title_date : new Date(), [Validators.required], isView),\n      drawing_submission_comment: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_submission_comment ? this.drawingRef.drawing_submission_comment : '', [Validators.required], isView),\n      drawing_revision_no: this._generateFormControl(drawingRevisionValue, [...drawingRevisionValidators, Validators.required], isView),\n      drawing_submission_date: this._generateFormControl(this.drawingRef && this.drawingRef.drawing_submission_date ? this.drawingRef.drawing_submission_date : new Date(), [Validators.required], isView),\n      drawing_file: this._generateFormControl(null, fileInputValidators, isView),\n      submitted_transmittal_form: this._generateFormControl(null, [], isView),\n      drawing_client_transmittal_no: this._generateFormControl('', this.data.action === 'approve' ? [Validators.required] : [], isView),\n      drawing_client_transmittal_file_upload: this._generateFormControl(null, fileInputValidators, isView),\n      // drawing_target_date: this._generateFormControl('' : new Date(), this.data.type === 'shop' ? [Validators.required] : [], isView),\n      approver: this._generateFormControl(this.drawingRef ? this.drawingRef.approved_by : '', [Validators.required], isView),\n      drawing_returned_date: this._generateFormControl(new Date(), [Validators.required], isView)\n    });\n\n    if(this.drawingRef) {\n      this.previousStatus = this.drawingRef.status;\n    }\n  }\n\n  ngOnInit() {\n    this.approvers = this.drawingService.getApprovers('shop', this.data.projectId).pipe(\n      map(res => res.data)\n    );\n\n    if(this.data.nextDrawingType) {\n      this.loading = true;\n      this.drawingService.getTypeDrawingTargetDate(this.data.id, this.data.nextDrawingType.id)\n        .subscribe(res => {\n          this.drawingForm.addControl('drawing_next_type_target_date', new FormControl({\n            value: res ? res.target_date : '',\n            disabled: this.data.action === 'view'\n          }, [Validators.required]));\n          this.loading = false;\n        });\n    } else {\n      this.loading = false;\n    }\n  }\n\n  handleCancelClicked($event) {\n    $event.preventDefault()\n\n\n    this.closeDialog()\n  }\n\n  closeDialog() {\n    this.dialogRef.close()\n  }\n\n  viewDrawingFile() {\n    this.drawingService.openDrawing(this.drawingRef.drawing_file_upload)\n  }\n\n  viewTransmittal() {\n    this.drawingService.openDrawing(this.drawingRef.drawing_transmittal_upload)\n  }\n\n  viewSubmittedTransmittalForm() {\n    this.drawingService.openDrawing(this.drawingRef.submitted_transmittal_form)\n  }\n\n  viewSBHETransmittal() {\n    this.drawingService.openDrawing(this.drawingRef.transmittal_form.file_path)\n  }\n\n  viewClientTransmittal() {\n    this.drawingService.openDrawing(this.drawingRef.drawing_client_transmittal_file)\n  }\n\n  saveDrawing(event) {\n    event.preventDefault()\n\n    let data = this.drawingForm.getRawValue();\n\n    const actualSubmissionDate = this.datePipe.transform(data.drawing_submission_date, 'yyyy-MM-dd')\n\n    const returnedDate = this.datePipe.transform(data.drawing_returned_date, 'yyyy-MM-dd')\n\n    let status = 'Submitted';\n    let dateKey = null;\n\n    switch(this.data.action) {\n      case 'submit':\n        status = DrawingStatus.submitted\n        dateKey = 'drawing_submission_date'\n        break\n      case 'resubmit':\n        status = DrawingStatus.resubmit,\n        dateKey = 'drawing_resubmission_date'\n        break\n      case 'approve':\n        status = DrawingStatus.approved,\n        dateKey = 'drawing_approved_date'\n        break\n      case 'reject':\n        status = DrawingStatus.rejected,\n        dateKey = 'drawing_rejected_date'\n        break;\n      case 'edit':\n      case 'view':\n        status = this.drawingRef.status\n        break\n      default:\n        status = DrawingStatus.submitted\n    }\n\n    let body = {\n      drawing_returned_date: returnedDate,\n      drawing_submission_date: actualSubmissionDate,\n      drawing_submission_comment: data.drawing_submission_comment,\n      drawing_revision_no: data.drawing_revision_no,\n      drawing_transmittal_no: data.drawing_transmittal_no,\n      type_id: this.data.type_id,\n      approved_by: data.approver,\n      drawing_id: this.data.id,\n      drawing_no: data.drawing_no,\n      drawing_client_transmittal_no: data.drawing_client_transmittal_no,\n      status,\n    }\n\n    if(dateKey) body[dateKey] = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n\n    if(data.drawing_next_type_target_date) {\n      body['drawing_next_type_target_date'] = this.datePipe.transform(data.drawing_next_type_target_date, 'yyyy-MM-dd')\n    }\n\n    if (data.drawing_file) body['drawing_file'] = data.drawing_file;\n    if (data.drawing_client_transmittal_file_upload) body['drawing_client_transmittal_file_upload'] = data.drawing_client_transmittal_file_upload;\n    if (data.submitted_transmittal_form) body['submitted_transmittal_form_file'] = data.submitted_transmittal_form;\n\n    this.isDataSubmitting = true\n    debugger\n    this.drawingService.submitTypeDrawing(this.data.type, body)\n      .subscribe(res => {\n        this.isDataSubmitting = false\n        this.successConfirmation.fire()\n      })\n  }\n\n  handleFormSubmit() {\n    this.onFormSubmit.emit()\n    this.dialogRef.close()\n  }\n\n  triggerUploadDrawing() {\n    this.drawingFile.open()\n  }\n\n  triggerUploadTransmittal() {\n    this.transmittalFile.open()\n  }\n\n  _generateFormControl(value, validators, disabled = false) {\n    return new FormControl({value, disabled}, [...validators])\n  }\n\n  shouldDisplaySBHETransmittalFile() {\n    if (this.drawingRef) {\n      if(this.data.action !== 'edit') {\n        const status = ['submit', 'resubmit'];\n\n        return status.indexOf(this.data.action) !== -1;\n      } else {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  shouldDisplayClientTransmittalFile() {\n    if (this.drawingRef) {\n      if(this.data.action !== 'edit') {\n        const status = ['approve', 'reject'];\n  \n        return status.indexOf(this.data.action) !== -1;\n      } else {\n        const status = [\n          DrawingStatus.approved,\n          DrawingStatus.rejected,\n        ];\n\n        return status.indexOf(this.drawingRef.status) !== -1;\n      }\n    }\n    \n    return false;\n  }\n}\ninterface ShowDrawingDialogData {\n  current_drawing_no: string,\n  drawing_title: string,\n  drawing_no: string,\n  drawing_target_date: string,\n  drawingNumber: string,\n  revision: string,\n  actualSubmissionDate: string,\n  approvedBy: string,\n  comments: string,\n  drawingFile: string,\n  transmittalFile: string,\n  type: string,\n  projectId: string | number,\n  id: number,\n  shop_drawing: any,\n  as_built_drawing: any,\n  action: string,\n  drawing_transmittal_no: string,\n  drawing_submission_comment: '',\n  status: string,\n  uploaded_by: any,\n  type_drawings: any,\n  type_id?: any,\n  drawing_type?: any;\n  nextDrawingType?: any;\n}\n","<form [formGroup]=\"drawingForm\" (submit)=\"saveDrawing($event)\">\n  <h1 mat-dialog-title *ngIf=\"data.action == 'view'\">\n    {{ data.drawing_title | titlecase }}\n  </h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'submit'\">\n    {{ data.drawing_type && data.drawing_type.type | titlecase }} Submission\n  </h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'resubmit'\">Re-submit Drawing</h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'approve'\">Approve Drawing</h1>\n  <h1 mat-dialog-title *ngIf=\"data.action == 'reject'\">Reject Drawing</h1>\n  <mat-dialog-content>\n    <div class=\"form-main\" *ngIf=\"!loading\">\n      <mat-grid-list cols=\"4\" rowHeight=\"70px\" gutterSize=\"16px\">\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Drawing Title:</mat-label>\n              <input matInput [value]=\"data.drawing_title || ''\" disabled />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Tender Drawing No:</mat-label>\n              <input matInput [value]=\"data.drawing_no || ''\" disabled />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Target Date:</mat-label>\n              <input\n                matInput\n                [value]=\"data.drawing_target_date | date: 'yyyy-MM-dd'\"\n                disabled\n              />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile\n          class=\"shop-drawing-submit__col\"\n          *ngIf=\"data.action === 'view' || data.action === 'edit'\"\n        >\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Uploaded By:</mat-label>\n              <input\n                matInput\n                [value]=\"\n                  drawingRef.uploaded_by\n                    ? drawingRef.uploaded_by.first_name +\n                      ' ' +\n                      drawingRef.uploaded_by.last_name\n                    : ''\n                \"\n                disabled\n              />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <mat-grid-list cols=\"4\" rowHeight=\"70px\" gutterSize=\"16px\">\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Drawing Number:</mat-label>\n              <input matInput formControlName=\"drawing_no\" />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Actual Submission Date:</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"actualSubmissionDate\"\n                formControlName=\"drawing_submission_date\"\n                [readonly]=\"data.action == 'view'\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"actualSubmissionDate\"\n                [disabled]=\"data.action == 'view'\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #actualSubmissionDate></mat-datepicker>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Approved By:</mat-label>\n              <mat-select\n                formControlName=\"approver\"\n                [disabled]=\"data.action == 'view'\"\n              >\n                <mat-option\n                  *ngFor=\"let approver of approvers | async\"\n                  [value]=\"approver.id\"\n                  >{{ approver.first_name }}\n                  {{ approver.last_name }}</mat-option\n                >\n              </mat-select>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Revision No.:</mat-label>\n              <input\n                matInput\n                formControlName=\"drawing_revision_no\"\n                [readonly]=\"data.action == 'view'\"\n              />\n              <mat-hint\n                >Previous Revision No:\n                {{ drawingRef ? drawingRef.drawing_revision_no : \"\" }}</mat-hint\n              >\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <div fxLayout=\"row\" fxLayoutGap=\"16px\">\n        <div fxFlex=\"0 0 25%\" *ngIf=\"data.nextDrawingType\">\n          <mat-form-field class=\"shop-drawing-submit__form-group\">\n            <mat-label>{{ data.nextDrawingType.type }} Target Date:</mat-label>\n            <input\n              matInput\n              [matDatepicker]=\"drawingAsBuiltTargetDate\"\n              formControlName=\"drawing_next_type_target_date\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"drawingAsBuiltTargetDate\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #drawingAsBuiltTargetDate></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div fxFlex=\"0 0 25%\" *ngIf=\"previousStatus\">\n          <mat-form-field class=\"shop-drawing-submit__form-group\">\n            <mat-label>Status:</mat-label>\n            <input matInput disabled [value]=\"previousStatus\" />\n          </mat-form-field>\n        </div>\n        <div fxFlex=\"0 0 25%\" *ngIf=\"previousStatus\">\n          <mat-form-field class=\"shop-drawing-submit__form-group\">\n            <mat-label>Returned Date:</mat-label>\n            <input\n              matInput\n              [matDatepicker]=\"returnedDate\"\n              formControlName=\"drawing_returned_date\"\n              [readonly]=\"data.action == 'view'\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"returnedDate\"\n              [disabled]=\"data.action == 'view'\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #returnedDate></mat-datepicker>\n          </mat-form-field>\n        </div>\n      </div>\n      <mat-grid-list cols=\"1\" rowHeight=\"140px\" gutterSize=\"16px\">\n        <mat-grid-tile class=\"shop-drawing-submit__col\">\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Comments:</mat-label>\n              <textarea\n                matInput\n                rows=\"5\"\n                formControlName=\"drawing_submission_comment\"\n                [readonly]=\"data.action == 'view'\"\n              ></textarea>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <div *ngIf=\"data.action !== 'view' && data.action !== 'edit' && data.action !== 'resubmit'\">\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewDrawingFile()\"\n        >\n          View Drawing File\n        </button>\n        &nbsp;\n        <!-- <mat-grid-list cols='7' rowHeight='100px' gutterSize='16px' >\n              <mat-grid-tile class=\"shop-drawing-submit__col\" colspan='3'>\n                  <p>\n                      <mat-form-field class='shop-drawing-submit__form-group file-input-field'>\n                          <mat-label>Drawing File:</mat-label>\n                          <upload-input formControlName='drawing_file'></upload-input>\n                      </mat-form-field>\n                  </p>\n              </mat-grid-tile>\n          </mat-grid-list> -->\n      </div>\n      <div *ngIf=\"data.action == 'edit' || data.action == 'resubmit'\">\n        <mat-grid-list cols=\"7\" rowHeight=\"100px\" gutterSize=\"16px\">\n          <mat-grid-tile class=\"shop-drawing-submit__col\" colspan=\"3\">\n            <p>\n              <mat-form-field\n                class=\"shop-drawing-submit__form-group file-input-field\"\n              >\n                <mat-label>Drawing File:</mat-label>\n                <upload-input formControlName=\"drawing_file\"></upload-input>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n\n      <div *ngIf=\"data.action !== 'view'\">\n        <mat-grid-list\n          cols=\"7\"\n          rowHeight=\"100px\"\n          gutterSize=\"16px\"\n          *ngIf=\"shouldDisplaySBHETransmittalFile()\"\n        >\n          <mat-grid-tile class=\"shop-drawing-submit__col\" colspan=\"3\">\n            <p>\n              <mat-form-field\n                class=\"shop-drawing-submit__form-group file-input-field\"\n              >\n                <mat-label>SBHE Transmittal Form:</mat-label>\n                <upload-input\n                  formControlName=\"submitted_transmittal_form\"\n                ></upload-input>\n              </mat-form-field>\n            </p>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n      <mat-grid-list\n        cols=\"7\"\n        rowHeight=\"100px\"\n        gutterSize=\"16px\"\n        *ngIf=\"shouldDisplayClientTransmittalFile() && data.action !== 'view'\"\n      >\n        <mat-grid-tile\n          class=\"shop-drawing-submit__col\"\n          *ngIf=\"data.action !== 'view'\"\n          colspan=\"3\"\n        >\n          <p>\n            <mat-form-field\n              class=\"shop-drawing-submit__form-group file-input-field\"\n            >\n              <mat-label>Client Transmittal Form:</mat-label>\n              <upload-input\n                formControlName=\"drawing_client_transmittal_file_upload\"\n              ></upload-input>\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n\n        <mat-grid-tile\n          class=\"shop-drawing-submit__col\"\n          *ngIf=\"data.action !== 'view' && shouldDisplayClientTransmittalFile()\"\n          colspan=\"2\"\n        >\n          <p>\n            <mat-form-field class=\"shop-drawing-submit__form-group\">\n              <mat-label>Client Transmittal No:</mat-label>\n              <input matInput formControlName=\"drawing_client_transmittal_no\" />\n            </mat-form-field>\n          </p>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <div *ngIf=\"data.action === 'view'\" class=\"drawing-file-row\">\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewDrawingFile()\"\n        >\n          View Drawing File\n        </button>\n        &nbsp;\n      </div>\n      <div *ngIf=\"data.action === 'view'\" class=\"drawing-file-row\">\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewSBHETransmittal()\"\n          *ngIf=\"drawingRef.transmittal_form\"\n        >\n          View SBHE Transmittal File\n        </button>\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewSubmittedTransmittalForm()\"\n          *ngIf=\"drawingRef.submitted_transmittal_form\"\n        >\n          View Submitted SBHE Transmittal File\n        </button>\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"viewClientTransmittal()\"\n          *ngIf=\"drawingRef.drawing_client_transmittal_file\"\n        >\n          View Client Transmittal File\n        </button>\n      </div>\n    </div>\n    <div class=\"form-loading\" *ngIf=\"loading\">\n      <mat-progress-spinner\n        mode=\"indeterminate\"\n        diameter=\"40\"\n      ></mat-progress-spinner>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button\n      mat-raised-button\n      color=\"warn\"\n      type=\"cancel\"\n      (click)=\"handleCancelClicked($event)\"\n    >\n      Cancel</button\n    >&nbsp;\n    <!-- TODO: Have a progress spinner here -->\n    <button\n      mat-raised-button\n      color=\"primary\"\n      type=\"submit\"\n      [disabled]=\"isDataSubmitting || loading\"\n      *ngIf=\"data.action !== 'view'\"\n    >\n      <span>{{\n        (data.action !== \"edit\" ? data.action : \"save\") | titlecase\n      }}</span>\n    </button>\n  </mat-dialog-actions>\n</form>\n\n<swal\n  #successConfirmation\n  title=\"Success\"\n  text=\"Drawing has been updated!\"\n  icon=\"success\"\n  (confirm)=\"handleFormSubmit()\"\n></swal>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormControl } from '@angular/forms';\nimport { HistoryFilters } from 'src/app/core/models/history-filters';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-history-filters',\n  templateUrl: './history-filters.component.html',\n  styleUrls: ['./history-filters.component.scss'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => HistoryFiltersComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => HistoryFiltersComponent),\n      multi: true\n    }\n  ]\n})\nexport class HistoryFiltersComponent implements OnInit, ControlValueAccessor {\n  date: FormControl;\n  _value: HistoryFilters;\n\n  @Input() loading: boolean;\n  @Input() include: string[];\n\n  @Input()\n  get value() {\n    return this._value;\n  }\n\n  set value(value: HistoryFilters) {\n    this._value = value;\n\n    if (value) {\n      this.date.setValue(value.date);\n    }\n  }\n\n  constructor(\n    private datePipe: DatePipe\n  ) { \n    this.date = new FormControl();\n\n    this.date.valueChanges.subscribe(date => {\n      const filters: HistoryFilters = {\n        date,\n      }\n      this.onChange(filters);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: HistoryFilters) {\n    if (value) {\n      this.date.setValue(value.date);\n    }\n  }\n\n  filter = (d: Date | null): boolean => {\n    if (this.include) {\n      const date = this.datePipe.transform(d, 'dd-MM-yyyy');\n\n      return this.include.indexOf(date) !== -1;\n    }\n\n    return true;\n  }\n\n  validate(_: FormControl) {\n    return this.date.valid ? null : { filters: { valid: false, } }\n  }\n}\n","<div class=\"history-filters\">\n  <div\n    fxLayout='row'\n    fxLayoutGap='16px'\n  >\n    <div fxFlex='0 0 20%'>\n      <mat-form-field appearance='outline' class='form-control' *ngIf='!loading'>\n        <mat-label>Date: </mat-label>\n        <input matInput [matDatepicker]=\"picker\" [matDatepickerFilter]=\"filter\" [formControl]='date'>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n      <div class='history-filters__loader' *ngIf='loading'>\n        <content-loader [style]='{width: \"100%\"}' height=\"80\" *ngIf='loading'>\n          <svg:rect x=\"0\" y=\"20\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"20\" />\n        </content-loader>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TenderDrawingHistoryComponent } from './tender-drawing/tender-drawing-history/tender-drawing-history.component';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { HistoryFiltersComponent } from './history-filters/history-filters.component';\nimport { TenderDrawingComponent } from './tender-drawing/tender-drawing.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FlexLayoutModule, CoreModule } from '@angular/flex-layout';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TypeDrawingComponent } from './type-drawing/type-drawing.component';\nimport { TypeDrawingHistoryComponent } from './type-drawing/type-drawing-history/type-drawing-history.component';\nimport { VersionedFieldComponent } from './shared/versioned-field/versioned-field.component';\n\n\n\n@NgModule({\n  declarations: [TenderDrawingHistoryComponent, HistoryFiltersComponent, TenderDrawingComponent, TypeDrawingComponent, TypeDrawingHistoryComponent, VersionedFieldComponent],\n  imports: [\n    CommonModule,\n    AppLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDatepickerModule,\n    ContentLoaderModule,\n    MatIconModule,\n    FlexLayoutModule,\n  ]\n})\nexport class HistoryModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-versioned-field',\n  templateUrl: './versioned-field.component.html',\n  styleUrls: ['./versioned-field.component.scss']\n})\nexport class VersionedFieldComponent {\n  @Input() label: string = '';\n  @Input()\n  set current(current) {\n    this._current = current;\n  }\n\n  get current() {\n    return this.displayValue(this._current);\n  }\n\n  @Input() audits: Array<any> = [];\n  @Input() textarea: boolean = false;\n  @Input() displayFn;\n\n  _current;\n\n  displayValue(value) {\n    if(this.displayFn && typeof this.displayFn === 'function') {\n      return this.displayFn(value)\n    }\n\n    return value;\n  }\n\n  constructor() { }\n}\n","<div class=\"versioned-field\">\n  <div class=\"versioned-field__current\">\n    <mat-form-field\n      appearance='fill'\n      class='form-control'\n    >\n      <mat-label>{{ label }}</mat-label>\n      <input matInput [value]='current' *ngIf='!textarea'>\n      <textarea matInput rows=5 [value]='displayValue(current)' *ngIf='textarea'></textarea>\n    </mat-form-field>\n    <div class=\"versioned-field__changes\">\n      <div class=\"versioned-field__audit\" *ngFor='let audit of audits'>\n        <strong>+ {{ displayValue(audit.value) }}</strong>\n        <div class=\"audit-bottom\">\n          <div class=\"auditor\">\n            {{ audit.auditedBy }}\n          </div>\n          &nbsp;-&nbsp;\n          <div class=\"updated-at\">\n            <span>{{ audit.time | date:\"shortTime\" }} - <strong>{{ audit.time | date:\"dd-MM-yyyy\"}}</strong></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\nimport { DatePipe } from '@angular/common';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-tender-drawing-history',\n  templateUrl: './tender-drawing-history.component.html',\n  styleUrls: ['./tender-drawing-history.component.scss']\n})\nexport class TenderDrawingHistoryComponent implements OnInit {\n  @Input() tenderDrawing: TenderDrawing;\n  @Input() audits: any;\n\n  get isCreated() {\n    return this.audits && this.audits.event === 'created';\n  }\n\n  get events() {\n    const events = this.audits.map(audit => {\n      return audit.event;\n    });\n\n    const eventsUnique = events.filter((event, index) => {\n      return events.indexOf(event) === index;\n    });\n\n    return eventsUnique.join(', ');\n  }\n\n  get doneBy() {\n    const employees = this.audits.map(audit => {\n      return `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n    });\n\n    const employeeUnique = employees.filter((employee, index) => {\n      return employees.indexOf(employee) === index;\n    });\n\n    return employeeUnique.join(', ');\n  }\n\n  constructor(\n    private datePipe: DatePipe,\n  ) { }\n\n  ngOnInit(): void {}\n\n  isUpdated(key) {\n    if(this.audits) {\n      return this.audits.find(audit => {\n        return audit.new_values[key]\n      });\n    }\n\n    return false;\n  }\n\n  extractValues(key) {\n    const hasNewValues =  this.audits.filter(audit => {\n      return audit.new_values[key];\n    });\n\n    return hasNewValues.map(audit => {\n      return {\n        time: audit.created_at,\n        value: audit.new_values[key],\n        auditedBy: `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n      }\n    });\n  }\n\n  generateDrawingFileUrl(url) {\n    return `${environment.s3_url}${url}`\n  }\n\n  valueToDate = (value) => {\n    return this.datePipe.transform(value, \"dd-MM-yyyy\");\n  }\n}\n","<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n  >\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing No: '\n      [current]='tenderDrawing.no'\n      [audits]='extractValues(\"drawing_no\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing Title: '\n      [current]='tenderDrawing.title'\n      [audits]='extractValues(\"drawing_title\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n  >\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing Title Date: '\n      [current]='tenderDrawing.titleDate'\n      [audits]='extractValues(\"drawing_title_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Category: '\n      [current]='tenderDrawing.category'\n      [audits]='extractValues(\"drawing_category\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Project: '\n      [current]='tenderDrawing.projectName'\n      [audits]='extractValues(\"project\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Uploaded By: '\n      [current]='tenderDrawing.employeeName'\n      [audits]='extractValues(\"employee\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div \n  fxLayout='row' \n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Shop Drawing Target Date: '\n      [current]='tenderDrawing.targetDate'\n      [audits]='extractValues(\"drawing_target_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Current Drawing No: '\n      [current]='tenderDrawing.currentDrawingNo'\n      [audits]='extractValues(\"current_drawing_no\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div fxLayout='row'>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing File: '\n      [current]='tenderDrawing.drawingFile'\n      [audits]='extractValues(\"drawing_file_upload\")'\n      [displayFn]='generateDrawingFileUrl'>\n    </app-versioned-field>\n  </div>\n</div>\n\n<div class=\"details\">\n  <p><strong>Events: </strong>{{ events | titlecase }}</p>\n  <p><strong>Done by: </strong>{{ doneBy | titlecase }}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DrawingService } from 'src/app/drawing/shared/drawing.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap, map } from 'rxjs/operators';\nimport { HistoryFilters } from 'src/app/core/models/history-filters';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-tender-drawing',\n  templateUrl: './tender-drawing.component.html',\n  styleUrls: ['./tender-drawing.component.scss']\n})\nexport class TenderDrawingComponent implements OnInit {\n  loading: boolean = false;\n  drawingId: string;\n  include: string[];\n  _filterValue: HistoryFilters = {\n    date: null,\n  }; \n  filters: FormControl;\n  tenderDrawing: TenderDrawing;\n  audits = [];\n\n  get filterValue(): HistoryFilters {\n    return this._filterValue;\n  }\n\n  set filterValue(value: HistoryFilters) {\n    this._filterValue = value;\n  }\n\n  constructor(\n    private drawingService: DrawingService,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loading = true;\n\n\n    this.route.parent.paramMap\n      .pipe(switchMap((params: ParamMap) => {\n        console.log(params)\n        const drawingId = params.get('drawingId');\n        this.drawingId = drawingId;\n        return this.drawingService.getHistoryDates(drawingId);\n      })).subscribe((res) => {\n        this.include = res;\n\n        this.getHistory()\n        this.loading = false;\n      });\n  }\n\n  getHistory() {\n    this.drawingService.getHistory(this.drawingId)\n      .subscribe(res => {\n        console.log(res)\n        this.tenderDrawing = res.tenderDrawing;\n        this.audits = res.audits;\n      });\n  }\n\n  parseAppDateToDate(apiDate: string) {\n    const parts = apiDate.split(\"-\");\n\n    return new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n  }\n}\n","<div class=\"tender-drawing-history-page\">\n  <div class=\"tender-drawing-history\">\n    <mat-card>\n      <h2 mat-card-title>History</h2>\n      <div mat-card-content>\n        <app-tender-drawing-history \n          [tenderDrawing]='tenderDrawing'\n          [audits]='audits'\n          *ngIf='tenderDrawing'\n          class='history'\n          >\n        </app-tender-drawing-history>\n        <div class=\"tender-drawing-history__empty\" *ngIf='!loading && !audits.length'>\n          <p class='text-center'>There are no history for this drawing yet...</p>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-type-drawing-history',\n  templateUrl: './type-drawing-history.component.html',\n  styleUrls: ['./type-drawing-history.component.scss']\n})\nexport class TypeDrawingHistoryComponent implements OnInit {\n  @Input() drawing;\n  @Input() audits;\n\n  get events() {\n    const events = this.audits.map(audit => {\n      return audit.event;\n    });\n\n    const eventsUnique = events.filter((event, index) => {\n      return events.indexOf(event) === index;\n    });\n\n    return eventsUnique.join(', ');\n  }\n\n  get doneBy() {\n    const employees = this.audits.map(audit => {\n      return `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n    });\n\n    const employeeUnique = employees.filter((employee, index) => {\n      return employees.indexOf(employee) === index;\n    });\n\n    return employeeUnique.join(', ');\n  }\n\n  constructor(\n    private datePipe: DatePipe,\n  ) { }\n\n  ngOnInit(): void {}\n\n  isUpdated(key) {\n    if(this.audits) {\n      return this.audits.find(audit => {\n        return audit.new_values[key]\n      });\n    }\n\n    return false;\n  }\n\n  extractValues(key) {\n    const hasNewValues =  this.audits.filter(audit => {\n      return audit.new_values[key];\n    });\n\n    return hasNewValues.map(audit => {\n      return {\n        time: audit.created_at,\n        value: audit.new_values[key],\n        auditedBy: `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n      }\n    });\n  }\n\n  generateDrawingFileUrl(url) {\n    return `${environment.s3_url}${url}`\n  }\n\n  getApprovedBy() {\n    return this.drawing.approved_by ? `${this.drawing.approved_by.first_name} ${this.drawing.approved_by.last_name}` : '';\n  }\n\n  getDrawingComment() {\n    switch(this.drawing.status) {\n      case 'Submitted':\n        return this.drawing.drawing_submission_comment;\n      case 'ReSubmitted':\n        return this.drawing.drawing_resubmission_comment;\n      case 'Rejected':\n        return this.drawing.drawing_rejected_comment;\n      case 'Approved':\n        return this.drawing.drawing_approved_comment;\n      default:\n        return '';\n    }\n  }\n\n  getUploadedBy() {\n    return this.drawing.uploaded_by ? `${this.drawing.uploaded_by.first_name} ${this.drawing.uploaded_by.last_name}` : '';\n  }\n\n  valueToDate = (value) => {\n    return this.datePipe.transform(value, \"dd-MM-yyyy\");\n  }\n\n  // extractCommentValues() {\n  //   const commentKeys = [\n  //     'drawing_submission_comment',\n  //     'drawing_resubmission_comment',\n  //     'drawing_rejected_comment',\n  //     'drawing_approved_comment',\n  //   ];\n\n  //   const hasNewValues =  this.audits.filter(audit => {\n  //     const keys = Object.keys(audit.new_values);\n\n  //     commentKeys.forEach(key => {\n  //       if(keys.indexOf(key) !== -1) {\n  //         return true;\n  //       }\n  //     });\n  //   });\n\n  //   return hasNewValues.map(audit => {\n  //     return {\n  //       time: audit.created_at,\n  //       value: audit.new_values[key],\n  //       auditedBy: `${audit.user.employee.first_name} ${audit.user.employee.last_name}`\n  //     }\n  //   });\n  // }\n}\n","<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Drawing No: '\n      [current]='drawing.drawing_no'\n      [audits]='extractValues(\"drawing_no\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Actual Submission Date: '\n      [current]='drawing.drawing_submission_date'\n      [audits]='extractValues(\"drawing_submission_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n</div>\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Approved By: '\n      [current]='getApprovedBy()'\n      [audits]='extractValues(\"approved_by\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Revision No: '\n      [current]='drawing.drawing_revision_no'\n      [audits]='extractValues(\"drawing_revision_no\")'>\n    </app-versioned-field>\n  </div>\n</div>\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='As Built Target Date: '\n      [current]='drawing.drawing_as_built_target_date'\n      [audits]='extractValues(\"drawing_as_built_target_date\")'\n      [displayFn]='valueToDate'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Status: '\n      [current]='drawing.status'\n      [audits]='extractValues(\"status\")'>\n    </app-versioned-field>\n  </div>\n</div>\n\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Comments: '\n      [current]='drawing.drawing_submission_comment'\n      [audits]='extractValues(\"drawing_submission_comment\")'\n      [textarea]='true'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Uploaded By: '\n      [current]='getUploadedBy()'\n      [audits]='extractValues(\"uploaded_by\")'>\n    </app-versioned-field>\n  </div>\n</div>\n\n<div\n  fxLayout='row'\n  fxLayoutGap='16px'\n  fxLayoutAlign='space-between flex-start'\n>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='SBHE Transmittal No: '\n      [current]='drawing.transmittal_form ? drawing.transmittal_form.ref_no : \"\"'\n      [audits]='extractValues(\"transmittal_form\")'>\n    </app-versioned-field>\n  </div>\n  <div fxFlex='0 0 calc(50% - 16px)'>\n    <app-versioned-field\n      label='Client Transmittal No: '\n      [current]='drawing.drawing_client_transmittal_no'\n      [audits]='extractValues(\"drawing_client_transmittal_no\")'>\n    </app-versioned-field>\n  </div>\n  <!-- <div fxFlex='0 0 calc(50% - 16px)'>\n    <mat-form-field \n      appearance='fill' \n      class='form-control' \n    >\n      <mat-label>Uploaded By:</mat-label>\n      <input type=\"text\" matInput readonly [value]='getUploadedBy()'>\n    </mat-form-field>\n    <div class='new-value bg-green' *ngIf='isUpdated(\"uploaded_by\")'>\n      <div class='audit' *ngFor='let audit of extractValues(\"uploaded_by\")'>\n        <strong>+ {{ audit.value }}</strong>\n        <div class=\"audit-bottom\">\n          <div class=\"auditor\">\n            {{ audit.auditedBy }}\n          </div>\n          &nbsp;-&nbsp;\n          <div class=\"updated-at\">\n            <span>{{audit.time | date:\"shortTime\"}} - <strong>{{ audit.time | date:\"dd-MM-yyyy\"}}</strong></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HistoryFilters } from 'src/app/core/models/history-filters';\nimport { TypeDrawingService } from 'src/app/core/services/type-drawing.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-type-drawing',\n  templateUrl: './type-drawing.component.html',\n  styleUrls: ['./type-drawing.component.scss']\n})\nexport class TypeDrawingComponent implements OnInit {\n  loading: boolean = false;\n  drawingId: string;\n  include: string[];\n  _filterValue: HistoryFilters = {\n    date: null,\n  }; \n  filters: FormControl;\n  typeDrawing;\n  audits = [];\n  type = '';\n\n  get filterValue(): HistoryFilters {\n    return this._filterValue;\n  }\n\n  set filterValue(value: HistoryFilters) {\n    this._filterValue = value;\n  }\n\n  get drawingTitle(): string {\n    return this.typeDrawing && this.typeDrawing.drawing_no ? this.typeDrawing.drawing_no : this.typeDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private typeDrawingService: TypeDrawingService,\n    private route: ActivatedRoute,\n    private datePipe: DatePipe,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true\n\n    this.route.parent.paramMap\n      .pipe(switchMap((params: ParamMap) => {\n        const drawingId = params.get('drawingId');\n        this.drawingId = drawingId;\n        return this.typeDrawingService.getHistoryDates(drawingId, this.type);\n      })).subscribe((res) => {\n        this.getHistory();\n        \n        this.loading = false;\n      });\n  }\n\n  getHistory() {\n    this.typeDrawingService.getHistory(this.drawingId, this.type)\n      .subscribe(res => {\n        this.typeDrawing = res.data;\n        this.audits = res.data.audits;\n      });\n  }\n\n  parseAppDateToDate(apiDate: string) {\n    const parts = apiDate.split(\"-\");\n\n    return new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n  }\n\n}\n","<div class=\"type-drawing-history-page\">\n  <div class=\"type-drawing-history\">\n    <mat-card>\n      <h2 mat-card-title>History</h2>\n      <div mat-card-content>\n        <app-type-drawing-history \n          [drawing]='typeDrawing'\n          [audits]='audits'\n          *ngIf='typeDrawing'\n          class='history'\n          >\n        </app-type-drawing-history>\n        <div class=\"tender-drawing-history__empty\" *ngIf='!loading && !audits.length'>\n          <p class='text-center'>There are no history for this drawing yet...</p>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { Router } from '@angular/router';\nimport { UserService, User } from '../core/services/user.service';\nimport { Breadcrumb } from '../layout/breadcrumbs/breadcrumbs.component';\nimport _ from 'lodash';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule, MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  projects: Array<any> = [];\n  loading: Boolean = false;\n  isAuthenticated: boolean;\n  user: User = null;\n  projectsDataSource = new MatTableDataSource([]);\n  currentSort: Sort = {active: '', direction: ''};\n\n  columnsToDisplay = ['projectTitle', 'startDate', 'endDate', 'status', 'progress'];\n\n  get projectsSorted(): Array<any> {\n    let _sortKey = 'id';\n    \n    if(this.currentSort.direction) {\n      switch(this.currentSort.active) {\n        case('projectTitle'):\n          _sortKey = 'title';\n          break;\n        case('startDate'):\n          _sortKey = 'startDate';\n          break;\n        case('endDate'):\n          _sortKey = 'endDate';\n          break;\n        case('status'):\n          _sortKey = 'status';\n          break;\n        case('progress'):\n          _sortKey = 'progress';\n          break;\n      }\n\n      return _.orderBy(this.projects, [_sortKey], [this.currentSort.direction]);\n    }\n    return this.projects;\n  }\n\n\n  constructor(\n    private projectsService: ProjectsService,\n    private router: Router,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.userService.currentUser.subscribe(user => {\n      this.user = user;\n\n      this.loading = false;\n    });\n  }\n\n  getData(): void {\n    this.loading = true\n\n    this.userService.currentUser\n      .subscribe()\n  }\n\n  onProjectClick(project) {\n    this.router.navigateByUrl(`/dashboard/project/${project.id}`);\n    \n    return false;\n  }\n\n  goToDrawingRequests() {\n    this.router.navigate([`drawing-requests`])\n  }\n\n  generateStatusClass(status: String) {\n    return `projects__status projects__status--${_.kebabCase(status)}`;\n  }\n\n  onTableSortChange($event: Sort) {\n    this.currentSort = $event;\n  }\n}\n\n","<div class=\"home\">\n  <ng-container *ngIf='!loading'>\n    <div *ngIf='user.isDrafter'>\n      <app-projects></app-projects>\n    </div>\n    <div *ngIf='user.isAdmin'>\n      <app-request-drawings></app-request-drawings>\n    </div>\n  </ng-container>\n  <div class=\"home__loader-container\" *ngIf='loading'>\n    <mat-progress-spinner \n      class='loader'\n      mode='indeterminate'\n      value='75'\n      diameter='60'\n    ></mat-progress-spinner>\n    <p>Please wait...</p>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { CoreModule } from '../core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { UserService } from '../core/services/user.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { RequestDrawingsModule } from '../request-drawings/request-drawings.module';\nimport { DrafterModule } from '../drafter/drafter.module';\nimport { ProjectsModule } from '../projects/projects.module';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    RequestDrawingsModule,\n    DrafterModule,\n    LayoutModule,\n    ProjectsModule,\n    MatCardModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    CoreModule,\n    MatTableModule,\n    MatSortModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    RouterModule,\n  ],\n  providers: [\n    ProjectsService,\n    UserService,\n    AuthGuard,\n  ],\n  exports: [\n    HomeComponent,\n  ]\n})\nexport class HomeModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { JwtService } from 'src/app/core/services/jwt.service';\nimport { Router } from '@angular/router';\nimport _ from 'lodash'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html',\n  styleUrls: ['./app-header.component.scss']\n})\nexport class AppHeaderComponent implements OnInit {\n  user: User\n  loading: boolean = false;\n\n  @Output() menuClicked: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userService.currentUser.subscribe(res => {\n      this.user = res\n    })\n  }\n\n  logout() {\n    this.userService.logout();\n    this.router.navigateByUrl('/login');\n  }\n\n  onMenuClick() {\n    this.menuClicked.emit();\n  }\n}\n","<mat-toolbar class='app-header' color='primary'>\n  <div class=\"app-header__left\">\n    <button \n      mat-icon-button class=\"example-icon\" \n      aria-label=\"Example icon-button with menu icon\"\n      (click)='onMenuClick()'\n    >\n      <mat-icon>menu</mat-icon>\n    </button>\n    <div class=\"app-header__logo-container\">\n      <a href=\"#\">\n        <img src=\"../../../assets/logo.png\" alt=\"\" class='app-header__logo'>\n      </a>\n    </div>\n  </div>\n  <div class=\"app-header__actions-container\" *ngIf='user'>\n    <button mat-button [matMenuTriggerFor]='headerMenu'>\n      <img [src]=\"user.avatar\" alt=\"\" class='app-header__avatar'>\n    </button>\n    <mat-menu #headerMenu=\"matMenu\" class='header-menu'>\n      <div class=\"user-details\">\n        <span class='user'>{{ user.getUserFullName() }}</span>\n      </div>\n      <button mat-menu-item (click)=\"logout()\">Logout</button>\n    </mat-menu>\n  </div>\n</mat-toolbar>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, Event, NavigationEnd } from '@angular/router';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss']\n})\nexport class BreadcrumbsComponent implements OnInit {\n  // @Input() replaceLabel: ReplaceLabelMap[];\n\n  public breadcrumbs: Breadcrumb[];\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n  }\n\n  ngOnInit(): void {\n    this.router.events.pipe(\n        filter((event: Event) => event instanceof NavigationEnd),\n        distinctUntilChanged(),\n    ).subscribe(() => {\n        this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n    });\n  }\n\n  buildBreadCrumb(route: ActivatedRoute, url: string = '', breadcrumbs: Breadcrumb[] = []): Breadcrumb[] {\n    //If no routeConfig is avalailable we are on the root path\n    let label = route.routeConfig && route.routeConfig.data ? route.routeConfig.data.breadcrumb : '';\n    let path = route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n    if (route.routeConfig && route.routeConfig.data && route.routeConfig.data.method) {\n      route.routeConfig.data.method();\n    }\n\n    // If the route is dynamic route such as ':id', remove it\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n\n    if(isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n\n    //In the routeConfig the complete path is not available,\n    //so we rebuild it each time\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: Breadcrumb = {\n        name: route.routeConfig ? route.routeConfig.path : '',\n        label: label,\n        url: nextUrl,\n    };\n    // Only adding route with non-empty label\n    const newBreadcrumbs = breadcrumb.label ? [ ...breadcrumbs, breadcrumb ] : [ ...breadcrumbs];\n    if (route.firstChild) {\n        //If we are not on our current path yet,\n        //there will be more children to look after, to build our breadcumb\n        return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n\n    return newBreadcrumbs;\n  }\n}\n\nexport interface Breadcrumb {\n  name: string;\n  label: string;\n  url: string;\n  icon?: string;\n}\n\n// export interface replaceLabelMap\n","<ol class='breadcrumbs'>\n  <li *ngFor='let breadcrumb of breadcrumbs'>\n    <a [routerLink]='breadcrumb.url'>\n      {{ breadcrumb.label }}\n    </a>\n  </li>\n</ol>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppHeaderComponent } from './app-header/app-header.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table'; \nimport { MatIconModule } from '@angular/material/icon'; \nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [AppHeaderComponent, MainLayoutComponent, BreadcrumbsComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    RouterModule,\n    // TODO REMOVE COMPONENTS HERE\n    MatCardModule,\n    MatGridListModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatToolbarModule,\n    MatSidenavModule,\n  ],\n  exports: [\n    MainLayoutComponent,\n    AppHeaderComponent,\n    BreadcrumbsComponent,\n  ]\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { MenuService } from 'src/app/core/services/menu-service';\nimport { environment } from 'src/environments/environment';\nimport { Router, Event, NavigationStart } from '@angular/router';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\n\nexport class MainLayoutComponent implements OnInit {\n  menuStatus: boolean = false;\n  sbheLink: String = environment.sbhePmUrl;\n\n  constructor(\n    public dialog: MatDialog,\n    public menuService: MenuService,\n    private router: Router\n  ) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationStart) {\n        this.setMenu(false);\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.menuService.menuStatus.subscribe(res => {\n      this.menuStatus = res;\n    });\n  }\n\n  toggleMenu() {\n    this.menuService.setMenuStatus(!this.menuStatus);\n  }\n\n  setMenu(boolean) {\n    this.menuService.setMenuStatus(boolean);\n  }\n\n  handleClick() {\n    this.setMenu(false);  \n  }\n}\n","<div class=\"main-layout mat-app-background\">\n  <app-header\n    (menuClicked)='toggleMenu()'\n  ></app-header>\n  <mat-sidenav-container>\n    <mat-sidenav \n      #sidenav \n      mode='push'\n      [opened]='menuStatus'\n      fixedTopGap='62'\n      fixedInViewport=\"true\"\n      (closed)=\"setMenu(false)\"\n      class='main-layout__sidebar'>\n      <mat-nav-list>\n        <mat-list-item>\n          <a matLine routerLink=\"/\">\n            <button mat-icon-button>\n              <mat-icon>dashboard</mat-icon>\n              Drawing Module\n            </button>\n          </a>\n        </mat-list-item>\n        <mat-list-item>\n          <a matLine [href]=\"sbheLink\" target=\"_blank\" (click)='handleClick()'>\n            <button mat-icon-button>\n              <mat-icon>menu_book</mat-icon>\n              Project Management\n            </button>\n          </a>\n        </mat-list-item>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class='main-layout__content'>\n      <div id=\"content\">\n        <ng-content></ng-content>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { Router } from '@angular/router';\nimport { UserService, User } from '../core/services/user.service';\nimport { Breadcrumb } from '../layout/breadcrumbs/breadcrumbs.component';\nimport _ from 'lodash';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule, MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects: Array<any> = [];\n  loading: Boolean = false;\n  isAuthenticated: boolean;\n  user: User = null;\n  projectsDataSource = new MatTableDataSource([]);\n  currentSort: Sort = {active: '', direction: ''};\n\n  columnsToDisplay = ['projectTitle', 'startDate', 'endDate', 'status', 'progress'];\n\n  get projectsSorted(): Array<any> {\n    let _sortKey = 'id';\n    \n    if(this.currentSort.direction) {\n      switch(this.currentSort.active) {\n        case('projectTitle'):\n          _sortKey = 'title';\n          break;\n        case('startDate'):\n          _sortKey = 'startDate';\n          break;\n        case('endDate'):\n          _sortKey = 'endDate';\n          break;\n        case('status'):\n          _sortKey = 'status';\n          break;\n        case('progress'):\n          _sortKey = 'progress';\n          break;\n      }\n\n      return _.orderBy(this.projects, [_sortKey], [this.currentSort.direction]);\n    }\n    return this.projects;\n  }\n\n\n  constructor(\n    private projectsService: ProjectsService,\n    private router: Router,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.userService.currentUser.subscribe(user => {\n      this.user = user;\n    });\n    this.getData();\n  }\n\n  getData(): void {\n    this.loading = true\n\n    this.projectsService.getProjects()\n      .subscribe(res => {\n        this.projects = res;\n        this.loading = false;\n      });\n  }\n\n  onProjectClick(project) {\n    this.router.navigateByUrl(`/dashboard/projects/${project.id}`);\n    \n    return false;\n  }\n\n  goToDrawingRequests() {\n    this.router.navigate([`drawing-requests`])\n  }\n\n  generateStatusClass(status: String) {\n    return `projects__status projects__status--${_.kebabCase(status)}`;\n  }\n\n  onTableSortChange($event: Sort) {\n    this.currentSort = $event;\n  }\n}\n","<div class=\"home\">\n  <div\n    fxLayout='row'\n    fxLayoutAlign='space-between center'\n  >\n    <h1>Projects</h1>\n    <div class=\"actions\">\n      <a \n        [routerLink]=\"['/']\"\n        mat-raised-button\n        color='primary'\n        *ngIf='!user.isDrafter'\n      >\n        View Request Drawing\n      </a>\n    </div>\n  </div>\n  <div class=\"projects\" *ngIf='!loading'>\n    <mat-table \n      [dataSource]=\"projectsSorted\" \n      class='projects__table' \n      matSort \n      #projectsTable\n      (matSortChange)='onTableSortChange($event)'\n    >\n      <ng-container matColumnDef=\"projectTitle\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Project Title </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.title }} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"startDate\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Start Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.startDate | date:'dd-MM-yyyy' }} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"endDate\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> End Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.endDate | date:'dd-MM-yyyy' }} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\">\n          <span [ngClass]='generateStatusClass(project.status)'>\n            {{ project.status }} \n          </span>\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"progress\">\n        <mat-header-cell *matHeaderCellDef class='projects__heading' mat-sort-header> Progress </mat-header-cell>\n        <mat-cell *matCellDef=\"let project\"> {{ project.percentage }}% </mat-cell>\n      </ng-container>\n\n\n      <mat-header-row *matHeaderRowDef=\"columnsToDisplay\" class='projects__header'></mat-header-row>\n      <mat-row *matRowDef=\"let project; columns: columnsToDisplay\" class='projects__row' (click)='onProjectClick(project)'></mat-row>\n    </mat-table>\n  </div>\n  <div class=\"home__loader-container\" *ngIf='loading'>\n    <mat-progress-spinner \n      class='loader'\n      mode='indeterminate'\n      value='75'\n      diameter='60'\n    ></mat-progress-spinner>\n    <p>Please wait...</p>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { CoreModule } from '../core';\nimport { ProjectsService } from '../core/services/projects.service';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { UserService } from '../core/services/user.service';\nimport { AuthGuard } from '../core/services/auth-guard.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ProjectsComponent } from './projects.component';\n\n\n\n@NgModule({\n  declarations: [ProjectsComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    MatCardModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    CoreModule,\n    MatTableModule,\n    MatSortModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    RouterModule,\n  ],\n  providers: [\n    ProjectsService,\n    UserService,\n    AuthGuard,\n  ],\n  exports: [\n    ProjectsComponent,\n  ]\n})\nexport class ProjectsModule { }\n","<h1 mat-dialog-title>Assign Requests</h1>\n<div mat-dialog-content class='assign-drawings'>\n  <div \n    class=\"assign-drawings__container\"\n    fxLayout='row wrap'\n    fxLayoutAlign='center'\n    fxLayoutGap='16px'\n  >\n    <div class=\"assign-drawings__column\" *ngFor='let drafter of drafters; let i = index' fxFlex='0 0 calc(33.333% - 16px)'>\n      <div class=\"assign-drawing-drafter\">\n        <div class=\"assign-drawing-drafter__header\">\n          <img \n            [src]='drafter.avatarLink'\n            alt=\"Avatar\"\n            class='assign-drawing-drafter__img'\n          >\n          <h4>{{ drafter.fullname }}</h4>\n        </div>\n        <div \n          cdkDropList\n          [id]='\"drafter-\" + i'\n          class=\"assign-drawing-drafter__tasks\"\n          [cdkDropListConnectedTo]=\"taskDragLists\"\n          [cdkDropListData]=\"drafter.drawingRequests\"\n          (cdkDropListDropped)=\"drop($event)\"\n        >\n        <div *ngFor=\"let task of drafter.drawingRequests\" class='assign-drawing-drafter__task' cdkDrag>{{ task.subject }}</div> \n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"closeDialog()\" color='warn'>Close</button>\n  <button mat-raised-button (click)=\"saveDrawingAssignments()\" color='primary' [disabled]='loading || isSaving'>Save</button>\n</div>\n","import { Component, OnInit, ViewChildren, QueryList, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { moveItemInArray, transferArrayItem, CdkDragDrop, CdkDropList } from '@angular/cdk/drag-drop';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\n\n\n@Component({\n  selector: 'app-assign-drawings',\n  templateUrl: './assign-drawings.component.html',\n  styleUrls: ['./assign-drawings.component.scss']\n})\nexport class AssignDrawingsComponent implements OnInit {\n  drafters: Array<Drafter> = [];\n  loading: Boolean = false;\n  taskDragLists = [];\n  isSaving: Boolean = false;\n\n  @Output() onAssignSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private dialogRef: MatDialogRef<AssignDrawingsComponent>,\n    private drafterService: DrafterService,\n    private drawingRequestService: DrawingRequestService,\n  ) { \n    \n\n    console.log(this.taskDragLists)\n  }\n  \n  ngOnInit(): void {\n    this.getDrafters();\n  }\n\n  async getDrafters() {\n    this.loading = true;\n    this.drafterService.getDrafters(false).subscribe(res => {\n      this.drafters = res.data.map(drafter => {\n        const {\n          id,\n          first_name: firstName,\n          last_name: lastName,\n          drawing_requests: drawingRequests,\n          avatar = '',\n        } = drafter;\n  \n        // TODO: Handle status in API\n        const status = 'IN'\n  \n        return new Drafter({firstName, lastName, drawingRequests, status, id, avatar});\n        });\n        this.taskDragLists = this.drafters.map((drafter, index) => {\n          return `drafter-${index}`\n        });\n\n        this.loading = false;\n      });\n  }\n\n  closeDialog() {\n    this.dialogRef.close()\n  }\n\n  saveDrawingAssignments() {\n    this.isSaving = true;\n    const body = this.prepareSaveDrawingAssignmentsData();\n\n    this.drawingRequestService.assignRequests(body).subscribe(res => {\n      this.isSaving = false;\n      this.closeDialog();\n\n      this.onAssignSuccess.emit();\n    });\n  }\n\n  private prepareSaveDrawingAssignmentsData() {\n    return this.drafters.map(drafter => {\n      const drawingRequests = drafter.drawingRequests.map((request: DrawingRequest) => request.id);\n      \n      return {\n        drafter: drafter.id,\n        drawing_requests: drawingRequests,\n      }\n    });\n  }\n\n  \n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n}\n","<div class=\"drafter-tasks\">\n  <div class=\"drafter-tasks__actions\">\n    <button \n      mat-stroked-button\n      (click)='openFilters()'\n    >\n      <mat-icon>filter_list</mat-icon>\n      Filter Requests\n    </button>\n  </div>\n  <table mat-table [dataSource]=\"tableData.data\" class='drafter-tasks__table'>\n    <ng-container matColumnDef='index'>\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef='let task; let i = index;'>{{ i + 1 }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='requestedBy'>\n      <th mat-header-cell *matHeaderCellDef>Requester</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestedBy.getUserFullName() }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='subject'>\n      <th mat-header-cell *matHeaderCellDef>Subject</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.subject }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='drawingNo'>\n      <th mat-header-cell *matHeaderCellDef>Drawing No</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.drawing.currentDrawingNo }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef='let task;'>\n        <span [ngClass]=\"generateStatusClass(task.status)\">{{ task.status }}</span>\n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef='requestedDate'>\n      <th mat-header-cell *matHeaderCellDef>Request Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='targetDate'>\n      <th mat-header-cell *matHeaderCellDef>Target Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.targetDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='actions'>\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef='let drawingRequest;'>\n        <button mat-button [matMenuTriggerFor]='buildDrawingMenu'>\n          <mat-icon aria-hidden=\"false\" aria-label=\"See more icon\">more_horiz</mat-icon>\n        </button>\n        <mat-menu #buildDrawingMenu xPosition='before'>\n          <button mat-menu-item (click)='viewDrawingRequest(drawingRequest)'>View</button>\n          <button mat-menu-item (click)='editDrawingRequest(drawingRequest)'>Edit</button>\n          <button mat-menu-item color='accent' (click)='showApproveDrawing(drawingRequest)' type='button' *ngIf='drawingRequest.status === \"Completed\"'>Approve</button>\n          <button mat-menu-item color='warn' (click)='showRejectDrawing(drawingRequest)' type='button' *ngIf='drawingRequest.status === \"Completed\"'>Reject</button>\n        </mat-menu>\n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n  </table>\n\n  <div \n    fxLayout='row'\n    fxLayoutAlign='center'\n    class=\"drafter__tasks-no-data\"\n    *ngIf='!loading && !fetchingRequests && tableData.data.length === 0'\n  >\n    <p>No tasks found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"45\" *ngIf='loading || fetchingRequests'>\n    <svg:rect x=\"0\" y=\"5\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"20\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"0\" y=\"35\" width=\"100%\" height=\"5\" />\n  </content-loader>\n\n  <mat-paginator \n    [length]='tableData.total'\n    [pageSize]='tableData.data.length'\n    [pageSizeOptions]=\"pageSizes\"\n    (page)='handlePaginatorChange($event)'\n    *ngIf='!loading'\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DrafterService, DrafterTasksData } from 'src/app/core/services/drafter.service';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { User } from 'src/app/core/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DrawingRequestComponent, DrawingRequestDialogData } from '../drawing-request/drawing-request.component';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { RequestDrawingActionComponent } from '../request-drawing-action/request-drawing-action.component';\nimport _ from 'lodash';\nimport { RequestTableFiltersComponent, RequestTableFiltersDialogData, RequestTableFilters } from 'src/app/drafter/request-table-filters/request-table-filters.component';\n\n@Component({\n  selector: 'drafter-tasks',\n  templateUrl: './drafter-tasks.component.html',\n  styleUrls: ['./drafter-tasks.component.scss']\n})\nexport class DrafterTasksComponent implements OnInit {\n  @Input() loading: Boolean = false;\n  @Output() onEditFormSubmit: EventEmitter<any> = new EventEmitter();\n\n  private _drafter: Drafter;\n  public columnsToDisplay = ['index', 'requestedBy', 'subject', 'drawingNo', 'status', 'requestedDate', 'targetDate', 'actions'];\n  public drafterDrawingRequests: DrawingRequest[] = [];\n  public tableData: DrafterTasksData = {\n    data: [],\n    total: 0,\n    currentPage: 1,\n  }\n  public fetchingRequests: Boolean = false;\n\n  @Input() set drafter(drafter: Drafter) {\n    this._drafter = drafter;\n    \n    if(drafter) {\n      this.filters = {\n        searchTerm: '',\n        status: '',\n        employeeId: '',\n        endDate: '',\n        fromDate: ''\n      };\n\n      this.getData();\n    }\n  }\n\n  get pageSizes(): Array<number> {\n    let defaultPageSizes = [\n      50,\n      100,\n      150\n    ];\n\n    if(this.tableData.total < 50) {\n      defaultPageSizes.unshift(this.tableData.total);\n    }\n\n    if(this.tableData.total > 150) {\n      defaultPageSizes.push(this.tableData.total);\n    }\n\n    return defaultPageSizes;\n  }\n\n  get drafter(): Drafter {\n    return this._drafter;\n  }\n\n  set pageNumber(pageNumber: number) {\n    this._pageNumber = pageNumber;\n\n    this.getData();\n  }\n\n  get pageNumber(): number {\n    return this._pageNumber;\n  }\n\n  private _pageNumber: number = 1;\n\n  set filters(filters: RequestTableFilters) {\n    this._filters = filters;\n\n    this.getData();\n  }\n\n  get filters(): RequestTableFilters {\n    return this._filters;\n  }\n\n  private _filters: RequestTableFilters = {\n    searchTerm: '',\n    status: '',\n    employeeId: '',\n    endDate: '',\n    fromDate: ''\n  }\n\n  constructor(\n    private drafterService: DrafterService,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {}\n\n  async getData() {\n    this.tableData.data = [];\n    this.fetchingRequests = true;\n    const filters = this.filters;\n\n    this.drafterService.getDrafterTasks(this._drafter.id, {\n      page: this.pageNumber,\n      filters,\n    }).subscribe(res => {\n      this.tableData = res;\n\n      this.fetchingRequests = false;\n    });\n  }\n\n  viewDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      type: 'view',\n      drawingRequest\n      // projectId: this.projectId,\n    }\n\n    const viewRequestDialog = this.dialog.open(DrawingRequestComponent, {\n      width: '720px',\n      restoreFocus: false,\n      data: dialogData,\n    });\n\n    viewRequestDialog.componentInstance.onApproveSuccess.subscribe(() => this.onEditFormSubmit.emit('Drawing successfuly updated.'));\n    viewRequestDialog.componentInstance.onRejectSuccess.subscribe(() => this.onEditFormSubmit.emit('Drawing successfuly rejected.'));\n  }\n\n  editDrawingRequest(drawingRequest: DrawingRequest) {\n    const dialogData: DrawingRequestDialogData = {\n      type: 'edit',\n      drawingRequest\n      // projectId: this.projectId,\n    }\n\n    const editDialogRef = this.dialog.open(DrawingRequestComponent, {\n      width: '720px',\n      restoreFocus: false,\n      data: dialogData,\n    });\n\n    editDialogRef.componentInstance.onFormSubmit.subscribe(() => this.onEditFormSubmit.emit());\n  }\n\n  showRequestDrawingActionRef(action, drawingRequest) {\n    const requestDrawingActionRef = this.dialog.open(RequestDrawingActionComponent, {\n      width: '720px',\n      restoreFocus: false,\n      data: {\n        action,\n        drawingRequest,\n      }\n    });\n\n    return requestDrawingActionRef;\n  }\n\n  showApproveDrawing(drawingRequest) {\n    const dialogRef = this.showRequestDrawingActionRef('approve', drawingRequest);\n\n    dialogRef.componentInstance.onCompleteSuccess.subscribe(() => this.onEditFormSubmit.emit());\n  }\n\n  showRejectDrawing(drawingRequest) {\n    const dialogRef = this.showRequestDrawingActionRef('reject', drawingRequest);\n\n    dialogRef.componentInstance.onCompleteSuccess.subscribe(() => this.onEditFormSubmit.emit());\n  }\n\n  generateStatusClass(status: String) {\n    const statusTransformed = _.kebabCase(status);\n\n    return `drafter-tasks-table__status--${statusTransformed}`;\n  }\n\n  handlePaginatorChange($event) {\n    this.pageNumber = $event.pageIndex + 1;\n  }\n\n  openFilters() {\n    const filters = this.filters;\n\n    const data: RequestTableFiltersDialogData = {\n      projectId: '',\n      filters,\n      defaultStatus: 'All',\n    }\n\n    const dialogRef = this.dialog.open(RequestTableFiltersComponent, {\n      width: '700px',\n      data,\n    });\n\n    dialogRef.componentInstance.onFilterChange.subscribe(res => {\n      this.filterRequests(res);\n    });\n  }\n\n  filterRequests(filters) {\n    this.filters = filters;\n  }\n}\n","import { Component, OnInit, EventEmitter, Output, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\n\n@Component({\n  selector: 'app-drafters',\n  templateUrl: './drafters.component.html',\n  styleUrls: ['./drafters.component.scss']\n})\nexport class DraftersComponent implements OnInit {\n  public loading: Boolean = false;\n  public drafters: Drafter[] = [];\n  public columnsToDisplay: string[] = ['drafter', 'status', 'overview'];\n\n  @Output() drafterClicked: EventEmitter<Drafter> = new EventEmitter();\n\n  constructor(\n    private dialogRef: MatDialogRef<DraftersComponent>,\n    private drafterService: DrafterService,\n    @Inject(MAT_DIALOG_DATA) public data: DraftersDialogData,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n    this.drafterService.getDrafters(true, this.data.projectId).subscribe(res => {\n      this.drafters = res.data.map(drafter => {\n        const {\n          id,\n          first_name: firstName,\n          last_name: lastName,\n          drawing_requests: drawingRequests,\n          avatar ='',\n        } = drafter;\n\n        // TODO: Handle status in API\n        const status = 'IN'\n\n        return new Drafter({firstName, lastName, drawingRequests, status, id, avatar});\n      });\n      \n      this.loading = false;\n    });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  handleDrafterClicked(drafter: Drafter) {\n    this.drafterClicked.emit(drafter);\n    this.dialogRef.close();\n  }\n}\n\nexport interface DraftersDialogData {\n  projectId: number;\n}\n","<h1 mat-dialog-title>Drafters</h1>\n<div mat-dialog-content>\n  <table mat-table [dataSource]=\"drafters\" class='drafters__table'>\n    <ng-container matColumnDef='drafter'>\n      <th mat-header-cell *matHeaderCellDef>Drafter</th>\n      <td mat-cell *matCellDef=\"let drafter\">\n        <img \n          class='drafters__avatar'\n          [src]=\"drafter.avatarLink\" \n          alt=\"avatar\"\n        >\n        {{ drafter.fullname }}\n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef=\"let drafter\">\n      {{ drafter.status }}\n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef='overview'>\n      <th mat-header-cell *matHeaderCellDef>\n        <div class=\"request-drawings-table__overview-heading\">\n          Overview\n        </div>\n      </th>\n      <td mat-cell *matCellDef=\"let drafter\">\n        <mat-progress-bar mode=\"determinate\" [value]=\"(drafter.completedTasks.length/drafter.drawingRequests.length) * 100\" class='progress-bar'></mat-progress-bar>\n        {{ drafter.completedTasks.length }} Completed : {{ drafter.drawingRequests.length }} Assigned\n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr (click)=\"handleDrafterClicked(drafter)\" mat-row *matRowDef=\"let drafter; columns: columnsToDisplay\" class='drafters__table-row'></tr>\n  </table>\n  \n  <div class='drafters__no-data' *ngIf='drafters.length == 0 && !loading'>\n    <p>No drafter found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"90\" *ngIf='loading'>\n    <svg:rect x=\"10\" y=\"0\" width='20' height='20'/>\n    <svg:rect x=\"40\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"25\" width='20' height='20'/>\n    <svg:rect x=\"40\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"50\" width='20' height='20'/>\n    <svg:rect x=\"40\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  </content-loader>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color='warn' (click)=\"closeDialog()\">Close</button>\n</div>","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DatePipe } from '@angular/common';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\n\n@Component({\n  selector: 'app-drawing-request',\n  templateUrl: './drawing-request.component.html',\n  styleUrls: ['./drawing-request.component.scss']\n})\nexport class DrawingRequestComponent implements OnInit {\n  public drawingRequestForm: FormGroup;\n  public isSubmitting: Boolean = false;\n\n  @Output() onFormSubmit: EventEmitter<any> = new EventEmitter();\n  @Output() onApproveSuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onRejectSuccess: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('contentDiv') contentDiv: HTMLElement;\n  @ViewChild('confirmApproveDrawing') confirmApproveDrawing: SwalComponent;\n  @ViewChild('confirmRejectDrawing') confirmRejectDrawing: SwalComponent;\n\n  get isView(): Boolean {\n    return this.data.type === \"view\";\n  }\n\n  get drawingRequest(): DrawingRequest {\n    return this.data.drawingRequest;\n  }\n\n  constructor(\n    private dialogRef: MatDialogRef<DrawingRequestComponent>,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: DrawingRequestDialogData,\n    private drawingRequestService: DrawingRequestService,\n    private datePipe: DatePipe,\n  ) { \n    this.drawingRequestForm = this.formBuilder.group({\n      subject: new FormControl({value: this.drawingRequest.subject, disabled: this.isView}, [Validators.required]),\n      status: new FormControl({value: this.drawingRequest.status, disabled: this.isView}, [Validators.required]),\n      request_date: new FormControl({value: this.drawingRequest.requestDate, disabled: this.isView}, [Validators.required]),\n      target_date: new FormControl({value: this.drawingRequest.targetDate, disabled: this.isView } , [Validators.required]),\n      drawing: new FormControl({value: this.drawingRequest.drawing, disabled: this.isView } , [Validators.required]),\n      drawing_file: new FormControl(null),\n      comments: new FormControl({value: this.drawingRequest.comments, disabled: this.isView}, {})\n    });\n\n    if(this.data.isDrafter) {\n      this.drawingRequestForm.controls['status'].disable();\n    }\n  }\n\n  ngOnInit(): void {}\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  saveDrawingRequest() {\n    const {\n      request_date,\n      target_date,\n      subject,\n      status,\n      drawing,\n      drawing_file,\n      comments,\n    } = this.drawingRequestForm.value;\n\n    const body = {\n      subject,\n      status,\n      request_date: this.datePipe.transform(request_date, 'yyyy-MM-dd'),\n      target_date: this.datePipe.transform(target_date, 'yyyy-MM-dd'),\n      drawing_id: drawing.id,\n      comments,\n    }\n\n    if(drawing_file) {\n      body['drawing_file'] = drawing_file;\n    }\n\n    this.isSubmitting = true;\n    this.drawingRequestService.editRequest(body, this.data.drawingRequest.id).subscribe(() => {\n      this.isSubmitting = false;\n      this.onFormSubmit.emit();\n      this.closeDialog();\n    });\n  }\n\n  showApproveDrawingConfirm() {\n    this.confirmApproveDrawing.fire();\n  }\n\n  showRejectDrawingConfirm() {\n    this.confirmRejectDrawing.fire();\n  }\n}\n\nexport interface DrawingRequestDialogData {\n  type: string;\n  drawingRequest: DrawingRequest;\n  projectId?: string | number;\n  isDrafter?: Boolean;\n}\n","<form [formGroup]='drawingRequestForm'>\n  <h1 mat-dialog-title>Drawing Request</h1>\n  <div mat-dialog-content cdkFocusRegionstart>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row`'\n      *ngIf='drawingRequest.drawing && data.isDrafter'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Project</mat-label>\n          <input matInput disabled [value]='drawingRequest.drawing.projectName'>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Subject</mat-label>\n          <input matInput formControlName='subject'>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Status</mat-label>\n          <mat-select formControlName='status'>\n            <mat-option value='Assigned'>Assigned</mat-option>\n            <mat-option value='Completed'>Completed</mat-option>\n            <mat-option value='Approved'>Approved</mat-option>\n            <mat-option value='Rejected'>Rejected</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Request Date:</mat-label>\n          <input matInput [matDatepicker]=\"requestDate\" formControlName='request_date'>\n          <mat-datepicker-toggle matSuffix [for]=\"requestDate\"></mat-datepicker-toggle>\n          <mat-datepicker #requestDate></mat-datepicker>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Target Date:</mat-label>\n          <input matInput [matDatepicker]=\"targetDate\" formControlName='target_date'>\n          <mat-datepicker-toggle matSuffix [for]=\"targetDate\"></mat-datepicker-toggle>\n          <mat-datepicker #targetDate></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Requested By</mat-label>\n          <input matInput [value]='drawingRequest.requestedBy.getUserFullName()' disabled>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Assigned To</mat-label>\n          <input matInput [value]='drawingRequest.assignedTo.fullname' disabled>\n        </mat-form-field>\n      </div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Drawing:</mat-label>\n          <app-drawing-select formControlName='drawing' [projectId]='data.projectId'></app-drawing-select>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'></div>\n    </div>\n    <div\n      fxLayout='row'\n      fxLayoutGap='16px'\n      class='row'\n      *ngIf='!isView'\n    >\n      <div fxFlex='0 0 calc(50% - 16px)'>\n        <mat-form-field class='form-control'>\n          <mat-label>Drawing File:</mat-label>\n          <upload-input formControlName='drawing_file'></upload-input>\n        </mat-form-field>\n      </div>\n      <div fxFlex='0 0 calc(50%)'></div>\n    </div>\n\n    <div fxLayout='row'>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n        <textarea matInput cols=\"30\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n    </div>\n    \n    <div\n      class='files'\n    >\n      <button *ngIf='drawingRequest.drawingFile' mat-raised-button color='primary' type='button' (click)='drawingRequest.openDrawing()'>\n        View Original Drawing\n      </button> <br />\n      <button *ngIf='drawingRequest.completedDrawingFile !== \"Assigned\" && drawingRequest.completedDrawingFile' mat-raised-button color='primary' type='button' (click)='drawingRequest.openCompletedDrawingFile()'>\n        View Completed Drawing\n      </button>\n    </div>\n  </div>\n  \n  <div mat-dialog-actions>\n    <div\n      fxLayout='row'\n      fxLayoutAlign='space-between flex-start'\n      class='full-width'\n    >\n      <div class=\"actions-left\">\n        <button mat-raised-button color='primary' (click)='saveDrawingRequest(); $event.preventDefault()' *ngIf='data.type !== \"view\"'>Save</button>\n      </div>\n      <button mat-raised-button  (click)='closeDialog()' [disabled]='' type='button'>Close</button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { DrafterService } from 'src/app/core/services/drafter.service';\nimport { Drafter } from 'src/app/core/models/drafter';\nimport { take, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'featured-drafters',\n  templateUrl: './featured-drafters.component.html',\n  styleUrls: ['./featured-drafters.component.scss']\n})\nexport class FeaturedDraftersComponent implements OnInit {\n  public loading: Boolean = false;\n  public drafters: Array<Drafter> = [];\n  public columnsToDisplay: string[] = ['drafter', 'status', 'overview'];\n  // private _projectId;\n\n  @Output() drafterClicked: EventEmitter<Drafter> = new EventEmitter();\n  @Output() onDraftersLoaded: EventEmitter<Drafter[]> = new EventEmitter();\n\n  // @Input() set projectId(projectId: Number | string) {\n  //   if(projectId) {\n  //     this._projectId = projectId;\n  //     this.getData();\n  //   } else {\n  //     this.loading = true;\n  //   }\n  // }\n\n  // get projectId(): Number | string {\n  //   return this._projectId;\n  // }\n\n  constructor(\n    private drafterService: DrafterService\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n    this.drafters = [];\n\n    this.drafterService.getDrafters(true)\n      .pipe(map(res => res.data))\n      .subscribe(res => {\n        this.drafters = res.map(drafter => {\n          const {\n            id,\n            first_name: firstName,\n            last_name: lastName,\n            drawing_requests: drawingRequests,\n            avatar = '',\n          } = drafter;\n\n          // TODO: Handle status in API\n          const status = 'IN';\n\n          return new Drafter({firstName, lastName, drawingRequests, status, id, avatar});\n        });\n        \n        this.loading = false;\n        this.onDraftersLoaded.emit(this.drafters);\n      });\n  }\n\n  handleDrafterClicked(drafter: Drafter) {\n    this.drafterClicked.emit(drafter)\n  }\n}\n","<table mat-table [dataSource]=\"drafters\" class='featured-drafter__table'>\n  <ng-container matColumnDef='drafter'>\n    <th mat-header-cell *matHeaderCellDef>Drafter</th>\n    <td mat-cell *matCellDef=\"let drafter\">\n      <img \n        class='featured-drafter__avatar'\n        [src]=\"drafter.avatarLink\" \n        alt=\"avatar\"\n      >\n      {{ drafter.fullname }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef='status'>\n    <th mat-header-cell *matHeaderCellDef>Status</th>\n    <td mat-cell *matCellDef=\"let drafter\">\n    {{ drafter.status }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef='overview'>\n    <th mat-header-cell *matHeaderCellDef>\n      <div class=\"request-drawings-table__overview-heading\">\n        Overview\n      </div>\n    </th>\n    <td mat-cell *matCellDef=\"let drafter\">\n      <mat-progress-bar mode=\"determinate\" [value]=\"(drafter.completedTasks.length/drafter.drawingRequests.length) * 100\" class='progress-bar'></mat-progress-bar>\n      {{ drafter.completedTasks.length }} Completed : {{ drafter.drawingRequests.length }} Assigned\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr (click)=\"handleDrafterClicked(drafter)\" mat-row *matRowDef=\"let drafter; columns: columnsToDisplay\" class='featured-drafter__table-row'></tr>\n</table>\n\n<div class='featured-drafter__no-data' *ngIf='drafters.length == 0 && !loading'>\n  <p>No drafter found...</p>\n</div>\n\n<content-loader [style]='{width: \"100%\"}' height=\"90\" *ngIf='loading'>\n  <svg:rect x=\"10\" y=\"0\" width='20' height='20'/>\n  <svg:rect x=\"40\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"25\" width='20' height='20'/>\n  <svg:rect x=\"40\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"50\" width='20' height='20'/>\n  <svg:rect x=\"40\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n</content-loader>\n","<table mat-table [dataSource]=\"requests\" class='request-drawings__table'>\n  <ng-container matColumnDef='index'>\n    <th mat-header-cell *matHeaderCellDef>No.</th>\n    <td mat-cell *matCellDef=\"let request; let i = index;\">{{ i + 1 }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef='subject'>\n    <th mat-header-cell *matHeaderCellDef>Subject</th>\n    <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.subject }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef='drafter'>\n    <th mat-header-cell *matHeaderCellDef>Assigned To:</th>\n    <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.assignedTo.fullname }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef='status'>\n    <th mat-header-cell *matHeaderCellDef>Status:</th>\n    <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.status }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n</table> \n\n<div class='no-data' *ngIf='requests.length == 0 && !loading'>\n  <p>No drawing requests found...</p>\n</div>\n\n<content-loader [style]='{width: \"100%\"}' height=\"150\" *ngIf='loading'>\n  <svg:rect x=\"10\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"83\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  <svg:rect x=\"10\" y=\"108\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n</content-loader>","import { Component, OnInit, Input } from '@angular/core';\nimport { DrawingRequestService, DrawingRequestParams } from 'src/app/core/services/drawing-request.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { map, switchMap } from 'rxjs/operators';\nimport { User, UserService } from 'src/app/core/services/user.service';\nimport { Drafter } from 'src/app/core/models/drafter';\n\n@Component({\n  selector: 'featured-requests',\n  templateUrl: './featured-requests.component.html',\n  styleUrls: ['./featured-requests.component.scss']\n})\nexport class FeaturedRequestsComponent implements OnInit {\n  public requests: DrawingRequest[] = [];\n  public loading: Boolean = false;\n  public columnsToDisplay: string[] = ['index', 'subject', 'status', 'drafter'];\n  // private _projectId;\n  private user: User;\n\n  constructor(\n    private drawingRequestService: DrawingRequestService,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  async getData() {\n    this.loading = true;\n    this.requests = [];\n\n    this.userService.currentUser\n      .pipe(switchMap(user => {\n        this.user = user;\n\n        const params: DrawingRequestParams = {\n          assignedBy: this.user.employeeId,\n          status: 'Assigned',\n        }\n\n        return this.drawingRequestService.getRequests('', params)\n      }))\n      .subscribe(res => {\n        console.log(res);\n        const requests = res;\n        this.requests = requests.reverse();\n\n        this.loading = false;\n      });\n  }\n}\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\n\n@Component({\n  selector: 'app-request-drawing-action',\n  templateUrl: './request-drawing-action.component.html',\n  styleUrls: ['./request-drawing-action.component.scss']\n})\nexport class RequestDrawingActionComponent implements OnInit {\n  comments: FormControl = new FormControl('');\n  loading: boolean = false;\n\n  @Output() onCompleteSuccess: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<RequestDrawingActionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RequestDrawingActionDialogData,\n    private drawingReqeustService: DrawingRequestService,\n  ) {}\n\n  ngOnInit(): void {}\n\n  handleFormSubmit() {\n    const action = this.data.action;\n    const drawingRequestId = this.data.drawingRequest.id;\n    const comments = this.comments.value;\n    this.loading = true;\n\n    switch(action) {\n      case 'approve':\n        this.drawingReqeustService.approveDrawing(drawingRequestId, comments).subscribe((res) => {\n          this.loading = false;\n          this.onCompleteSuccess.emit();\n          this.closeDialog();\n        });\n        break;\n      case 'reject':\n        this.drawingReqeustService.rejectDrawing(drawingRequestId, comments).subscribe((res) => {\n          this.loading = false;\n          this.onCompleteSuccess.emit();\n          this.closeDialog();\n        });\n        break;\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n\nexport interface RequestDrawingActionDialogData {\n  action: string;\n  drawingRequest: DrawingRequest;\n}\n","<div class=\"drawing-request-action\">\n  <form (submit)='handleFormSubmit()'>\n    <h1 mat-dialog-title>{{ data.action | titlecase }} Drawing Request</h1>\n    <div class=\"mat-dialog-content\">\n      <p>Are you sure you want to {{ data.action }} this drawing request?</p>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments</mat-label>\n        <textarea matInput rows=\"5\" name='comments' [formControl]='comments'></textarea>\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-raised-button (click)='closeDialog()' type='button' color='warn'>Cancel</button>\n      <button mat-raised-button type='submit' color='primary' [disabled]='loading'>{{ data.action | titlecase }}</button>\n    </div>\n  </form>\n</div>","import { Component, Inject, EventEmitter, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DatePipe } from '@angular/common';\nimport { map, switchMap } from 'rxjs/operators';\nimport { DrawingService } from 'src/app/drawing/shared/drawing.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { TypeDrawingModule } from 'src/app/type-drawing/type-drawing.module';\nimport { TypeDrawingService } from 'src/app/core/services/type-drawing.service';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\n\n@Component({\n  selector: 'app-request-drawing',\n  templateUrl: './request-drawing.component.html',\n  styleUrls: ['./request-drawing.component.scss']\n})\nexport class RequestDrawingComponent implements OnInit {\n  public requestDrawingForm: FormGroup;\n  public isSubmitting: Boolean = false;\n  public onRequestSaved: EventEmitter<any> = new EventEmitter();\n  public drawingTypes;\n  approvers;\n\n  constructor(\n    public dialogRef: MatDialogRef<RequestDrawingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RequestDrawingDialogData,\n    private formBuilder: FormBuilder,\n    private drawingRequestService: DrawingRequestService,\n    private drawingService: DrawingService,\n    private datePipe: DatePipe,\n    private projectConfigService: ProjectConfigurationService,\n  ) {\n    this.drawingTypes = this.data.drawingTypes;\n    this.requestDrawingForm = this.formBuilder.group({\n      subject: new FormControl('', [Validators.required]),\n      targetDate: new FormControl(new Date(), [Validators.required]),\n      drawing: new FormControl('', [Validators.required]),\n      drawingFile: new FormControl('', [Validators.required]),\n      typeId: new FormControl('', [Validators.required]),\n      comments: new FormControl(''),\n    });\n\n    this.requestDrawingForm.get('drawing').valueChanges.pipe(switchMap(res => {\n      this.requestDrawingForm.get('typeId').setValue('');\n      this.requestDrawingForm.get('typeId').disable();\n      return this.projectConfigService.getProjectDrawingTypes(res.projectId)\n    })).subscribe(res => {\n      this.requestDrawingForm.get('typeId').enable();\n      this.drawingTypes = res.drawingTypes;\n    });\n\n    if (this.data.isDrafter) {\n      this.requestDrawingForm.addControl('employeeId', new FormControl('', [Validators.required]));\n    }\n  }\n\n  ngOnInit() {\n    if(this.data.isDrafter) {\n      this.approvers = this.drawingService.getApprovers('shop', this.data.projectId).pipe(\n        map(res => res.data)\n      );\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  processForm() {\n    this.isSubmitting = true;\n\n    const {\n      subject,\n      targetDate,\n      drawing,\n      drawingFile,\n      employeeId,\n      comments,\n      typeId,\n    } = this.requestDrawingForm.value\n    const body = {\n      subject,\n      target_date: this.datePipe.transform(targetDate, \"yyyy-MM-dd\"),\n      request_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\n      drafter_id: this.data.drafterId,\n      project_id: this.data && this.data.projectId ? this.data.projectId : '',\n      drawing_id: drawing.id,\n      drawing_file: drawingFile,\n      type_id: typeId,\n      comments,\n    }\n\n    if (this.data.isDrafter) {\n      body['employee_id'] = employeeId;\n    }\n    \n    this.drawingRequestService.createRequest(body).subscribe(res => {\n      this.closeDialog();\n      this.onRequestSaved.emit(res.data);\n    });\n  }\n}\n\ninterface RequestDrawingDialogData {\n  drafterId;\n  projectId;\n  isDrafter?: boolean;\n  drawingTypes: Array<ProjectDrawingType>;\n}\n","<h1 mat-dialog-title>New Drawing Request</h1>\n<form [formGroup]=\"requestDrawingForm\">\n  <mat-dialog-content>\n    <div class=\"new-drawing-request\">\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>Subject: </mat-label>\n        <input matInput formControlName='subject'/>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>Target Date:</mat-label>\n        <input matInput [matDatepicker]=\"targetDate\" formControlName='targetDate'>\n        <mat-datepicker-toggle matSuffix [for]=\"targetDate\"></mat-datepicker-toggle>\n        <mat-datepicker #targetDate></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>For Drawing No:</mat-label>\n        <app-drawing-select formControlName='drawing' [projectId]='data.projectId'></app-drawing-select>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Drawing Type:</mat-label>\n        <mat-select formControlName='typeId'>\n          <mat-option [value]='drawingType.id' *ngFor='let drawingType of drawingTypes'>{{ drawingType.type }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control' *ngIf='data.isDrafter'>\n        <mat-label>Assigned By:</mat-label>\n        <mat-select formControlName='employeeId'>\n          <mat-option *ngFor='let approver of approvers | async' [value]='approver.id'>{{ approver.first_name }} {{ approver.last_name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class='new-drawing-request__form-control'>\n        <mat-label>Original Drawing File:</mat-label>\n        <upload-input formControlName='drawingFile'></upload-input>\n      </mat-form-field>\n      <mat-form-field class='form-control'>\n        <mat-label>Comments:</mat-label>\n        <textarea matInput id=\"\" cols=\"20\" rows=\"5\" formControlName='comments'></textarea>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-raised-button color='warn' type='button' (click)='closeDialog()'>Close</button>\n    <button mat-raised-button color='primary' [disabled]='!requestDrawingForm.valid || isSubmitting' (click)='processForm(); $event.preventDefault()'>Save</button>\n  </mat-dialog-actions>\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssignDrawingsComponent } from './assign-drawings/assign-drawings.component';\nimport { Drafter } from '../core/models/drafter';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { FeaturedDraftersComponent } from './featured-drafters/featured-drafters.component';\nimport { DrafterTasksComponent } from './drafter-tasks/drafter-tasks.component';\nimport { FeaturedRequestsComponent } from './featured-requests/featured-requests.component';\nimport { RequestDrawingComponent } from './request-drawing/request-drawing.component';\nimport { DraftersComponent } from './drafters/drafters.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectConfigurationService } from '../core/services/project-configuration.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ProjectDrawingType } from '../core/models/project-drawing-type';\n\n@Component({\n  selector: 'app-request-drawings',\n  templateUrl: './request-drawings.component.html',\n  styleUrls: ['./request-drawings.component.scss']\n})\n\nexport class RequestDrawingsComponent implements OnInit {\n  @ViewChild('successConfirmation') private successConfirmation: SwalComponent;\n  @ViewChild('featuredDrafters') private featuredDrafters: FeaturedDraftersComponent;\n  @ViewChild('featuredRequests') private featuredReqests: FeaturedRequestsComponent;\n  @ViewChild('drafterTasks') private drafterTasks: DrafterTasksComponent;\n\n\n  selectedDrafter: Drafter = null;\n  isDrafterTasksLoading: Boolean = false;\n  test = new FormControl(null);\n  projectId: number | string;\n  drawingTypes: Array<ProjectDrawingType>;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private projectConfigService: ProjectConfigurationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.isDrafterTasksLoading = true;\n  }\n\n  openAssignDrawings() {\n    const assignDialog = this.dialog.open(AssignDrawingsComponent, {\n      width: '100%'\n    });\n\n    assignDialog.componentInstance.onAssignSuccess.subscribe(() => this.onAssignDrawingsSuccess());\n  }\n\n  handleDrafterClicked(drafter: Drafter) {\n    this.selectedDrafter = drafter;\n\n    this.isDrafterTasksLoading = false;\n  }\n\n  handleDraftersLoaded(drafters: Drafter[]) {\n    if(!this.selectedDrafter) {\n      this.selectedDrafter = drafters[0];\n\n      this.isDrafterTasksLoading = false;\n    }\n  }\n\n  onAssignDrawingsSuccess() {\n    this.successConfirmation.swalOptions = {text: \"Requests successfully assigned\"};\n\n    this.getAllData();\n\n    this.successConfirmation.fire();\n  }\n\n  onRequestSaved() {\n    this.successConfirmation.swalOptions = {text: \"Requests successfully saved\"};\n\n    this.getAllData();\n\n    this.successConfirmation.fire();\n  }\n\n  getAllData() {\n    this.featuredDrafters.getData();\n    this.featuredReqests.getData();\n    this.drafterTasks.getData();\n  }\n\n  showNewRequestDrawing() {\n    const newRequestDrawingDialog = this.dialog.open(RequestDrawingComponent, {\n      width: '720px',\n      data: {\n        drafterId: this.selectedDrafter.id,\n        projectId: this.projectId,\n        drawingTypes: this.drawingTypes,\n      }\n    });\n\n    newRequestDrawingDialog.componentInstance.onRequestSaved.subscribe(() => this.onRequestSaved());\n  }\n\n  openDrafters() {\n    const draftersDialog = this.dialog.open(DraftersComponent, {\n      width: '720px',\n      data: {\n        projectId: this.projectId,\n      }\n    });\n\n    draftersDialog.componentInstance.drafterClicked.subscribe((drafter) => this.handleDrafterClicked(drafter))\n  }\n\n  openRequests() {\n    const requestsDialog = this.dialog.open(RequestsComponent, {\n      width: '1000px',\n      data: {}\n    });\n  }\n\n  handleEditRequestFormSubmit(message) {\n    const alertMessage = message ? message : \"Request successfully saved\";\n\n    this.successConfirmation.swalOptions = {text: alertMessage};\n\n    this.getAllData();\n\n    this.successConfirmation.fire();\n  }\n}\n","<div class=\"request-drawings\">\n  <div \n    fxLayout='row'\n    fxLayoutAlign='space-between center'\n  >\n    <h1>Request Drawing</h1>\n    <a [routerLink]=\"['/dashboard/projects']\" mat-raised-button color='primary'>View All Projects</a>\n  </div>\n  <div \n    fxLayout='row wrap'\n    fxLayoutGap='16px'\n  >\n    <div fxFlex='60 0 0'>\n      <mat-card class='request-drawings__card'>\n        <mat-card-header>\n          <mat-card-title>Requested Drawings</mat-card-title>\n          <button mat-stroked-button color='primary' (click)='openRequests()'>See All</button>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"request-drawings__table-container\">\n            <featured-requests \n              #featuredRequests>\n            </featured-requests>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div fxFlex='40 0 0'>\n      <mat-card class='request-drawings__card requested-drawings'>\n        <mat-card-header>\n          <mat-card-title>Drafters</mat-card-title>\n          <div class=\"actions\">\n            <button mat-stroked-button color='primary' (click)=\"openAssignDrawings()\">Assigned Drawing</button>&nbsp;\n            <button mat-stroked-button color='primary' (click)=\"openDrafters()\">See All</button>\n          </div>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"request-drawings__table-container\">\n            <featured-drafters \n              (drafterClicked)='handleDrafterClicked($event)' \n              (onDraftersLoaded)='handleDraftersLoaded($event)' \n              #featuredDrafters>\n            </featured-drafters>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"request-drawings-main-table\">\n    <mat-card class='request-drawings__card request-drawings__card--main'>\n      <div \n        fxLayout='row'\n        class=\"drafter-tasks__header\"\n      >\n        <div class=\"drafter-tasks__title\" fxLayout='row'>\n          <content-loader [style]='{width: \"100%\"}' height=\"20\" *ngIf='isDrafterTasksLoading'>\n            <svg:rect x=\"10\" y=\"0\" width='320' height='20'/>\n          </content-loader>\n          <mat-card-title *ngIf='!isDrafterTasksLoading && selectedDrafter'>{{ selectedDrafter.fullname }}</mat-card-title>\n        </div>\n        <div class=\"drafter-tasks__action\">\n          <button mat-raised-button color='primary' (click)='showNewRequestDrawing()'>Request Drawing</button>\n        </div>\n      </div>\n      <mat-card-content>\n        <drafter-tasks \n          [loading]=\"isDrafterTasksLoading\" \n          [drafter]=\"selectedDrafter\" \n          (onEditFormSubmit)='handleEditRequestFormSubmit($event)' \n          #drafterTasks>\n        </drafter-tasks>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n\n<swal \n  #successConfirmation\n  title=\"Success\"\n  icon='success'\n>\n</swal>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RequestDrawingsComponent } from './request-drawings.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { LayoutModule as AppLayout } from '../layout/layout.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AssignDrawingsComponent } from './assign-drawings/assign-drawings.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ContentLoaderModule } from '@ngneat/content-loader';\nimport { FeaturedDraftersComponent } from './featured-drafters/featured-drafters.component';\nimport { DrafterModule } from '../drafter/drafter.module';\nimport { DrafterService } from '../core/services/drafter.service';\nimport { FeaturedRequestsComponent } from './featured-requests/featured-requests.component';\nimport { DrawingRequestService } from '../core/services/drawing-request.service';\nimport { DrafterTasksComponent } from './drafter-tasks/drafter-tasks.component';\nimport { RequestDrawingComponent } from './request-drawing/request-drawing.component';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DraftersComponent } from './drafters/drafters.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { DrawingRequestComponent } from './drawing-request/drawing-request.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SharedModule } from '../shared/shared.module';\nimport { RequestDrawingActionComponent } from './request-drawing-action/request-drawing-action.component';\nimport { RouterModule } from '@angular/router';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n\n\n\n@NgModule({\n  declarations: [\n    RequestDrawingsComponent, \n    AssignDrawingsComponent, \n    FeaturedDraftersComponent, \n    FeaturedRequestsComponent, \n    DrafterTasksComponent, \n    RequestDrawingComponent, \n    DraftersComponent, \n    RequestsComponent, \n    DrawingRequestComponent, \n    RequestDrawingActionComponent\n  ],\n  imports: [\n    CommonModule,\n    AppLayout,\n    RouterModule,\n    MatCardModule,\n    MatGridListModule,\n    MatTableModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    FlexLayoutModule,\n    MatDatepickerModule,\n    DragDropModule,\n    DrafterModule,\n    ContentLoaderModule,\n    SweetAlert2Module,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    SharedModule,\n  ],\n  providers: [\n    DrafterService,\n    DrawingRequestService,\n  ],\n  exports: [\n    DrawingRequestComponent,\n    RequestDrawingComponent,\n    RequestDrawingsComponent,\n  ]\n})\nexport class RequestDrawingsModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { DrawingRequest } from 'src/app/core/models/drawing-request';\nimport { UserService, User } from 'src/app/core/services/user.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-requests',\n  templateUrl: './requests.component.html',\n  styleUrls: ['./requests.component.scss']\n})\nexport class RequestsComponent implements OnInit {\n  public loading: Boolean = false;\n  public requests: DrawingRequest[] = [];\n  public columnsToDisplay: string[] = ['index', 'subject', 'status', 'requestDate', 'targetDate', 'drafter'];\n\n  constructor(\n    private dialogRef: MatDialogRef<RequestsComponent>,\n    private drawingRequestService: DrawingRequestService,\n    private userService: UserService,\n    @Inject(MAT_DIALOG_DATA) public data: RequestsDialogData,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n    \n    this.userService.currentUser\n      .pipe(switchMap((user: User) => {\n        return this.drawingRequestService.getRequests(this.data.projectId, {\n          assignedBy: user.employeeId,\n          status: 'Assigned',\n        });\n      })).subscribe(res => {\n        const requests = res;\n\n        this.requests = requests.reverse();\n\n        this.loading = false;\n      }); \n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n\nexport interface RequestsDialogData {\n  projectId: string | Number;\n}\n","<h1 mat-dialog-title>Requests</h1>\n<div mat-dialog-content>\n  <table mat-table [dataSource]=\"requests\" class='request-drawings__table'>\n    <ng-container matColumnDef='index'>\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let request; let i = index;\">{{ i + 1 }}</td>\n    </ng-container>\n  \n    <ng-container matColumnDef='subject'>\n      <th mat-header-cell *matHeaderCellDef>Subject</th>\n      <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.subject }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='requestDate'>\n      <th mat-header-cell *matHeaderCellDef>Request Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.requestDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='status'>\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.status }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='targetDate'>\n      <th mat-header-cell *matHeaderCellDef>Target Date</th>\n      <td mat-cell *matCellDef='let task;'>{{ task.targetDate | date:'dd-MM-yyyy' }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef='drafter'>\n      <th mat-header-cell *matHeaderCellDef>Assigned To:</th>\n      <td mat-cell *matCellDef=\"let drawing;\">{{ drawing.assignedTo.fullname }}</td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n  </table> \n  \n  <div class='no-data' *ngIf='requests.length == 0 && !loading'>\n    <p>No requests found...</p>\n  </div>\n  \n  <content-loader [style]='{width: \"100%\"}' height=\"150\" *ngIf='loading'>\n    <svg:rect x=\"10\" y=\"8\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"33\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"58\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"83\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n    <svg:rect x=\"10\" y=\"108\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"5\" />\n  </content-loader>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color='primary' (click)=\"closeDialog()\">Close</button>\n</div>","import { Component, OnInit, Optional, Self, Input, Output, EventEmitter, forwardRef, ElementRef } from '@angular/core';\nimport { NgControl, ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'app-ajax-autocomplete',\n  templateUrl: './ajax-autocomplete.component.html',\n  styleUrls: ['./ajax-autocomplete.component.scss'],\n  providers: [],\n})\nexport class AjaxAutocompleteComponent {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n  searchTermInput: FormControl;\n\n  @Input() options;\n  @Input() displayFn;\n  @Input() loading;\n\n  @Output() onSearchTermInputChange: EventEmitter<any> = new EventEmitter();\n  @Output() onOptionSelected: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef,\n  ) { \n    this.searchTermInput = new FormControl(null);\n\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.searchTermInput.valueChanges.subscribe(searchTerm => {\n      let term = searchTerm;\n\n      if(typeof term !== 'string') {\n        term = this.displayFn(term);\n      }\n\n      this.onChange(term);\n    });\n  }\n\n  writeValue(value: any): void {\n    this.searchTermInput.setValue(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean):void {\n    if (isDisabled) {\n      this.searchTermInput.disable();\n    } else {\n      this.searchTermInput.enable();\n    }\n  }\n\n  handleOptionSelected(option: MatAutocompleteSelectedEvent) {\n    this.onOptionSelected.emit(option.option.value);\n  }\n}\n","<div class=\"ajax-autocomplete\">\n  <input matInput [formControl]='searchTermInput' autocomplete=\"off\" [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto='matAutocomplete' [displayWith]='displayFn' (optionSelected)='handleOptionSelected($event)'>\n    <mat-option *ngIf=\"loading\" class=\"loading\">\n      <div class=\"ajax-autocomplete__loader-container\">\n        <mat-spinner diameter=\"30\"></mat-spinner>\n      </div>\n    </mat-option>\n    <ng-container *ngIf='searchTermInput.value && options.length === 0 && !loading'>\n      <mat-option>\n        <ng-content select='[empty-options]'></ng-content>\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading && !searchTermInput.value'>\n      <mat-option>\n        Start typing to search...\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading && options.length > 0'>\n      <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n        {{ displayFn(option) }}\n      </mat-option>\n    </ng-container>\n  </mat-autocomplete>\n</div>\n","import { Component, OnInit, Input, HostBinding, Optional, Self, ElementRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, Validators, NgControl } from '@angular/forms';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { Client } from 'src/app/core/models/client';\nimport { ClientBuilder } from 'src/app/core/builders/client-builder';\nimport { ClientsService } from 'src/app/core/services/clients.service';\nimport _ from 'lodash';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'app-client-select',\n  templateUrl: './client-select.component.html',\n  styleUrls: ['./client-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: ClientSelectComponent}],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class ClientSelectComponent implements OnInit, ControlValueAccessor, MatFormFieldControl<Client> {\n  static nextId = 0;\n\n  describedBy = '';\n  loading: boolean = false;\n  options: Client[] = [];\n  onChange = (_: any) => {};\n  onTouched = () => {};\n  errorState = false;\n  autocomplete: FormControl;\n  selectedClient: Client = null;\n  stateChanges = new Subject<void>();\n  focused: boolean = false;\n\n  @HostBinding() id = `client-select-${ClientSelectComponent.nextId++}`;\n\n\n  @Input()\n  get value(): Client | null {\n    if (this.selectedClient) {\n      return this.selectedClient;\n    }\n\n    return null;\n  }\n\n  set value(client: Client) {\n    this.selectedClient = client;\n    this.autocomplete.setValue(client.name);\n    this.onChange(this.selectedClient);\n\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  \n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    this.focused = true;\n  }\n\n  get empty() {\n    return !this.autocomplete.value;\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    public clientService: ClientsService,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _focusMonitor: FocusMonitor,\n  ) {\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.autocomplete = new FormControl('', [Validators.required]);\n\n    this.search = _.debounce(this.search, 700);\n\n    this.autocomplete.valueChanges.subscribe(res => {\n      this.loading = true;\n      this.search(res);\n    });\n\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      if (this.focused && !origin) {\n        this.onTouched();\n      }\n      \n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  writeValue(client: Client) {\n    let term = client ? client.name : '';\n    if(client) {\n      this.selectedClient = client;\n    }\n\n    this.autocomplete.setValue(term);\n\n    this.stateChanges.next();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  search(term) {    \n    if(term) {\n      this.clientService.getClients({\n        name: term,\n      }).subscribe(res => {\n        this.options = res;\n  \n        this.loading = false;\n      });\n    } else {\n      this.options = [];\n      this.loading = false;\n    }\n  }\n\n  displayFn(option: Client) {\n    if(option) { return option.name }\n  }\n\n  onOptionSelected(option) {\n    this.onChange(option);\n  }\n}\n","<div class=\"client-select\">\n  <app-ajax-autocomplete\n    [options]='options'\n    [loading]='loading'\n    [displayFn]='displayFn'\n    [formControl]='autocomplete'\n    (onOptionSelected)='onOptionSelected($event)'>\n    <p empty-options>No clients found</p>\n  </app-ajax-autocomplete>\n</div>\n","import { Component, OnInit, HostBinding, Input, Optional, Self, ElementRef, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { Drawing } from 'src/app/drawing/shared/drawing.model';\nimport { NgControl, FormControl, ControlValueAccessor } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DrawingRequestService } from 'src/app/core/services/drawing-request.service';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { DrawingService, DrawingParams } from 'src/app/drawing/shared/drawing.service';\nimport _ from 'lodash'\nimport { TenderDrawing } from 'src/app/core/models/tender-drawing';\n\n@Component({\n  selector: 'app-drawing-select',\n  templateUrl: './drawing-select.component.html',\n  styleUrls: ['./drawing-select.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: DrawingSelectComponent}],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class DrawingSelectComponent implements MatFormFieldControl<any>, OnDestroy {\n  static nextId = 0;\n  stateChanges = new Subject<void>();\n  selectedDrawingId: Number | string;\n  selectedDrawing: TenderDrawing;\n  focused: boolean = false;\n  describedBy = '';\n  errorState = false;\n  searchTermInput: FormControl;\n  subject = new Subject();\n  options: TenderDrawing[] = [];\n  loading: boolean = false;\n  shouldShowOptions = false;\n\n  @HostBinding() id = `drawing-select-${DrawingSelectComponent.nextId++}`;\n\n  @Input() projectId;\n  @Input() sbheDrawings: boolean = true;\n  @Input() clientDrawings: boolean = true;\n\n  @Input()\n  get value(): TenderDrawing {\n    return this.selectedDrawing;\n  }\n\n  set value(value: TenderDrawing) {\n    if(value) {\n      this.searchTermInput.setValue(value.currentDrawingNo);\n      this.selectedDrawing = value;\n      this.onChange(value);\n    }\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  \n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  get empty() {\n    return !this.searchTermInput.value;\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private _elementRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    private drawingService: DrawingService,\n  ) {\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.searchTermInput = new FormControl('');\n\n    this.searchTermInput.valueChanges.subscribe((searchTerm: string | TenderDrawing )=> {\n      this.loading = true;\n      let term = searchTerm;\n\n      if(typeof searchTerm !== 'string' && searchTerm) {\n        term = searchTerm.currentDrawingNo;\n      }\n\n      this.search(term);\n    });\n\n    this.search = _.debounce(this.search, 700);\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy():void {\n    this.stateChanges.complete();\n  }\n\n  onChange: (_: any) => void = (_: any) => {};\n  onTouched: () => void = () => {};\n\n  writeValue(drawing: TenderDrawing) {\n    if(drawing) {\n      this.searchTermInput.setValue(drawing);\n      this.selectedDrawingId = drawing.no;\n      this.selectedDrawing = drawing;\n    }\n    this.stateChanges.next();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  search(searchTerm) {\n    if(searchTerm) {\n      const params: DrawingParams = {\n        drawing_no: searchTerm,\n        sbhe_drawings: this.sbheDrawings,\n        client_drawings: this.clientDrawings,\n      }\n\n      this.drawingService.getTenderDrawings(this.projectId, params).subscribe(res => {\n        this.options = res;\n        this.loading = false;\n      });\n    } else {\n      this.options = [];\n      this.loading = false;\n    }\n  }\n\n  handleClick(event) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  displayFn(option: TenderDrawing) {\n    if(option) { return option.currentDrawingNo }\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this.searchTermInput.disable();\n  }\n\n  onOptionSelected($event) {\n    this.selectedDrawing = $event.option.value;\n    const option = $event.option.value;\n\n    this.onChange(option);\n  }\n}\n","<div class=\"drawing-select\" #drawingSelect>\n  <input matInput [formControl]='searchTermInput' autocomplete=\"off\" [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)='onOptionSelected($event)' #autoCompletePanel>\n    <mat-option *ngIf=\"loading\" class=\"loading\">\n      <div class=\"drawing-select__loader-container\">\n        <mat-spinner diameter=\"30\"></mat-spinner>\n      </div>\n    </mat-option>\n    <ng-container *ngIf='searchTermInput.value && options.length === 0 && !loading'>\n      <mat-option>\n        No data...\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading && !searchTermInput.value'>\n      <mat-option>\n        Start typing to search for a drawing no..\n      </mat-option>\n    </ng-container>\n    <ng-container *ngIf='!loading'>\n      <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n        {{ option.currentDrawingNo }}\n      </mat-option>\n    </ng-container>\n  </mat-autocomplete>\n</div>\n","import { Component, OnInit, Input, Optional, Self, ElementRef, OnDestroy, ViewChild, HostListener } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgControl, FormControl, ControlValueAccessor } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'upload-input',\n  templateUrl: './upload-input.component.html',\n  styleUrls: ['./upload-input.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: UploadInputComponent}],\n  host: {\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class UploadInputComponent implements ControlValueAccessor, MatFormFieldControl<File>, OnInit, OnDestroy {\n  static nextId = 0;\n\n  @ViewChild('fileInput') fileInput: ElementRef;\n  focused = false\n  id = `drawing-category-select-${UploadInputComponent.nextId++}`;\n  selectedFile: File = null;\n  stateChanges = new Subject<void>()\n  errorState = false\n  describedBy = ''\n\n\n  @Input()\n  get value(): File | null {\n    if (this.selectedFile) {\n      return this.selectedFile;\n    }\n\n    return null\n  }\n  set value(file: File | null) {\n    this.selectedFile = file;\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  public _placeholder: string;\n\n  get empty() {\n    return !this.selectedFile\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @HostListener('change', ['$event.target.files']) emitFiles( event: FileList ) {\n    const file = event && event.item(0);\n    this.selectedFile = file;\n\n    this.onChange(this.selectedFile)\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private _elementRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor\n  ) {\n\n    // Replace the provider from above with this.\n    if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    fm.monitor(_elementRef, true).subscribe(origin => {\n      this.focused = !!origin\n      this.stateChanges.next()\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy():void {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  onContainerClick(event: MouseEvent) {\n    return null;\n  }\n\n  onChange: (_: any) => void = (_: any) => {};\n  onTouched: () => void = () => {};\n\n  writeValue(value: File) {\n    this.selectedFile = value\n    this.stateChanges.next()\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  chooseFile() {\n    this.fileInput.nativeElement.click();\n  }\n}\n","<div class=\"upload-input\">\n  <input type=\"file\" #fileInput>\n  <span class='upload-input__file'>{{ selectedFile && selectedFile.name }}</span>\n  <button type='button' mat-raised-button color='primary' class='upload-input__button' (click)='chooseFile()'>Upload File</button>\n</div>\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function valueNotEqualTo(match: string): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    const valid = match != control.value\n    return valid ? null : {'valueNotEqualTo': {value: control.value}}\n  };\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadInputComponent } from './forms/upload-input/upload-input.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DrawingSelectComponent } from './forms/drawing-select/drawing-select.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { AjaxAutocompleteComponent } from './forms/ajax-autocomplete/ajax-autocomplete.component';\nimport { ClientSelectComponent } from './forms/client-select/client-select.component';\n\n\n@NgModule({\n  declarations: [UploadInputComponent, DrawingSelectComponent, AjaxAutocompleteComponent, ClientSelectComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatAutocompleteModule\n  ],\n  exports: [\n    UploadInputComponent,\n    DrawingSelectComponent,\n    ClientSelectComponent,\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DrawingService } from '../drawing/shared/drawing.service';\nimport { TypeDrawingService } from '../core/services/type-drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-shop-drawing',\n  templateUrl: './shop-drawing.component.html',\n  styleUrls: ['./shop-drawing.component.scss']\n})\nexport class ShopDrawingComponent implements OnInit {\n  shopDrawing;\n\n  get drawingTitle(): string {\n    return this.shopDrawing && this.shopDrawing.drawing_no ? this.shopDrawing.drawing_no : this.shopDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private typeDrawingService: TypeDrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.typeDrawingService.getShopDrawing(id);\n    })).subscribe(res => {\n      this.shopDrawing = res.data;\n    });\n  }\n\n}\n","<h1 *ngIf='shopDrawing'>Shop Drawing - {{ drawingTitle }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShopDrawingComponent } from './shop-drawing.component';\nimport { LayoutModule } from '../layout/layout.module';\nimport { HistoryModule } from '../history/history.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [ShopDrawingComponent],\n  imports: [\n    LayoutModule,\n    CommonModule,\n    HistoryModule,\n    RouterModule,\n  ]\n})\nexport class ShopDrawingModule { }\n","import { ShopDrawingComponent } from './shop-drawing.component';\nimport { TypeDrawingComponent as TypeDrawingHistoryComponent } from '../history/type-drawing/type-drawing.component';\n\n\nexport const SHOP_DRAWING_ROUTES = {\n  path: 'shop-drawing',\n  data: {\n    type: 'shop'\n  },\n  children: [\n    {\n      path: ':drawingId',\n      component: ShopDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TypeDrawingHistoryComponent,\n          data: {\n            type: 'shop'\n          },\n        }\n      ]\n    }\n  ]\n}\n","import { TenderDrawingComponent } from './tender-drawing.component';\nimport { TenderDrawingComponent as TenderDrawingHistory } from '../history/tender-drawing/tender-drawing.component';\n\n\nexport const TENDER_DRAWING_ROUTES = {\n  path: 'tender-drawing',\n  children: [\n    {\n      path: ':drawingId',\n      component: TenderDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TenderDrawingHistory,\n        }\n      ]\n    }\n  ]\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TenderDrawing } from '../core/models/tender-drawing';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DrawingService } from '../drawing/shared/drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tender-drawing',\n  templateUrl: './tender-drawing.component.html',\n  styleUrls: ['./tender-drawing.component.scss']\n})\nexport class TenderDrawingComponent implements OnInit {\n  tenderDrawing: TenderDrawing;\n\n  constructor(\n    private route: ActivatedRoute,\n    private drawingService: DrawingService,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.drawingService.getDrawing(id);\n    })).subscribe(res => {\n      this.tenderDrawing = res;\n    });\n  }\n}","<h1 *ngIf='tenderDrawing'>{{ tenderDrawing.title }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TenderDrawingComponent } from './tender-drawing.component';\nimport { HistoryModule } from '../history/history.module';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [TenderDrawingComponent],\n  imports: [\n    AppLayoutModule,\n    CommonModule,\n    HistoryModule,\n    RouterModule,\n  ],\n})\nexport class TenderDrawingModule { }\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TransmittalFormItemValues } from '../transmittal-form-item/transmittal-form-item.component';\n\n@Component({\n  selector: 'app-add-transmittal-form-item',\n  templateUrl: './add-transmittal-form-item.component.html',\n  styleUrls: ['./add-transmittal-form-item.component.scss']\n})\nexport class AddTransmittalFormItemComponent implements OnInit {\n  @Output() onFormSubmit: EventEmitter<any> = new EventEmitter();\n\n  addTransmittalFormItem: FormControl;\n\n  constructor(\n    private dialogRef: MatDialogRef<AddTransmittalFormItemComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: AddTransmittalFormItemDialogData,\n  ) { \n    const initialData: TransmittalFormItemValues = {\n      sn: data.currentSerialNo,\n      referenceNo: '',\n      qty: '',\n      drawing: '',\n    }\n\n    this.addTransmittalFormItem = new FormControl(initialData, [Validators.required]);\n  }\n\n  ngOnInit(): void {}\n\n  handleFormSubmit() {\n    this.onFormSubmit.emit(this.addTransmittalFormItem.value);\n\n    this.dialogRef.close();\n  }\n}\n\nexport interface AddTransmittalFormItemDialogData {\n  currentSerialNo?: number | string;\n  projectId?: number | string;\n}\n","<form (submit)='handleFormSubmit()'>\n  <h1 mat-dialog-title>Add New Item</h1>\n  <div mat-dialog-content>\n    <app-transmittal-form-item [formControl]='addTransmittalFormItem' [projectId]='data.projectId'></app-transmittal-form-item>\n  </div>\n  <div mat-dialog-footer>\n    <button mat-raised-button mat-dialog-close type='button'>Close</button> &nbsp;\n    <button mat-raised-button type='submit' color='primary' [disabled]='addTransmittalFormItem.invalid'>Submit</button>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TransmittalFormValues } from '../transmittal-form/transmittal-form.component';\nimport { TransmittalFormService } from 'src/app/core/services/transmittal-form.service';\nimport { DatePipe } from '@angular/common';\nimport { TransmittalFormPurposes } from 'src/app/core/enums/transmittal-form-purpose.enum';\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\nimport { Client } from 'src/app/core/models/client';\nimport { ProjectsService } from 'src/app/core/services/projects.service';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ProjectConfigurationService } from 'src/app/core/services/project-configuration.service';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { User, UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-create-transmittal-form',\n  templateUrl: './create-transmittal-form.component.html',\n  styleUrls: ['./create-transmittal-form.component.scss']\n})\nexport class CreateTransmittalFormComponent implements OnInit {\n  transmittalForm: FormControl;\n  projectId;\n  isLoading: boolean = false;\n  client: Client;\n  submitting: boolean = false;\n  recentlyCreatedTransmittalFile;\n  drawingTypes: Array<ProjectDrawingType> = [];\n  user: User;\n\n  @ViewChild('successConfirmation') public successConfirmation: SwalComponent;\n\n  constructor(\n    private transmittalFormService: TransmittalFormService,\n    private datePipe: DatePipe,\n    private projectService: ProjectsService,\n    private route: ActivatedRoute,\n    private projectConfigService: ProjectConfigurationService,\n    private userService: UserService,\n    private router: Router\n  ) {\n    const defaultValues: TransmittalFormValues = {\n      date: new Date(),\n      attn: '',\n      subject: '',\n      for: [false, false, false, false, false, false, false, false],\n      remarks: '',\n      type: '',\n      refNo: '',\n    }\n\n    this.transmittalForm = new FormControl(defaultValues)\n   }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const id = params.get('id');\n        this.projectId = id;\n        return this.projectService.getClient(id);\n      }),\n      switchMap((client) => {\n        this.client = client;\n\n        return this.projectConfigService.getProjectDrawingTypes(this.projectId)\n      }),\n      switchMap((config) => {\n        this.drawingTypes = config.drawingTypes;\n\n        return this.userService.currentUser;\n      })\n    )\n    .subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  handleFormSubmit() {\n    this.submitting = true;\n\n    const {\n      date,\n      attn,\n      subject,\n      for: purpose,\n      remarks,\n      type,\n      items,\n      refNo,\n      signature,\n      useSaved,\n    } = this.transmittalForm.value;\n\n    // TODO: Purpose should be many\n    const formFor = purpose.findIndex(reason => {\n      return reason;\n    });\n\n    const formItems = items.map(item => {\n      return {\n        serial_no: item.sn + 1,\n        drawing_id: item.drawing.id,\n        reference_no: item.referenceNo,\n        quantity: item.qty\n      }\n    });\n\n    const signatureUri = useSaved ? signature : this.dataURItoBlob(signature);\n\n    const body = {\n      client_id: this.client.id,\n      date: this.datePipe.transform(date, 'yyyy-MM-dd'),\n      attn,\n      subject,\n      remarks,\n      type_id: type,\n      ref_no: refNo,\n      items: JSON.stringify(formItems),\n      for: TransmittalFormPurposes[formFor],\n      created_by: this.user.employeeId,\n      signature: signatureUri,\n    };\n    debugger\n    this.transmittalFormService.createTransmittalForm(body).subscribe(res => {\n      this.submitting = false;\n      this.recentlyCreatedTransmittalFile = res.data;\n      \n      this.transmittalForm.setValue(null);\n      this.successConfirmation.swalOptions = {\n        text: `Transmittal Form #${this.recentlyCreatedTransmittalFile.ref_no} created`,\n      }\n      this.successConfirmation.fire();\n    });\n  }\n\n  openFile() {\n    const path = this.recentlyCreatedTransmittalFile.file_path;\n\n    const forceRefreshPrefix = new Date().getTime();\n    const win = window.open(`${environment.s3_url}${path}?${forceRefreshPrefix}`, '_blank');\n    win.focus();\n  }\n\n  dataURItoBlob(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    const byteString = atob(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to an ArrayBuffer\n    let ab = new ArrayBuffer(byteString.length);\n    let ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    //Old Code\n    //write the ArrayBuffer to a blob, and you're done\n    //var bb = new BlobBuilder();\n    //bb.append(ab);\n    //return bb.getBlob(mimeString);\n\n    //New Code\n    return new Blob([ab], {type: mimeString});\n  }\n  handleBack(){\n    let id = this.route.snapshot.params.id;\n    this.router.navigate(['/dashboard/projects', id])\n  }\n}\n","<div class=\"d-flex\">\n  <div>\n    <button mat-icon-button (click)=\"handleBack()\" color=\"primary\">\n      <mat-icon>arrow_back</mat-icon>&nbsp;Back\n    </button>\n  </div>\n  <div>\n    <h2>New Transmittal Form</h2>\n  </div>\n</div>\n<div class=\"create-tranmittal-form\">\n  <div class=\"content\">\n    <mat-card>\n      <mat-card-content>\n        <form (submit)=\"handleFormSubmit()\">\n          <app-transmittal-form\n            [formControl]=\"transmittalForm\"\n            [client]=\"client\"\n            [drawingTypes]=\"drawingTypes\"\n            [user]=\"user\"\n          >\n          </app-transmittal-form>\n          <div fxLayoutAlign=\"space-between\">\n            <button mat-raised-button color=\"accent\" (click)=\"handleBack()\">Cancel</button>\n            <button\n              mat-raised-button\n              color=\"primary\"\n              type=\"submit\"\n              [disabled]=\"transmittalForm.invalid || submitting\"\n            >\n              Save Transmittal Form\n            </button>\n          </div>\n\n          &nbsp;\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n<swal\n  #successConfirmation\n  title=\"Success\"\n  icon=\"success\"\n  (confirm)=\"openFile()\"\n>\n</swal>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, NG_VALUE_ACCESSOR, NG_VALIDATORS, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'app-transmittal-form-item',\n  templateUrl: './transmittal-form-item.component.html',\n  styleUrls: ['./transmittal-form-item.component.scss'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TransmittalFormItemComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => TransmittalFormItemComponent),\n      multi: true\n    }\n  ],\n})\nexport class TransmittalFormItemComponent implements OnInit , ControlValueAccessor{\n  transmittalFormItem: FormGroup;\n  @Input() projectId;\n\n  get value(): TransmittalFormItemValues {\n    return this.transmittalFormItem.value;\n  }\n\n  set value(value: TransmittalFormItemValues) {\n    this.transmittalFormItem.setValue(value);\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) { \n    this.transmittalFormItem = this.formBuilder.group({\n      sn: new FormControl('', []),\n      drawing: new FormControl('', [Validators.required]),\n      referenceNo: new FormControl('', [Validators.required]),\n      qty: new FormControl('', [Validators.required]),\n    });\n\n    this.transmittalFormItem.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n\n    if (value === null) {\n      this.transmittalFormItem.reset();\n    }\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if(isDisabled) {\n      this.transmittalFormItem.disable();\n    } else {\n      this.transmittalFormItem.enable();\n    }\n  }\n\n  validate(_: FormControl) {\n    return this.transmittalFormItem.valid ? null : { client: { valid: false, } }\n  }\n\n}\nexport interface TransmittalFormItemValues {\n  sn?: number | string;\n  qty: number | string;\n  referenceNo: string;\n  drawing: number | string;\n}\n","<div class='transmittal-form-item' [formGroup]='transmittalFormItem' cdkFocusRegionStart>\n  <mat-form-field class='form-control'>\n    <mat-label>Drawing</mat-label>\n    <app-drawing-select\n      formControlName='drawing'\n      [projectId]='projectId'  \n    >\n    </app-drawing-select>\n  </mat-form-field>\n  <mat-form-field class='form-control'>\n    <mat-label>Reference No.</mat-label>\n    <input type=\"text\" matInput formControlName='referenceNo'>\n  </mat-form-field>\n  <mat-form-field class='form-control'>\n    <mat-label>Qty</mat-label>\n    <input type=\"number\" matInput formControlName='qty'>\n  </mat-form-field>\n</div>\n","import { Component, OnInit, ViewChild, forwardRef, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddTransmittalFormItemComponent, AddTransmittalFormItemDialogData } from '../add-transmittal-form-item/add-transmittal-form-item.component';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { FormBuilder, FormGroup, Validators, FormControl, ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormArrayName, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Client } from 'src/app/core/models/client';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectDrawingType } from 'src/app/core/models/project-drawing-type';\nimport { SignaturePad } from 'angular2-signaturepad';\nimport { User } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-transmittal-form',\n  templateUrl: './transmittal-form.component.html',\n  styleUrls: ['./transmittal-form.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TransmittalFormComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => TransmittalFormComponent),\n      multi: true,\n    }\n  ],\n})\nexport class TransmittalFormComponent implements OnInit, ControlValueAccessor {\n  @ViewChild('itemsTable') table: MatTable<any>;\n  @ViewChild(SignaturePad) signaturePad: SignaturePad;\n  @Input()\n  get client() {\n    return this._client;\n  }\n\n  set client(client: Client) {\n    this._client = client;\n    if(client) {\n      this.transmittalForm.get('refNo').setValue(client.refFormat);\n    }\n  }\n\n  @Input() drawingTypes: Array<ProjectDrawingType> = [];\n  @Input() user: User;\n\n  private _client: Client;\n\n  columnsToDisplay = ['sn', 'description', 'referenceNo', 'qty', 'action'];\n  dataSource = new MatTableDataSource<any>();\n  projectId;\n\n  transmittalForm: FormGroup;\n  signature: string = '';\n  useSavedSignature: FormControl = new FormControl();\n\n  get value(): TransmittalFormValues {\n    return this.transmittalForm.value;\n  }\n\n  set value(value: TransmittalFormValues) {\n    this.transmittalForm.setValue(value);\n    \n    this.triggerOnChange();\n  }\n\n  get selectedClient(): Client {\n    return this.transmittalForm.get('client').value;\n  }\n\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  public signaturePadOptions: Object = {\n    'minWidth': 1,\n    'canvasWidth': 500,\n    'canvasHeight': 300\n  };\n\n  constructor(\n    private dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private route: ActivatedRoute,\n  ) {\n    this.transmittalForm = this.formBuilder.group({\n      date: new FormControl(new Date(), [Validators.required]),\n      attn: new FormControl('', [Validators.required]),\n      type: new FormControl(''),\n      refNo: new FormControl('', [Validators.required]),\n      subject: new FormControl('', [Validators.required]),\n      for: new FormArray([\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n        new FormControl(),\n      ]),\n      remarks: new FormControl(''),\n    });\n\n    this.transmittalForm.valueChanges.subscribe(value => {\n      this.triggerOnChange();\n    });\n\n    this.route.paramMap.subscribe(res => {\n      this.projectId = res.get('id');\n    });\n\n    this.useSavedSignature.valueChanges.subscribe(value => {\n      if(value) {\n        this.signature = this.user.signatureLink;\n\n        this.triggerOnChange();\n      } else {\n        this.signature = '';\n\n        this.triggerOnChange();\n      }\n    })\n  }\n\n  ngOnInit(): void {}\n  onRemove(index){\n    this.dataSource.data.splice(index, 1)\n    this.table.renderRows();\n    this.triggerOnChange();\n  }\n  showAddItem() {\n    const data: AddTransmittalFormItemDialogData = {\n      currentSerialNo: this.dataSource.data.length,\n      projectId: this.projectId,\n    };\n\n    const addItemDialog = this.dialog.open(AddTransmittalFormItemComponent, {\n      width: '720px',\n      data,\n    });\n\n    addItemDialog.componentInstance.onFormSubmit.subscribe(res => {\n      this.dataSource.data.push(res);\n\n      this.table.renderRows();\n      this.triggerOnChange();\n    });\n  }\n\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n\n    if (value === null) {\n      this.transmittalForm.reset();\n      this.dataSource.data = [];\n      this.clearSignature();\n      this.table.renderRows();\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if(isDisabled) {\n      this.transmittalForm.disable();\n    } else {\n      this.transmittalForm.enable();\n    }\n  }\n\n  validate(_: FormControl) {\n    const shouldRequireSignature = this.useSavedSignature.value ? true : this.signature;\n\n    return this.transmittalForm.valid && this.dataSource.data.length >= 1 && shouldRequireSignature ? null: { transmittalForm: { valid: false, } };\n  }\n\n  drawComplete() {\n    this.signature = this.signaturePad.toDataURL();\n\n    this.triggerOnChange();\n  }\n\n  clearSignature() {\n    this.signature = '';\n    this.signaturePad.clear();\n\n    this.triggerOnChange();\n  }\n\n  triggerOnChange() {\n    this.onChange({\n      ...this.transmittalForm.value,\n      items: this.dataSource.data,\n      signature: this.signature,\n      useSaved: this.useSavedSignature.value,\n    });\n    this.onTouched();\n  }\n}\n\nexport interface TransmittalFormValues {\n  date: Date | string,\n  attn: string;\n  subject: string;\n  for: Array<boolean>;\n  remarks?: string;\n  type: string;\n  refNo?: string;\n  signature?: string;\n  useSaved?: boolean;\n}\n","<div class=\"transmittal-form\" [formGroup]=\"transmittalForm\">\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\" fxLayoutAlign=\"space-between center\">\n    <div fxFlex=\"0 0 calc(25% - 16px)\">\n      <mat-radio-group class=\"transmittal-form-type\" formControlName=\"type\">\n        <mat-radio-button\n          [value]=\"drawingType.id\"\n          *ngFor=\"let drawingType of drawingTypes\"\n          >{{ drawingType.type }}</mat-radio-button\n        >\n        <!-- <mat-radio-button value='shop'>Shop</mat-radio-button>\n        <mat-radio-button value='as-built'>As Built</mat-radio-button> -->\n      </mat-radio-group>\n    </div>\n    <div fxFlex=\"0 0 calc(25%)\">\n      <mat-form-field class=\"form-control\">\n        <mat-label>Reference No:</mat-label>\n        <input matInput type=\"text\" formControlName=\"refNo\" />\n      </mat-form-field>\n      <mat-form-field class=\"form-control\">\n        <mat-label>Date:</mat-label>\n        <input matInput [matDatepicker]=\"formDate\" formControlName=\"date\" />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"formDate\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #formDate></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field class=\"form-control\">\n        <mat-label>Attn: </mat-label>\n        <input matInput type=\"text\" formControlName=\"attn\" />\n      </mat-form-field>\n    </div>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\">\n    <div fxFlex=\"0 0 calc(33% - 16px)\">\n      <mat-form-field class=\"form-control\">\n        <mat-label>Subject</mat-label>\n        <input matInput type=\"text\" formControlName=\"subject\" />\n      </mat-form-field>\n    </div>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\">\n    <div fxFlex=\"0 0 calc(50%)\" formArrayName=\"for\">\n      <div\n        fxLayout=\"row\"\n        fxLayoutAlign=\"space-between center\"\n        class=\"checkboxes-row\"\n      >\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\" value=\"for information\"\n            >for information</mat-checkbox\n          >\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for endorsement</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for action</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for review</mat-checkbox>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for record</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for approval</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">for distrbution</mat-checkbox>\n        </div>\n        <div fxFlex=\"0 0 25%\" class=\"checkbox-container\">\n          <mat-checkbox [formControlName]=\"0\">other</mat-checkbox>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"tranmsittal-form-items\">\n    <table mat-table [dataSource]=\"dataSource\" class=\"full-width\" #itemsTable>\n      <ng-container matColumnDef=\"sn\">\n        <th mat-header-cell *matHeaderCellDef>S/N</th>\n        <td mat-cell *matCellDef=\"let item; let i = index\">{{ i + 1 }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef>Description</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.drawing.no }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"referenceNo\">\n        <th mat-header-cell *matHeaderCellDef>Reference No.</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.referenceNo }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"qty\">\n        <th mat-header-cell *matHeaderCellDef>Qty.</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.qty }}</td>\n      </ng-container>\n      <!-- Action Column -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Action</th>\n        <td mat-cell *matCellDef=\"let item; let i = index\">\n          <button mat-button color=\"accent\" (click)=\"onRemove(i)\">\n            Remove\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n      <tr mat-row *matRowDef=\"let items; columns: columnsToDisplay\"></tr>\n    </table>\n\n    <div\n      class=\"transmittal-form-items__no-items text-center\"\n      *ngIf=\"dataSource.data.length === 0\"\n    >\n      <h3>No items in this transmittal form</h3>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"button\"\n        (click)=\"showAddItem()\"\n      >\n        Add One Now\n      </button>\n    </div>\n\n    <div\n      class=\"transmittal-form-items__actions\"\n      *ngIf=\"dataSource.data.length >= 1\"\n    >\n      <button\n        mat-raised-button\n        color=\"primary\"\n        type=\"button\"\n        (click)=\"showAddItem()\"\n      >\n        Add Another Item\n      </button>\n    </div>\n  </div>\n  <div class=\"transmittal-form-remarks\">\n    <div fxLayout=\"row\">\n      <div fxFlex=\"0 0 500px\">\n        <mat-form-field class=\"form-control\">\n          <mat-label>Remarks</mat-label>\n          <input type=\"text\" matInput formControlName=\"remarks\" />\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div class=\"transmittal-form__signature\">\n    <p>\n      <mat-checkbox\n        class=\"transmittal-form__use-saved\"\n        [formControl]=\"useSavedSignature\"\n        >Use saved signature</mat-checkbox\n      >\n    </p>\n    <ng-container *ngIf=\"!useSavedSignature.value\">\n      <div class=\"transmittal-form__signature-pad\">\n        <signature-pad\n          [options]=\"signaturePadOptions\"\n          (onEndEvent)=\"drawComplete()\"\n        >\n        </signature-pad>\n      </div>\n      <p class=\"text-center\">\n        <strong>Signature</strong>\n      </p>\n      <p>\n        <button\n          mat-raised-button\n          color=\"warn\"\n          type=\"button\"\n          (click)=\"clearSignature()\"\n        >\n          Clear\n        </button>\n      </p>\n    </ng-container>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-transmittal-forms',\n  templateUrl: './transmittal-forms.component.html',\n  styleUrls: ['./transmittal-forms.component.scss']\n})\nexport class TransmittalFormsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>transmittal-forms works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransmittalFormsComponent } from './transmittal-forms.component';\nimport { CreateTransmittalFormComponent } from './create-transmittal-form/create-transmittal-form.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { TransmittalFormComponent } from './transmittal-form/transmittal-form.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LayoutModule as AppLayoutModule } from '../layout/layout.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { AddTransmittalFormItemComponent } from './add-transmittal-form-item/add-transmittal-form-item.component';\nimport { TransmittalFormItemComponent } from './transmittal-form-item/transmittal-form-item.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { SignaturePadModule } from 'angular2-signaturepad';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n\n\n@NgModule({\n  declarations: [TransmittalFormsComponent, CreateTransmittalFormComponent, TransmittalFormComponent, AddTransmittalFormItemComponent, TransmittalFormItemComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SweetAlert2Module,\n    AppLayoutModule,\n    FlexLayoutModule,\n    SharedModule,\n    SignaturePadModule,\n    MatIconModule\n  ]\n})\nexport class TransmittalFormsModule { }\n","import { Routes } from '@angular/router';\nimport { CreateTransmittalFormComponent } from './create-transmittal-form/create-transmittal-form.component';\n\nexport const TRANSMITTAL_FORMS_ROUTES = {\n  path: 'transmittal-forms',\n  children: [\n     {\n       path: 'create',\n       component: CreateTransmittalFormComponent,\n     },\n  ]\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { TypeDrawingService } from '../core/services/type-drawing.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-type-drawing',\n  templateUrl: './type-drawing.component.html',\n  styleUrls: ['./type-drawing.component.scss']\n})\nexport class TypeDrawingComponent implements OnInit {\n  typeDrawing;\n\n  get drawingTitle(): string {\n    return this.typeDrawing && this.typeDrawing.drawing_no ? this.typeDrawing.drawing_no : this.typeDrawing.drawing.drawing_no;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private typeDrawingService: TypeDrawingService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((res: ParamMap) => {\n      const id = res.get('drawingId');\n      return this.typeDrawingService.getTypeDrawing(id);\n    })).subscribe(res => {\n      this.typeDrawing = res.data;\n    });\n  }\n\n}\n","<h1 *ngIf='typeDrawing'>{{ typeDrawing.drawing_type.type }} Drawing - {{ drawingTitle }}</h1>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypeDrawingComponent } from './type-drawing.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { HistoryModule } from '../history/history.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [TypeDrawingComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    HistoryModule,\n    RouterModule,\n  ]\n})\nexport class TypeDrawingModule { }\n","import { TypeDrawingComponent } from './type-drawing.component';\nimport { TypeDrawingComponent as TypeDrawingHistoryComponent } from '../history/type-drawing/type-drawing.component';\n\n\nexport const TYPE_DRAWING_ROUTES = {\n  path: 'type-drawing',\n  children: [\n    {\n      path: ':drawingId',\n      component: TypeDrawingComponent,\n      children: [\n        {\n          path: 'history',\n          component: TypeDrawingHistoryComponent,\n        }\n      ]\n    }\n  ]\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorized',\n  templateUrl: './unauthorized.component.html',\n  styleUrls: ['./unauthorized.component.scss']\n})\nexport class UnauthorizedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>unauthorized works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // api_url: `http://localhost:8000/`,\n  // api_url: `http://api-drawing-prod.sbhe-ume-pm.net/api/v1`,\n  api_url: `http://api-drawing-staging.sbhe-ume-pm.net/api/v1`,\n  s3_url: \"https://s3-ap-southeast-1.amazonaws.com/sbhe-dev/\",\n  sbhePmUrl: \"http://onion.sbhe-ume-pm.net/\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}